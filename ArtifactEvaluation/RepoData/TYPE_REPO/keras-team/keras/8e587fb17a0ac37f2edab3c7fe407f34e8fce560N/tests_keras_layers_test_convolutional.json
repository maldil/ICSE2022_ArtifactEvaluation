[{"lineNumber": 18, "col_offset": 0, "nodeName": "test_convolution_1d", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "test_atrous_conv_1d", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "test_maxpooling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_averagepooling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "test_convolution_2d", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "test_deconvolution_2d", "type": "Callable[[], Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "test_atrous_conv_2d", "type": "Callable[[], Any]"}, {"lineNumber": 256, "col_offset": 0, "nodeName": "test_globalpooling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 264, "col_offset": 0, "nodeName": "test_globalpooling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 280, "col_offset": 0, "nodeName": "test_globalpooling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 296, "col_offset": 0, "nodeName": "test_maxpooling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 308, "col_offset": 0, "nodeName": "test_averagepooling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 320, "col_offset": 0, "nodeName": "test_convolution_3d", "type": "Callable[[], Any]"}, {"lineNumber": 364, "col_offset": 0, "nodeName": "test_maxpooling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 376, "col_offset": 0, "nodeName": "test_averagepooling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 388, "col_offset": 0, "nodeName": "test_zero_padding_1d", "type": "Callable[[], Any]"}, {"lineNumber": 428, "col_offset": 0, "nodeName": "test_zero_padding_2d", "type": "Callable[[], Any]"}, {"lineNumber": 496, "col_offset": 0, "nodeName": "test_zero_padding_3d", "type": "Callable[[], Any]"}, {"lineNumber": 525, "col_offset": 0, "nodeName": "test_upsampling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 532, "col_offset": 0, "nodeName": "test_upsampling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 573, "col_offset": 0, "nodeName": "test_upsampling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 618, "col_offset": 0, "nodeName": "test_cropping_1d", "type": "Callable[[], Any]"}, {"lineNumber": 630, "col_offset": 0, "nodeName": "test_cropping_2d", "type": "Callable[[], Any]"}, {"lineNumber": 670, "col_offset": 0, "nodeName": "test_cropping_3d", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 3, "nodeName": "_BACKEND", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "_convolution_border_modes", "type": "List[str]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "_convolution_border_modes", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "filter_length", "type": "int"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "_convolution_border_modes", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "filter_length", "type": "int"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "_convolution_border_modes", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "stride", "type": "int"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "_convolution_border_modes", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "_convolution_border_modes", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "_convolution_border_modes", "type": "List[str]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "_convolution_border_modes", "type": "List[str]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "pool_size", "type": "Tuple[int, int]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "kernel_dim1", "type": "int"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "kernel_dim2", "type": "int"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "kernel_dim3", "type": "int"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "_convolution_border_modes", "type": "List[str]"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "input", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "time_length", "type": "int"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "input", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 712, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 12, "col_offset": 3, "nodeName": "K", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "stride", "type": "int"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "GlobalMaxPooling1D", "type": "Type[keras.layers.pooling.GlobalMaxPooling1D]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "GlobalAveragePooling1D", "type": "Type[keras.layers.pooling.GlobalAveragePooling1D]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "GlobalMaxPooling2D", "type": "Type[keras.layers.pooling.GlobalMaxPooling2D]"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "GlobalMaxPooling2D", "type": "Type[keras.layers.pooling.GlobalMaxPooling2D]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "GlobalAveragePooling2D", "type": "Type[keras.layers.pooling.GlobalAveragePooling2D]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "GlobalAveragePooling2D", "type": "Type[keras.layers.pooling.GlobalAveragePooling2D]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "GlobalMaxPooling3D", "type": "Type[keras.layers.pooling.GlobalMaxPooling3D]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "GlobalMaxPooling3D", "type": "Type[keras.layers.pooling.GlobalMaxPooling3D]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "GlobalAveragePooling3D", "type": "Type[keras.layers.pooling.GlobalAveragePooling3D]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "GlobalAveragePooling3D", "type": "Type[keras.layers.pooling.GlobalAveragePooling3D]"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "pool_size", "type": "Tuple[int, int]"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "subsample", "type": "Tuple[int, int, int]"}, {"lineNumber": 393, "col_offset": 13, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 393, "col_offset": 35, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 394, "col_offset": 20, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 410, "col_offset": 13, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 418, "col_offset": 13, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 419, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "image_dim_ordering", "type": "Callable[[], str]"}, {"lineNumber": 435, "col_offset": 11, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 437, "col_offset": 7, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 458, "col_offset": 7, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "offset", "type": "int"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 471, "col_offset": 13, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 472, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 473, "col_offset": 7, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 508, "col_offset": 15, "nodeName": "ZeroPadding3D", "type": "Type[keras.layers.convolutional.ZeroPadding3D]"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "ZeroPadding3D", "type": "Type[keras.layers.convolutional.ZeroPadding3D]"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 515, "col_offset": 13, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 516, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 516, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "get_config", "type": "Callable[[], Dict[str, Tuple[Any, ...]]]"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 527, "col_offset": 15, "nodeName": "UpSampling1D", "type": "Type[keras.layers.convolutional.UpSampling1D]"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "length_row", "type": "int"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 623, "col_offset": 27, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 623, "col_offset": 39, "nodeName": "time_length", "type": "int"}, {"lineNumber": 623, "col_offset": 52, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 625, "col_offset": 15, "nodeName": "Cropping1D", "type": "Type[keras.layers.convolutional.Cropping1D]"}, {"lineNumber": 636, "col_offset": 19, "nodeName": "image_dim_ordering", "type": "Callable[[], str]"}, {"lineNumber": 638, "col_offset": 7, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "Cropping2D", "type": "Type[keras.layers.convolutional.Cropping2D]"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "Cropping2D", "type": "Type[keras.layers.convolutional.Cropping2D]"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 654, "col_offset": 13, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 655, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 655, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 657, "col_offset": 7, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 667, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 667, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 677, "col_offset": 19, "nodeName": "image_dim_ordering", "type": "Callable[[], str]"}, {"lineNumber": 679, "col_offset": 7, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 687, "col_offset": 15, "nodeName": "Cropping3D", "type": "Type[keras.layers.convolutional.Cropping3D]"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "Cropping3D", "type": "Type[keras.layers.convolutional.Cropping3D]"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 694, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 695, "col_offset": 13, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 696, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 698, "col_offset": 7, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 710, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 710, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "atrous_rate", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "AveragePooling1D", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "rows", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "cols", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "atrous_rate", "type": "Tuple[int, int]"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "multiplier", "type": "int"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 19, "nodeName": "MaxPooling3D", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "AveragePooling3D", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 399, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 405, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 418, "col_offset": 19, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 418, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 439, "col_offset": 9, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 451, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 456, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 463, "col_offset": 9, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "offset", "type": "int"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 471, "col_offset": 19, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 471, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 483, "col_offset": 9, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 503, "col_offset": 21, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 504, "col_offset": 21, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 504, "col_offset": 37, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 504, "col_offset": 53, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 505, "col_offset": 21, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 508, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 510, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 515, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 516, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 521, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 527, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 540, "col_offset": 11, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "length_col", "type": "int"}, {"lineNumber": 581, "col_offset": 11, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 625, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 627, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 636, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 639, "col_offset": 31, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 639, "col_offset": 43, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 640, "col_offset": 31, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 640, "col_offset": 47, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 642, "col_offset": 31, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 643, "col_offset": 31, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 643, "col_offset": 47, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 644, "col_offset": 31, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 649, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 651, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 652, "col_offset": 50, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 654, "col_offset": 19, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 654, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 655, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 658, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 663, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 677, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 680, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 680, "col_offset": 31, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 680, "col_offset": 43, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 681, "col_offset": 31, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 681, "col_offset": 47, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 681, "col_offset": 63, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 683, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 683, "col_offset": 31, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 684, "col_offset": 31, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 684, "col_offset": 47, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 685, "col_offset": 31, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 685, "col_offset": 47, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 687, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 690, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 692, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 693, "col_offset": 50, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 694, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 695, "col_offset": 19, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 695, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 699, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 705, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 713, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "Convolution1D", "type": "Type[keras.layers.convolutional.Convolution1D]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "Convolution1D", "type": "Type[keras.layers.convolutional.Convolution1D]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "MaxPooling1D", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "Convolution2D", "type": "Type[keras.layers.convolutional.Convolution2D]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "Convolution2D", "type": "Type[keras.layers.convolutional.Convolution2D]"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "conv_input_length", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "conv_input_length", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "Deconvolution2D", "type": "Type[keras.layers.convolutional.Deconvolution2D]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "Deconvolution2D", "type": "Type[keras.layers.convolutional.Deconvolution2D]"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 338, "col_offset": 23, "nodeName": "Convolution3D", "type": "Type[keras.layers.convolutional.Convolution3D]"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "Convolution3D", "type": "Type[keras.layers.convolutional.Convolution3D]"}, {"lineNumber": 369, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 399, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 405, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 413, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 418, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 423, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 438, "col_offset": 25, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 438, "col_offset": 37, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 438, "col_offset": 51, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 438, "col_offset": 65, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 451, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 462, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 471, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 510, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 519, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 520, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 541, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 541, "col_offset": 35, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 541, "col_offset": 47, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 541, "col_offset": 59, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 542, "col_offset": 35, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 544, "col_offset": 35, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 544, "col_offset": 47, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 544, "col_offset": 61, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 545, "col_offset": 35, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 582, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 582, "col_offset": 35, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 582, "col_offset": 47, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 582, "col_offset": 59, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 582, "col_offset": 75, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 583, "col_offset": 35, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 585, "col_offset": 35, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 585, "col_offset": 47, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 585, "col_offset": 63, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 585, "col_offset": 79, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 586, "col_offset": 35, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 627, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 647, "col_offset": 35, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 648, "col_offset": 39, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 649, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 654, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 680, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 683, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 688, "col_offset": 35, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 689, "col_offset": 39, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 690, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 695, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "AtrousConv1D", "type": "Type[keras.layers.convolutional.AtrousConvolution1D]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "AtrousConv1D", "type": "Type[keras.layers.convolutional.AtrousConvolution1D]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "stride", "type": "int"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 150, "col_offset": 61, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 151, "col_offset": 61, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "AtrousConv2D", "type": "Type[keras.layers.convolutional.AtrousConvolution2D]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "AtrousConv2D", "type": "Type[keras.layers.convolutional.AtrousConvolution2D]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "SeparableConv2D", "type": "Type[keras.layers.convolutional.SeparableConvolution2D]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "SeparableConv2D", "type": "Type[keras.layers.convolutional.SeparableConvolution2D]"}, {"lineNumber": 302, "col_offset": 38, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "pool_size", "type": "Tuple[int, int]"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 27, "nodeName": "AveragePooling2D", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 335, "col_offset": 41, "nodeName": "subsample", "type": "Tuple[int, int, int]"}, {"lineNumber": 338, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 370, "col_offset": 38, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 372, "col_offset": 40, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 382, "col_offset": 38, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 384, "col_offset": 40, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 440, "col_offset": 37, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 440, "col_offset": 49, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 440, "col_offset": 63, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 460, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 461, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 467, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 475, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 477, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 479, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 481, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 492, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 541, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 549, "col_offset": 24, "nodeName": "UpSampling2D", "type": "Type[keras.layers.convolutional.UpSampling2D]"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 552, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling2D"}, {"lineNumber": 554, "col_offset": 28, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 554, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 555, "col_offset": 19, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 563, "col_offset": 19, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 564, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 567, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 570, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 570, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 570, "col_offset": 43, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 582, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 594, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 680, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 683, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 44, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "filter_length", "type": "int"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 35, "col_offset": 51, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 36, "col_offset": 58, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "filter_length", "type": "int"}, {"lineNumber": 41, "col_offset": 46, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "atrous_rate", "type": "int"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "stride", "type": "int"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 121, "col_offset": 46, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 122, "col_offset": 44, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 123, "col_offset": 56, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 123, "col_offset": 64, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 129, "col_offset": 46, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 134, "col_offset": 56, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 157, "col_offset": 46, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 160, "col_offset": 60, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 160, "col_offset": 68, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 174, "col_offset": 48, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 174, "col_offset": 60, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 174, "col_offset": 68, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 189, "col_offset": 45, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "atrous_rate", "type": "Tuple[int, int]"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 228, "col_offset": 45, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 313, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 339, "col_offset": 44, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 340, "col_offset": 46, "nodeName": "kernel_dim1", "type": "int"}, {"lineNumber": 341, "col_offset": 46, "nodeName": "kernel_dim2", "type": "int"}, {"lineNumber": 342, "col_offset": 46, "nodeName": "kernel_dim3", "type": "int"}, {"lineNumber": 343, "col_offset": 46, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 344, "col_offset": 44, "nodeName": "subsample", "type": "Tuple[int, int, int]"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 346, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 346, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 346, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 347, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 350, "col_offset": 44, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 351, "col_offset": 46, "nodeName": "kernel_dim1", "type": "int"}, {"lineNumber": 352, "col_offset": 46, "nodeName": "kernel_dim2", "type": "int"}, {"lineNumber": 353, "col_offset": 46, "nodeName": "kernel_dim3", "type": "int"}, {"lineNumber": 354, "col_offset": 46, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 358, "col_offset": 44, "nodeName": "subsample", "type": "Tuple[int, int, int]"}, {"lineNumber": 359, "col_offset": 36, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 360, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 360, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 360, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 361, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 413, "col_offset": 37, "nodeName": "offset", "type": "int"}, {"lineNumber": 421, "col_offset": 37, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 423, "col_offset": 37, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 466, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 485, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 487, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 518, "col_offset": 37, "nodeName": "offset", "type": "int"}, {"lineNumber": 519, "col_offset": 40, "nodeName": "offset", "type": "int"}, {"lineNumber": 520, "col_offset": 43, "nodeName": "offset", "type": "int"}, {"lineNumber": 541, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 549, "col_offset": 24, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 551, "col_offset": 33, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling2D"}, {"lineNumber": 552, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 553, "col_offset": 31, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 553, "col_offset": 42, "nodeName": "input", "type": "Any"}, {"lineNumber": 554, "col_offset": 28, "nodeName": "K", "type": "module"}, {"lineNumber": 564, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 564, "col_offset": 45, "nodeName": "input", "type": "Any"}, {"lineNumber": 564, "col_offset": 52, "nodeName": "length_row", "type": "int"}, {"lineNumber": 565, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 565, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 565, "col_offset": 59, "nodeName": "length_col", "type": "int"}, {"lineNumber": 567, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 567, "col_offset": 45, "nodeName": "input", "type": "Any"}, {"lineNumber": 567, "col_offset": 52, "nodeName": "length_row", "type": "int"}, {"lineNumber": 568, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 568, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 568, "col_offset": 59, "nodeName": "length_col", "type": "int"}, {"lineNumber": 582, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 590, "col_offset": 28, "nodeName": "UpSampling3D", "type": "Type[keras.layers.convolutional.UpSampling3D]"}, {"lineNumber": 593, "col_offset": 20, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 593, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 594, "col_offset": 29, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling3D"}, {"lineNumber": 595, "col_offset": 32, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 595, "col_offset": 39, "nodeName": "output", "type": "Any"}, {"lineNumber": 596, "col_offset": 23, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 606, "col_offset": 23, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 607, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 608, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 609, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 611, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 612, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 613, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 615, "col_offset": 20, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 615, "col_offset": 36, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 615, "col_offset": 47, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "filter_length", "type": "int"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 69, "col_offset": 55, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "atrous_rate", "type": "int"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 71, "col_offset": 52, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 71, "col_offset": 62, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "filter_length", "type": "int"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "atrous_rate", "type": "int"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 82, "col_offset": 52, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 82, "col_offset": 62, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 156, "col_offset": 60, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 156, "col_offset": 71, "nodeName": "rows", "type": "Any"}, {"lineNumber": 156, "col_offset": 77, "nodeName": "cols", "type": "Any"}, {"lineNumber": 167, "col_offset": 48, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 167, "col_offset": 60, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 167, "col_offset": 71, "nodeName": "rows", "type": "Any"}, {"lineNumber": 167, "col_offset": 77, "nodeName": "cols", "type": "Any"}, {"lineNumber": 195, "col_offset": 48, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 198, "col_offset": 50, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "atrous_rate", "type": "Tuple[int, int]"}, {"lineNumber": 201, "col_offset": 40, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 201, "col_offset": 52, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 201, "col_offset": 60, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 201, "col_offset": 68, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 207, "col_offset": 50, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 212, "col_offset": 50, "nodeName": "atrous_rate", "type": "Tuple[int, int]"}, {"lineNumber": 213, "col_offset": 40, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 213, "col_offset": 60, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 213, "col_offset": 68, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 232, "col_offset": 48, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 235, "col_offset": 50, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 236, "col_offset": 48, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 237, "col_offset": 55, "nodeName": "multiplier", "type": "int"}, {"lineNumber": 238, "col_offset": 40, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 238, "col_offset": 52, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 238, "col_offset": 60, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 238, "col_offset": 68, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 241, "col_offset": 48, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 244, "col_offset": 50, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 251, "col_offset": 48, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 252, "col_offset": 55, "nodeName": "multiplier", "type": "int"}, {"lineNumber": 253, "col_offset": 40, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 253, "col_offset": 60, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 253, "col_offset": 68, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 314, "col_offset": 46, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 315, "col_offset": 50, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 316, "col_offset": 48, "nodeName": "pool_size", "type": "Tuple[int, int]"}, {"lineNumber": 460, "col_offset": 41, "nodeName": "offset", "type": "int"}, {"lineNumber": 461, "col_offset": 44, "nodeName": "offset", "type": "int"}, {"lineNumber": 475, "col_offset": 41, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 477, "col_offset": 41, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 479, "col_offset": 44, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 481, "col_offset": 44, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 550, "col_offset": 26, "nodeName": "length_row", "type": "int"}, {"lineNumber": 550, "col_offset": 38, "nodeName": "length_col", "type": "int"}, {"lineNumber": 553, "col_offset": 31, "nodeName": "K", "type": "module"}, {"lineNumber": 556, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 556, "col_offset": 49, "nodeName": "length_row", "type": "int"}, {"lineNumber": 556, "col_offset": 62, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 557, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 557, "col_offset": 49, "nodeName": "length_col", "type": "int"}, {"lineNumber": 557, "col_offset": 62, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 559, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 559, "col_offset": 49, "nodeName": "length_row", "type": "int"}, {"lineNumber": 559, "col_offset": 62, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 560, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 560, "col_offset": 49, "nodeName": "length_col", "type": "int"}, {"lineNumber": 560, "col_offset": 62, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 564, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 565, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 567, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 590, "col_offset": 28, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 592, "col_offset": 37, "nodeName": "dim_ordering", "type": "str"}, {"lineNumber": 593, "col_offset": 20, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling3D"}, {"lineNumber": 593, "col_offset": 32, "nodeName": "input", "type": "Any"}, {"lineNumber": 594, "col_offset": 35, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 594, "col_offset": 46, "nodeName": "input", "type": "Any"}, {"lineNumber": 595, "col_offset": 32, "nodeName": "K", "type": "module"}, {"lineNumber": 607, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 607, "col_offset": 49, "nodeName": "input", "type": "Any"}, {"lineNumber": 607, "col_offset": 56, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 608, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 608, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 608, "col_offset": 63, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 609, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 609, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 609, "col_offset": 63, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 611, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 611, "col_offset": 49, "nodeName": "input", "type": "Any"}, {"lineNumber": 611, "col_offset": 56, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 612, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 612, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 612, "col_offset": 63, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 613, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 613, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 613, "col_offset": 63, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 660, "col_offset": 29, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 661, "col_offset": 29, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 664, "col_offset": 29, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 665, "col_offset": 29, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 701, "col_offset": 29, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 702, "col_offset": 29, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 703, "col_offset": 29, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 706, "col_offset": 29, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 707, "col_offset": 29, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 708, "col_offset": 29, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 465, "col_offset": 44, "nodeName": "offset", "type": "int"}, {"lineNumber": 466, "col_offset": 47, "nodeName": "offset", "type": "int"}, {"lineNumber": 485, "col_offset": 44, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 487, "col_offset": 44, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 489, "col_offset": 47, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 491, "col_offset": 47, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 556, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 557, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 559, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 560, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 591, "col_offset": 30, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 591, "col_offset": 43, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 591, "col_offset": 56, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 594, "col_offset": 35, "nodeName": "K", "type": "module"}, {"lineNumber": 597, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 597, "col_offset": 53, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 597, "col_offset": 67, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 598, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 598, "col_offset": 53, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 598, "col_offset": 67, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 599, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 599, "col_offset": 53, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 599, "col_offset": 67, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 601, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 601, "col_offset": 53, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 601, "col_offset": 67, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 602, "col_offset": 53, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 602, "col_offset": 67, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 603, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 603, "col_offset": 53, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 603, "col_offset": 67, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 607, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 608, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 609, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 611, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 612, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 613, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 660, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 661, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 664, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 665, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 701, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 702, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 703, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 706, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 707, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 708, "col_offset": 46, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 597, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 598, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 599, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 601, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 603, "col_offset": 31, "nodeName": "np_output", "type": "Any"}]