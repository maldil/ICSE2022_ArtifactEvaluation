[{"lineNumber": 36, "col_offset": 0, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "_get_layer_computation_test_cases", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "PreprocessingLayerTest", "type": "Type[keras.layers.preprocessing.preprocessing_test_utils.PreprocessingLayerTest]"}, {"lineNumber": 44, "col_offset": 2, "nodeName": "test_cases", "type": "Tuple[Dict[str, Union[str, numpy.ndarray, int]], Dict[str, Union[str, numpy.ndarray, int]], Dict[str, Optional[Union[str, numpy.ndarray]]], Dict[str, Optional[Union[str, numpy.ndarray]]], Dict[str, Union[str, numpy.ndarray, int]], Dict[str, Union[str, numpy.ndarray, Tuple[int, int]]], Dict[str, Any]]"}, {"lineNumber": 111, "col_offset": 2, "nodeName": "crossed_test_cases", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "use_dataset", "type": "bool"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "crossed_test_cases", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "preprocessing_test_utils", "type": "module"}, {"lineNumber": 342, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 37, "col_offset": 5, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "Normalization", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "Normalization", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "case", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "test_cases", "type": "Tuple[Dict[str, Union[str, numpy.ndarray, int]], Dict[str, Union[str, numpy.ndarray, int]], Dict[str, Optional[Union[str, numpy.ndarray]]], Dict[str, Optional[Union[str, numpy.ndarray]]], Dict[str, Union[str, numpy.ndarray, int]], Dict[str, Union[str, numpy.ndarray, Tuple[int, int]]], Dict[str, Any]]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "cls", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "combiner", "type": "keras.layers.preprocessing.normalization._NormalizingCombiner"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "expected", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "expected_accumulator", "type": "List[numpy.ndarray]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "combiner", "type": "keras.layers.preprocessing.normalization._NormalizingCombiner"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "expected_accumulator", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 219, "col_offset": 7, "nodeName": "use_dataset", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "cls", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "_run_eagerly", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "output_data", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "mean", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "var", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "direct_set_layer", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "_run_eagerly", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "output_data", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "cls", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "cls", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "weights", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "cls", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "cls", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "cls", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "cls", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "cls", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "expect", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "cls", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 343, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 37, "col_offset": 5, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "normalization", "type": "module"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "normalization_v1", "type": "module"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "case", "type": "Any"}, {"lineNumber": 116, "col_offset": 9, "nodeName": "use_dataset", "type": "bool"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "use_dataset", "type": "bool"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "output_data", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "output_data", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "_NormalizingCombiner", "type": "Type[keras.layers.preprocessing.normalization._NormalizingCombiner]"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "_create_accumulator", "type": "Callable"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "validate_accumulator_serialize_and_deserialize", "type": "Any"}, {"lineNumber": 152, "col_offset": 56, "nodeName": "combiner", "type": "keras.layers.preprocessing.normalization._NormalizingCombiner"}, {"lineNumber": 152, "col_offset": 66, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "expected_accumulator", "type": "List[numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "validate_accumulator_uniqueness", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "combiner", "type": "keras.layers.preprocessing.normalization._NormalizingCombiner"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "validate_accumulator_extract", "type": "Any"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "combiner", "type": "keras.layers.preprocessing.normalization._NormalizingCombiner"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "expected", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "validate_accumulator_extract_and_restore", "type": "Any"}, {"lineNumber": 156, "col_offset": 50, "nodeName": "combiner", "type": "keras.layers.preprocessing.normalization._NormalizingCombiner"}, {"lineNumber": 156, "col_offset": 60, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "expected", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "_NormalizingCombiner", "type": "Type[keras.layers.preprocessing.normalization._NormalizingCombiner]"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "_create_accumulator", "type": "Callable"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "validate_accumulator_computation", "type": "Any"}, {"lineNumber": 213, "col_offset": 42, "nodeName": "combiner", "type": "keras.layers.preprocessing.normalization._NormalizingCombiner"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "data", "type": "Any"}, {"lineNumber": 213, "col_offset": 58, "nodeName": "expected_accumulator", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "adapt_data", "type": "Any"}, {"lineNumber": 223, "col_offset": 6, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 226, "col_offset": 10, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "adapt_data", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "Input", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "layer", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 232, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "predict", "type": "Any"}, {"lineNumber": 234, "col_offset": 32, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "output_data", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "weights", "type": "Any"}, {"lineNumber": 239, "col_offset": 10, "nodeName": "weights", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "cls", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "Input", "type": "Any"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "direct_set_layer", "type": "Any"}, {"lineNumber": 243, "col_offset": 30, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 244, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "predict", "type": "Any"}, {"lineNumber": 246, "col_offset": 32, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "output_data", "type": "Any"}, {"lineNumber": 250, "col_offset": 10, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "build", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 258, "col_offset": 10, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "build", "type": "Any"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 278, "col_offset": 10, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 281, "col_offset": 13, "nodeName": "layer", "type": "Any"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 283, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 291, "col_offset": 10, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 305, "col_offset": 10, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 319, "col_offset": 10, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "expect", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 10, "nodeName": "get_layer_class", "type": "Callable[[], Any]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "summary", "type": "Any"}, {"lineNumber": 343, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "int32", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "float32", "type": "Any"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "float32", "type": "Any"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "float32", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "case", "type": "Any"}, {"lineNumber": 119, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "case", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "CustomObjectScope", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "layer_test", "type": "Any"}, {"lineNumber": 132, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "normalization", "type": "module"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "combiner", "type": "keras.layers.preprocessing.normalization._NormalizingCombiner"}, {"lineNumber": 149, "col_offset": 56, "nodeName": "expected", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "expected", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 56, "nodeName": "expected", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "normalization", "type": "module"}, {"lineNumber": 211, "col_offset": 55, "nodeName": "axis", "type": "Any"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "combiner", "type": "keras.layers.preprocessing.normalization._NormalizingCombiner"}, {"lineNumber": 212, "col_offset": 58, "nodeName": "expected", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "batch", "type": "Any"}, {"lineNumber": 227, "col_offset": 21, "nodeName": "axis", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "keras", "type": "module"}, {"lineNumber": 230, "col_offset": 35, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "keras", "type": "module"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "layer", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "axis", "type": "Any"}, {"lineNumber": 241, "col_offset": 43, "nodeName": "mean", "type": "Any"}, {"lineNumber": 241, "col_offset": 58, "nodeName": "var", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "keras", "type": "module"}, {"lineNumber": 242, "col_offset": 35, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "keras", "type": "module"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "layer", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "weights", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 36, "nodeName": "weights", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "layer", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 36, "nodeName": "weights", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 36, "nodeName": "weights", "type": "Any"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 271, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 283, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 284, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 292, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "cls", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "axis", "type": "Any"}, {"lineNumber": 307, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 307, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "build", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "axis", "type": "Any"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 32, "nodeName": "layer", "type": "Any"}, {"lineNumber": 327, "col_offset": 38, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "keras", "type": "module"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "layer", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 343, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "case", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "case", "type": "Any"}, {"lineNumber": 119, "col_offset": 6, "nodeName": "crossed_test_cases", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "cls", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "constant", "type": "Any"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 284, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 26, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 292, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "axis", "type": "Any"}, {"lineNumber": 307, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "layer", "type": "Any"}, {"lineNumber": 337, "col_offset": 9, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 338, "col_offset": 9, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 45, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "case", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 218, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 218, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 218, "col_offset": 62, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 221, "col_offset": 54, "nodeName": "adapt_data", "type": "Any"}, {"lineNumber": 222, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 224, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 284, "col_offset": 26, "nodeName": "output", "type": "Any"}, {"lineNumber": 337, "col_offset": 9, "nodeName": "layers", "type": "module"}, {"lineNumber": 338, "col_offset": 9, "nodeName": "layers", "type": "module"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 62, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 222, "col_offset": 10, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 224, "col_offset": 10, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 337, "col_offset": 9, "nodeName": "keras", "type": "module"}, {"lineNumber": 338, "col_offset": 9, "nodeName": "keras", "type": "module"}, {"lineNumber": 135, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "tf", "type": "Any"}]