[{"lineNumber": 14, "col_offset": 20, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "rate", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "rate", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "rate", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "rate", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "noised", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "rate", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "rate", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "rate", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "rate", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "K", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "training", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "self", "type": "GaussianNoise"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "self", "type": "GaussianDropout"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "noised", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "self", "type": "GaussianDropout"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 140, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 65, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "_get_noise_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "rate", "type": "Any"}, {"lineNumber": 146, "col_offset": 67, "nodeName": "seed", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "alpha", "type": "float"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "scale", "type": "float"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "b", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "dropped_inputs", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "GaussianNoise", "type": "Type[GaussianNoise]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "GaussianNoise", "type": "Type[GaussianNoise]"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "self", "type": "GaussianNoise"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "GaussianDropout", "type": "Type[GaussianDropout]"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 94, "col_offset": 61, "nodeName": "training", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "GaussianDropout", "type": "Type[GaussianDropout]"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "self", "type": "GaussianDropout"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "AlphaDropout", "type": "Type[AlphaDropout]"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 140, "col_offset": 57, "nodeName": "K", "type": "Any"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 146, "col_offset": 67, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "scale", "type": "float"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 152, "col_offset": 72, "nodeName": "rate", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "cast", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "rate", "type": "Any"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 165, "col_offset": 69, "nodeName": "training", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "AlphaDropout", "type": "Type[AlphaDropout]"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "self", "type": "AlphaDropout"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 171, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "K", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "rate", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "alpha", "type": "float"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "K", "type": "Any"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 151, "col_offset": 60, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "K", "type": "Any"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "floatx", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "a", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 171, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 44, "col_offset": 50, "nodeName": "shape", "type": "Any"}, {"lineNumber": 44, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "self", "type": "GaussianNoise"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "self", "type": "GaussianDropout"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "rate", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "K", "type": "Any"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "K", "type": "Any"}, {"lineNumber": 152, "col_offset": 65, "nodeName": "seed", "type": "Any"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "K", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "rate", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 171, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 50, "nodeName": "K", "type": "Any"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "self", "type": "GaussianDropout"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "shape", "type": "Any"}, {"lineNumber": 91, "col_offset": 62, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 156, "col_offset": 39, "nodeName": "rate", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "K", "type": "Any"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "alpha_p", "type": "float"}]