[{"lineNumber": 13, "col_offset": 0, "nodeName": "test_pad_sequences", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "test_pad_sequences_vector", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_make_sampling_table", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "test_skipgrams", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "test_remove_long_seq", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "test_TimeseriesGenerator", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "couple", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "couples", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "couple", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "couples", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "l", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "labels", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "maxlen", "type": "int"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "label", "type": "List[str]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "targets", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "batch", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "r", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "targets", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "a", "type": "List[List[List[int]]]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "a", "type": "List[List[List[int]]]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "a", "type": "List[List[List[int]]]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "a", "type": "List[List[List[int]]]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "a", "type": "List[List[List[int]]]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "make_sampling_table", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "couples", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "labels", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "skipgrams", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "skipgrams", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "new_seq", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "new_label", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "_remove_long_seq", "type": "Any"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "maxlen", "type": "int"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "seq", "type": "List[List[int]]"}, {"lineNumber": 94, "col_offset": 55, "nodeName": "label", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "new_seq", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "new_label", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "TimeseriesGenerator", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "targets", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "TimeseriesGenerator", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "targets", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "TimeseriesGenerator", "type": "Any"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "targets", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "TimeseriesGenerator", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "targets", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "TimeseriesGenerator", "type": "Any"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "targets", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "TimeseriesGenerator", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "targets", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "l", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 162, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 163, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "data_gen", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "couple", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "couple", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "couple", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "couple", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "r", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 162, "col_offset": 68, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 163, "col_offset": 68, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "targets", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 47, "nodeName": "targets", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "r", "type": "Any"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "r", "type": "Any"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "r", "type": "Any"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "r", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "r", "type": "Any"}]