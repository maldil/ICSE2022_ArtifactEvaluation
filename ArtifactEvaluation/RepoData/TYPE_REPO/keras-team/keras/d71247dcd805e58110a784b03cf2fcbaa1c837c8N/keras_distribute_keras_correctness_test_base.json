[{"lineNumber": 39, "col_offset": 0, "nodeName": "eager_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "graph_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "all_strategy_and_input_config_combinations", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "all_strategy_and_input_config_combinations_eager", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "strategy_minus_tpu_and_input_config_combinations_eager", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "strategies_for_embedding_models", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "test_combinations_for_embedding_model", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_combinations_with_tpu_strategies_graph", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "multi_worker_mirrored_eager", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "multi_worker_mirrored_eager_and_graph", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "batch_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "get_batch_size", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "get_data_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "get_shapes", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "get_correctness_test_inputs", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 351, "col_offset": 0, "nodeName": "should_skip_tpu_with_eager", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "_RANDOM_SEED", "type": "int"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "_EVAL_STEPS", "type": "int"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "_GLOBAL_BATCH_SIZE", "type": "int"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 120, "col_offset": 2, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 2, "nodeName": "__enter__", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 2, "nodeName": "__exit__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "Callback", "type": "Any"}, {"lineNumber": 360, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 363, "col_offset": 2, "nodeName": "on_batch_begin", "type": "Callable[..., Any]"}, {"lineNumber": 372, "col_offset": 46, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 373, "col_offset": 46, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 388, "col_offset": 2, "nodeName": "get_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 2, "nodeName": "get_data_with_partial_last_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 398, "col_offset": 2, "nodeName": "get_data_with_partial_last_batch_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 2, "nodeName": "get_input_for_correctness_test", "type": "Callable[..., Any]"}, {"lineNumber": 508, "col_offset": 2, "nodeName": "get_input_for_dynamic_lr_test", "type": "Callable[..., Any]"}, {"lineNumber": 525, "col_offset": 2, "nodeName": "run_dynamic_lr_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "TestDistributionStrategyCorrectnessBase", "type": "Type[TestDistributionStrategyCorrectnessBase]"}, {"lineNumber": 136, "col_offset": 5, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 142, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "global_batch_size", "type": "int"}, {"lineNumber": 147, "col_offset": 5, "nodeName": "use_per_core_batch_size", "type": "Any"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "batch_size", "type": "Union[Any, int]"}, {"lineNumber": 166, "col_offset": 2, "nodeName": "shapes", "type": "None"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 176, "col_offset": 2, "nodeName": "global_batch_size", "type": "int"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "_GLOBAL_BATCH_SIZE", "type": "int"}, {"lineNumber": 177, "col_offset": 2, "nodeName": "batch_size", "type": "Union[Any, int]"}, {"lineNumber": 179, "col_offset": 5, "nodeName": "use_numpy", "type": "Any"}, {"lineNumber": 255, "col_offset": 2, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "history", "type": "Any"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "history", "type": "Any"}, {"lineNumber": 283, "col_offset": 9, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 321, "col_offset": 6, "nodeName": "key", "type": "Any"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "callbacks", "type": "module"}, {"lineNumber": 372, "col_offset": 46, "nodeName": "test", "type": "Any"}, {"lineNumber": 373, "col_offset": 46, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 618, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "combine", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "combine", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "times", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "times", "type": "Any"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "times", "type": "Any"}, {"lineNumber": 75, "col_offset": 6, "nodeName": "s", "type": "Any"}, {"lineNumber": 83, "col_offset": 6, "nodeName": "s", "type": "Any"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "tpu_strategy", "type": "Any"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "times", "type": "Any"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "times", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "times", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "_distribution", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "_scope", "type": "None"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "_distribution", "type": "Any"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "_distribution", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "batch", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "batch_size", "type": "Union[Any, int]"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "num_replicas_in_sync", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 156, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 167, "col_offset": 5, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "shapes", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "get_batch_size", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "global_batch_size", "type": "int"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "with_distribution", "type": "Any"}, {"lineNumber": 188, "col_offset": 7, "nodeName": "use_validation_data", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "predict_inputs", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "training_data_size", "type": "int"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "steps_per_epoch", "type": "int"}, {"lineNumber": 214, "col_offset": 7, "nodeName": "use_validation_data", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "predict_dataset", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "predict_dataset", "type": "Any"}, {"lineNumber": 240, "col_offset": 9, "nodeName": "training_inputs", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "eval_inputs", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 240, "col_offset": 39, "nodeName": "predict_inputs", "type": "Dict[str, Any]"}, {"lineNumber": 249, "col_offset": 2, "nodeName": "training_inputs", "type": "Any"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "eval_inputs", "type": "Any"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "predict_inputs", "type": "Any"}, {"lineNumber": 249, "col_offset": 49, "nodeName": "input_fn", "type": "Any"}, {"lineNumber": 250, "col_offset": 10, "nodeName": "model_fn", "type": "Any"}, {"lineNumber": 256, "col_offset": 2, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 258, "col_offset": 5, "nodeName": "eval_inputs", "type": "Any"}, {"lineNumber": 261, "col_offset": 2, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 263, "col_offset": 5, "nodeName": "predict_inputs", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "predict_length", "type": "int"}, {"lineNumber": 268, "col_offset": 7, "nodeName": "is_stateful_model", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 276, "col_offset": 2, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 278, "col_offset": 5, "nodeName": "eval_inputs", "type": "Any"}, {"lineNumber": 281, "col_offset": 2, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 292, "col_offset": 5, "nodeName": "compute_dtype", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "default_tolerance", "type": "float"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "relaxed_tolerance", "type": "float"}, {"lineNumber": 319, "col_offset": 11, "nodeName": "default_tolerance", "type": "float"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "keras", "type": "module"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "_update_freq", "type": "Any"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "lr", "type": "Any"}, {"lineNumber": 372, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "use_numpy", "type": "Any"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "use_numpy", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "use_validation_data", "type": "Any"}, {"lineNumber": 381, "col_offset": 31, "nodeName": "use_validation_data", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "with_batch_norm", "type": "Any"}, {"lineNumber": 382, "col_offset": 27, "nodeName": "with_batch_norm", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 392, "col_offset": 14, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 396, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 399, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 420, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "training_input", "type": "Dict[str, Any]"}, {"lineNumber": 522, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "distribution", "type": "List[Any]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "x_train", "type": "numpy.ndarray"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "x_predict", "type": "Any"}, {"lineNumber": 619, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "combine", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "combine", "type": "Any"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "eager_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "combine", "type": "Any"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "eager_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "all_strategies", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "times", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "times", "type": "Any"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "combine", "type": "Any"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "graph_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "combine", "type": "Any"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "eager_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "combine", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "MaybeDistributionScope"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "MaybeDistributionScope"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "self", "type": "MaybeDistributionScope"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "_scope", "type": "Any"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "self", "type": "MaybeDistributionScope"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "_scope", "type": "None"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "values", "type": "Any"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "batch_size", "type": "Union[int, Any]"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "training_epochs", "type": "Any"}, {"lineNumber": 189, "col_offset": 6, "nodeName": "eval_inputs", "type": "None"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "x_predict", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "get_data_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "batch_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "train_dataset", "type": "Any"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "batch_size", "type": "Union[int, Any]"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "training_epochs", "type": "Any"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "steps_per_epoch", "type": "int"}, {"lineNumber": 215, "col_offset": 6, "nodeName": "eval_inputs", "type": "None"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "eval_dataset", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "eval_dataset", "type": "Any"}, {"lineNumber": 222, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 223, "col_offset": 6, "nodeName": "eval_steps", "type": "int"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "get_batch_size", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "with_distribution", "type": "Any"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 233, "col_offset": 57, "nodeName": "x_predict", "type": "Any"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "batch_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 36, "nodeName": "predict_dataset", "type": "Any"}, {"lineNumber": 234, "col_offset": 53, "nodeName": "predict_batch_size", "type": "Union[int, Any]"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "predict_dataset", "type": "Any"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "initial_weights", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "fit", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 269, "col_offset": 6, "nodeName": "predict_length", "type": "int"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "predict_length", "type": "int"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "result_key", "type": "str"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "fit", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 295, "col_offset": 7, "nodeName": "partial_last_batch", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "default_tolerance", "type": "float"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "relaxed_tolerance", "type": "float"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "default_tolerance", "type": "float"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "relaxed_tolerance", "type": "float"}, {"lineNumber": 317, "col_offset": 13, "nodeName": "relaxed_tolerance", "type": "float"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "keys", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "_get_compare_result_tolerance", "type": "Callable[[Any], Any]"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "key", "type": "Any"}, {"lineNumber": 335, "col_offset": 7, "nodeName": "partial_last_batch", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 352, "col_offset": 10, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 353, "col_offset": 10, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "self", "type": "LearningRateBatchScheduler"}, {"lineNumber": 364, "col_offset": 7, "nodeName": "_update_freq", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "set_value", "type": "Any"}, {"lineNumber": 369, "col_offset": 28, "nodeName": "lr", "type": "Any"}, {"lineNumber": 369, "col_offset": 53, "nodeName": "lr", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "set_image_data_format", "type": "Any"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 385, "col_offset": 19, "nodeName": "_RANDOM_SEED", "type": "int"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "_RANDOM_SEED", "type": "int"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "randint", "type": "Any"}, {"lineNumber": 390, "col_offset": 38, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 391, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 391, "col_offset": 25, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 415, "col_offset": 11, "nodeName": "get_correctness_test_inputs", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "training_input", "type": "Dict[str, Any]"}, {"lineNumber": 588, "col_offset": 22, "nodeName": "_GLOBAL_BATCH_SIZE", "type": "int"}, {"lineNumber": 588, "col_offset": 43, "nodeName": "_EVAL_STEPS", "type": "int"}, {"lineNumber": 594, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 594, "col_offset": 19, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 595, "col_offset": 6, "nodeName": "dist", "type": "Any"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "dist", "type": "Any"}, {"lineNumber": 601, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 601, "col_offset": 19, "nodeName": "count", "type": "Any"}, {"lineNumber": 602, "col_offset": 6, "nodeName": "label", "type": "Any"}, {"lineNumber": 603, "col_offset": 6, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 606, "col_offset": 6, "nodeName": "word_ids", "type": "Any"}, {"lineNumber": 606, "col_offset": 17, "nodeName": "word_ids", "type": "Any"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "pad_sequences", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 612, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 612, "col_offset": 25, "nodeName": "features", "type": "Any"}, {"lineNumber": 613, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 614, "col_offset": 16, "nodeName": "x_train", "type": "numpy.ndarray"}, {"lineNumber": 615, "col_offset": 11, "nodeName": "x_train", "type": "numpy.ndarray"}, {"lineNumber": 615, "col_offset": 20, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 615, "col_offset": 29, "nodeName": "x_predict", "type": "Any"}, {"lineNumber": 619, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "test", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "test", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "test", "type": "Any"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "all_strategies", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "eager_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "graph_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "test", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 57, "col_offset": 61, "nodeName": "all_strategies", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "test", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 63, "col_offset": 61, "nodeName": "strategies_minus_tpu", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "required_tpu", "type": "Any"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "required_gpus", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "strategies_for_embedding_models", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 58, "nodeName": "required_tpu", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "combine", "type": "Any"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "graph_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "combine", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "eager_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "distribute", "type": "Any"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "test", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 101, "col_offset": 61, "nodeName": "tpu_strategies", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "test", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 107, "col_offset": 61, "nodeName": "multi_worker_mirrored_strategies", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "test", "type": "Any"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 113, "col_offset": 61, "nodeName": "multi_worker_mirrored_strategies", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "eager_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "graph_mode_test_configuration", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "self", "type": "MaybeDistributionScope"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "scope", "type": "Any"}, {"lineNumber": 127, "col_offset": 6, "nodeName": "__enter__", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "__exit__", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "exc_type", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "value", "type": "Any"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "traceback", "type": "Any"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "self", "type": "MaybeDistributionScope"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "global_batch_size_supported", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 167, "col_offset": 9, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "nest", "type": "Any"}, {"lineNumber": 168, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 190, "col_offset": 6, "nodeName": "training_inputs", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 44, "nodeName": "x_eval", "type": "Any"}, {"lineNumber": 190, "col_offset": 52, "nodeName": "y_eval", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "batch_size", "type": "Union[int, Any]"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "x_eval", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "y_eval", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 202, "col_offset": 56, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 202, "col_offset": 65, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 203, "col_offset": 56, "nodeName": "training_epochs", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 217, "col_offset": 10, "nodeName": "batch_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "eval_dataset", "type": "Any"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "batch_size", "type": "Union[int, Any]"}, {"lineNumber": 218, "col_offset": 6, "nodeName": "training_inputs", "type": "Dict[str, Any]"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "training_inputs", "type": "Dict[str, Any]"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 222, "col_offset": 10, "nodeName": "batch_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "eval_dataset", "type": "Any"}, {"lineNumber": 222, "col_offset": 38, "nodeName": "batch_size", "type": "Union[int, Any]"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "eval_steps", "type": "int"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "get_data_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "x_predict", "type": "Any"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "get_shapes", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 256, "col_offset": 45, "nodeName": "training_inputs", "type": "Any"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 259, "col_offset": 47, "nodeName": "eval_inputs", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 271, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 272, "col_offset": 6, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "predict", "type": "Any"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 276, "col_offset": 45, "nodeName": "training_inputs", "type": "Any"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 279, "col_offset": 47, "nodeName": "eval_inputs", "type": "Any"}, {"lineNumber": 292, "col_offset": 5, "nodeName": "global_policy", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "results_with_ds", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "steps_per_run", "type": "Any"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 339, "col_offset": 9, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "testcase", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "results_with_ds", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "results_without_ds", "type": "Any"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 352, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 354, "col_offset": 22, "nodeName": "TPUStrategy", "type": "Any"}, {"lineNumber": 354, "col_offset": 62, "nodeName": "TPUStrategy", "type": "Any"}, {"lineNumber": 364, "col_offset": 7, "nodeName": "self", "type": "LearningRateBatchScheduler"}, {"lineNumber": 368, "col_offset": 18, "nodeName": "batch", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "backend", "type": "module"}, {"lineNumber": 369, "col_offset": 28, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "backend", "type": "module"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "v1", "type": "Any"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 391, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 391, "col_offset": 35, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 393, "col_offset": 39, "nodeName": "astype", "type": "Any"}, {"lineNumber": 415, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 430, "col_offset": 9, "nodeName": "cached_session", "type": "Any"}, {"lineNumber": 431, "col_offset": 6, "nodeName": "set_up_test_config", "type": "Callable[..., Any]"}, {"lineNumber": 431, "col_offset": 30, "nodeName": "use_numpy", "type": "Any"}, {"lineNumber": 431, "col_offset": 41, "nodeName": "use_validation_data", "type": "Any"}, {"lineNumber": 431, "col_offset": 62, "nodeName": "with_batch_norm", "type": "Any"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "partial_last_batch", "type": "Any"}, {"lineNumber": 447, "col_offset": 14, "nodeName": "get_model", "type": "Callable[..., Any]"}, {"lineNumber": 527, "col_offset": 9, "nodeName": "cached_session", "type": "Any"}, {"lineNumber": 528, "col_offset": 6, "nodeName": "set_up_test_config", "type": "Callable[..., Any]"}, {"lineNumber": 530, "col_offset": 6, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 530, "col_offset": 15, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 530, "col_offset": 24, "nodeName": "_", "type": "None"}, {"lineNumber": 530, "col_offset": 28, "nodeName": "get_data", "type": "Callable[[], Any]"}, {"lineNumber": 531, "col_offset": 14, "nodeName": "get_model", "type": "Callable[..., Any]"}, {"lineNumber": 595, "col_offset": 13, "nodeName": "abs", "type": "Any"}, {"lineNumber": 596, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 596, "col_offset": 21, "nodeName": "dist", "type": "Any"}, {"lineNumber": 597, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 597, "col_offset": 26, "nodeName": "dist", "type": "Any"}, {"lineNumber": 604, "col_offset": 17, "nodeName": "choice", "type": "Any"}, {"lineNumber": 605, "col_offset": 10, "nodeName": "max_word_id", "type": "Any"}, {"lineNumber": 607, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "label", "type": "Any"}, {"lineNumber": 608, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 608, "col_offset": 22, "nodeName": "word_ids", "type": "Any"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "sequence", "type": "module"}, {"lineNumber": 611, "col_offset": 25, "nodeName": "max_words", "type": "Any"}, {"lineNumber": 612, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 612, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 613, "col_offset": 58, "nodeName": "count", "type": "Any"}, {"lineNumber": 614, "col_offset": 25, "nodeName": "_GLOBAL_BATCH_SIZE", "type": "int"}, {"lineNumber": 619, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "test", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "test", "type": "Any"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "test", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "s", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "one_device_strategy", "type": "Any"}, {"lineNumber": 83, "col_offset": 58, "nodeName": "s", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "test", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "eager_mode_strategies", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "test", "type": "Any"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "test", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "test", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "_distribution", "type": "Any"}, {"lineNumber": 127, "col_offset": 6, "nodeName": "_scope", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "_scope", "type": "Any"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "distributed_training_utils", "type": "module"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 167, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 61, "nodeName": "global_batch_size", "type": "int"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 216, "col_offset": 57, "nodeName": "x_eval", "type": "Any"}, {"lineNumber": 216, "col_offset": 65, "nodeName": "y_eval", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 221, "col_offset": 57, "nodeName": "x_eval", "type": "Any"}, {"lineNumber": 221, "col_offset": 65, "nodeName": "y_eval", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "training_inputs", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "result_key", "type": "str"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "predict_inputs", "type": "Any"}, {"lineNumber": 292, "col_offset": 5, "nodeName": "policy", "type": "module"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "TPUStrategy", "type": "Any"}, {"lineNumber": 324, "col_offset": 60, "nodeName": "TPUStrategy", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "extended", "type": "Any"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "key", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "results_with_ds", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "results_without_ds", "type": "Any"}, {"lineNumber": 339, "col_offset": 9, "nodeName": "key", "type": "Any"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "key", "type": "Any"}, {"lineNumber": 345, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 348, "col_offset": 40, "nodeName": "key", "type": "Any"}, {"lineNumber": 354, "col_offset": 22, "nodeName": "experimental", "type": "Any"}, {"lineNumber": 354, "col_offset": 62, "nodeName": "experimental", "type": "Any"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "_update_freq", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "keras", "type": "module"}, {"lineNumber": 369, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "keras", "type": "module"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "compat", "type": "Any"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 393, "col_offset": 39, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 430, "col_offset": 9, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 431, "col_offset": 6, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "get_data_with_partial_last_batch_eval", "type": "Callable[[], Any]"}, {"lineNumber": 436, "col_offset": 11, "nodeName": "partial_last_batch", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "x_eval", "type": "Any"}, {"lineNumber": 441, "col_offset": 17, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "y_eval", "type": "Any"}, {"lineNumber": 442, "col_offset": 17, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 447, "col_offset": 14, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 527, "col_offset": 9, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 528, "col_offset": 6, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 530, "col_offset": 28, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 531, "col_offset": 14, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 595, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 595, "col_offset": 36, "nodeName": "max_word_id", "type": "Any"}, {"lineNumber": 596, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 597, "col_offset": 6, "nodeName": "distribution", "type": "List[Any]"}, {"lineNumber": 602, "col_offset": 14, "nodeName": "randint", "type": "Any"}, {"lineNumber": 602, "col_offset": 35, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 603, "col_offset": 36, "nodeName": "min_words", "type": "Any"}, {"lineNumber": 603, "col_offset": 47, "nodeName": "max_words", "type": "Any"}, {"lineNumber": 604, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 605, "col_offset": 28, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 607, "col_offset": 6, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 608, "col_offset": 6, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 612, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 613, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "combinations", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "test", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "strategies_for_embedding_models", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "test", "type": "Any"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "self", "type": "MaybeDistributionScope"}, {"lineNumber": 127, "col_offset": 6, "nodeName": "self", "type": "MaybeDistributionScope"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "self", "type": "MaybeDistributionScope"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "nest", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "training_data_size", "type": "int"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 61, "nodeName": "global_batch_size", "type": "int"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "experimental", "type": "Any"}, {"lineNumber": 324, "col_offset": 60, "nodeName": "experimental", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "distribution", "type": "Any"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "key", "type": "Any"}, {"lineNumber": 337, "col_offset": 31, "nodeName": "results_with_ds", "type": "Any"}, {"lineNumber": 338, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 338, "col_offset": 34, "nodeName": "results_without_ds", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "results_with_ds", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "results_without_ds", "type": "Any"}, {"lineNumber": 354, "col_offset": 22, "nodeName": "distribute", "type": "Any"}, {"lineNumber": 354, "col_offset": 62, "nodeName": "distribute", "type": "Any"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "self", "type": "LearningRateBatchScheduler"}, {"lineNumber": 369, "col_offset": 28, "nodeName": "self", "type": "LearningRateBatchScheduler"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "get_data_with_partial_last_batch", "type": "Callable[[], Any]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 440, "col_offset": 17, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "x_predict", "type": "None"}, {"lineNumber": 440, "col_offset": 38, "nodeName": "get_data", "type": "Callable[[], Any]"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "get_shapes", "type": "Callable[[Any], Any]"}, {"lineNumber": 448, "col_offset": 34, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 532, "col_offset": 23, "nodeName": "get_shapes", "type": "Callable[[Any], Any]"}, {"lineNumber": 532, "col_offset": 34, "nodeName": "x_train", "type": "Any"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 602, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 604, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 605, "col_offset": 55, "nodeName": "distribution", "type": "List[Any]"}, {"lineNumber": 613, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 613, "col_offset": 39, "nodeName": "int32", "type": "Any"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "distribute", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "distribute", "type": "Any"}, {"lineNumber": 324, "col_offset": 60, "nodeName": "distribute", "type": "Any"}, {"lineNumber": 337, "col_offset": 47, "nodeName": "key", "type": "Any"}, {"lineNumber": 338, "col_offset": 53, "nodeName": "key", "type": "Any"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "key", "type": "Any"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 354, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 354, "col_offset": 62, "nodeName": "v1", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 440, "col_offset": 38, "nodeName": "self", "type": "TestDistributionStrategyCorrectnessBase"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 602, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 605, "col_offset": 68, "nodeName": "label", "type": "Any"}, {"lineNumber": 613, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 37, "nodeName": "get_data_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "x_eval", "type": "Any"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 324, "col_offset": 60, "nodeName": "v1", "type": "Any"}, {"lineNumber": 354, "col_offset": 62, "nodeName": "compat", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 324, "col_offset": 60, "nodeName": "compat", "type": "Any"}, {"lineNumber": 354, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 324, "col_offset": 60, "nodeName": "tf", "type": "Any"}]