[{"lineNumber": 52, "col_offset": 0, "nodeName": "fail_on_convert", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 2, "nodeName": "__len__", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 2, "nodeName": "dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 89, "col_offset": 2, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 2, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 2, "nodeName": "__len__", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "DataAdapterTestBase", "type": "Type[DataAdapterTestBase]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 2, "nodeName": "test_can_handle_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 2, "nodeName": "test_size_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 2, "nodeName": "test_batch_size_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 2, "nodeName": "test_partial_batch_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 2, "nodeName": "test_epochs", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 2, "nodeName": "test_training_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 2, "nodeName": "test_can_handle_pandas", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 2, "nodeName": "test_training_pandas", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 2, "nodeName": "test_can_handle", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 2, "nodeName": "test_training", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 2, "nodeName": "test_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 2, "nodeName": "test_shuffle_correctness", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 2, "nodeName": "test_batch_shuffle_correctness", "type": "Callable[[Any], Any]"}, {"lineNumber": 378, "col_offset": 38, "nodeName": "DataAdapterTestBase", "type": "Type[DataAdapterTestBase]"}, {"lineNumber": 380, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 2, "nodeName": "test_can_handle_some_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 421, "col_offset": 2, "nodeName": "test_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 428, "col_offset": 2, "nodeName": "test_epochs", "type": "Callable[[Any], Any]"}, {"lineNumber": 440, "col_offset": 2, "nodeName": "test_training", "type": "Callable[[Any], Any]"}, {"lineNumber": 463, "col_offset": 2, "nodeName": "test_training_numpy_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 478, "col_offset": 2, "nodeName": "test_training_tensor_target", "type": "Callable[[Any], Any]"}, {"lineNumber": 493, "col_offset": 2, "nodeName": "test_shuffle_correctness", "type": "Callable[[Any], Any]"}, {"lineNumber": 526, "col_offset": 2, "nodeName": "test_batch_shuffle_correctness", "type": "Callable[[Any], Any]"}, {"lineNumber": 611, "col_offset": 25, "nodeName": "DataAdapterTestBase", "type": "Type[DataAdapterTestBase]"}, {"lineNumber": 613, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 617, "col_offset": 2, "nodeName": "test_can_handle", "type": "Callable[[Any], Any]"}, {"lineNumber": 624, "col_offset": 2, "nodeName": "test_training", "type": "Callable[[Any], Any]"}, {"lineNumber": 631, "col_offset": 2, "nodeName": "test_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 635, "col_offset": 2, "nodeName": "test_batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 639, "col_offset": 2, "nodeName": "test_partial_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 644, "col_offset": 2, "nodeName": "test_invalid_targets_argument", "type": "Callable[[Any], Any]"}, {"lineNumber": 648, "col_offset": 2, "nodeName": "test_invalid_sample_weights_argument", "type": "Callable[[Any], Any]"}, {"lineNumber": 654, "col_offset": 31, "nodeName": "DataAdapterTestBase", "type": "Type[DataAdapterTestBase]"}, {"lineNumber": 656, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 660, "col_offset": 2, "nodeName": "test_can_handle", "type": "Callable[[Any], Any]"}, {"lineNumber": 669, "col_offset": 2, "nodeName": "test_training", "type": "Callable[[Any], Any]"}, {"lineNumber": 688, "col_offset": 2, "nodeName": "test_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 692, "col_offset": 2, "nodeName": "test_batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 697, "col_offset": 2, "nodeName": "test_partial_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 702, "col_offset": 2, "nodeName": "test_invalid_targets_argument", "type": "Callable[[Any], Any]"}, {"lineNumber": 706, "col_offset": 2, "nodeName": "test_invalid_sample_weights_argument", "type": "Callable[[Any], Any]"}, {"lineNumber": 712, "col_offset": 2, "nodeName": "test_not_shuffled", "type": "Callable[[Any], Any]"}, {"lineNumber": 723, "col_offset": 31, "nodeName": "DataAdapterTestBase", "type": "Type[DataAdapterTestBase]"}, {"lineNumber": 725, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 729, "col_offset": 2, "nodeName": "test_can_handle", "type": "Callable[[Any], Any]"}, {"lineNumber": 738, "col_offset": 2, "nodeName": "test_training", "type": "Callable[[Any], Any]"}, {"lineNumber": 757, "col_offset": 2, "nodeName": "test_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 761, "col_offset": 2, "nodeName": "test_batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 766, "col_offset": 2, "nodeName": "test_partial_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 771, "col_offset": 2, "nodeName": "test_invalid_targets_argument", "type": "Callable[[Any], Any]"}, {"lineNumber": 775, "col_offset": 2, "nodeName": "test_invalid_sample_weights_argument", "type": "Callable[[Any], Any]"}, {"lineNumber": 781, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 783, "col_offset": 2, "nodeName": "test_finite_dataset_with_steps_per_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 798, "col_offset": 2, "nodeName": "test_finite_dataset_without_steps_per_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 810, "col_offset": 2, "nodeName": "test_finite_dataset_with_steps_per_epoch_exact_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 825, "col_offset": 2, "nodeName": "test_infinite_dataset_with_steps_per_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 837, "col_offset": 2, "nodeName": "test_unknown_cardinality_dataset_with_steps_per_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 857, "col_offset": 2, "nodeName": "test_unknown_cardinality_dataset_without_steps_per_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 878, "col_offset": 2, "nodeName": "test_insufficient_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 894, "col_offset": 2, "nodeName": "test_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 911, "col_offset": 2, "nodeName": "test_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 930, "col_offset": 2, "nodeName": "test_composite_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 945, "col_offset": 2, "nodeName": "test_iterator", "type": "Callable[[Any], Any]"}, {"lineNumber": 964, "col_offset": 2, "nodeName": "test_list_of_scalars", "type": "Callable[[Any], Any]"}, {"lineNumber": 978, "col_offset": 2, "nodeName": "test_class_weight_user_errors", "type": "Callable[[Any], Any]"}, {"lineNumber": 1002, "col_offset": 2, "nodeName": "test_single_x_input_no_tuple_wrapping", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1019, "col_offset": 26, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 1021, "col_offset": 2, "nodeName": "test_validation_split_unshuffled", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1051, "col_offset": 2, "nodeName": "test_validation_split_user_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 1056, "col_offset": 2, "nodeName": "test_validation_split_examples_too_few", "type": "Callable[[Any], Any]"}, {"lineNumber": 1061, "col_offset": 2, "nodeName": "test_validation_split_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 1073, "col_offset": 36, "nodeName": "DataAdapterTestBase", "type": "Type[DataAdapterTestBase]"}, {"lineNumber": 1075, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 1079, "col_offset": 2, "nodeName": "test_can_list_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 1091, "col_offset": 16, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 1093, "col_offset": 2, "nodeName": "test_expand_1d_sparse_tensors_untouched", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "_", "type": "Any"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "_", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "register_tensor_conversion_function", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "DummyArrayLike", "type": "Type[DummyArrayLike]"}, {"lineNumber": 56, "col_offset": 55, "nodeName": "fail_on_convert", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 781, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 913, "col_offset": 4, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 946, "col_offset": 4, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 1019, "col_offset": 26, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 1091, "col_offset": 16, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 1100, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "arraylike_input", "type": "DummyArrayLike"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "arraylike_target", "type": "DummyArrayLike"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "iterator_input", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "text_input", "type": "List[List[str]]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "bytes_input", "type": "List[List[str]]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "feature_shape", "type": "int"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "feature_shape", "type": "int"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "TensorLikeDataAdapter", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "num_batches_per_epoch", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "input_a", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "input_b", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "input_c", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "model_2", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "model_3", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "input_a_np", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "input_b_np", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "input_b_df", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "output_b_df", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "predict_1_pandas", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "predict_2_pandas", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "predict_3_pandas", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "predict_1_numpy", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "predict_2_numpy", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "predict_3_numpy", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "second_epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 339, "col_offset": 17, "nodeName": "second_epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "GenericArrayLikeDataAdapter", "type": "Any"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "num_batches_per_epoch", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 556, "col_offset": 17, "nodeName": "epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "second_epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 570, "col_offset": 17, "nodeName": "second_epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 615, "col_offset": 23, "nodeName": "DatasetAdapter", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 658, "col_offset": 23, "nodeName": "GeneratorDataAdapter", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 727, "col_offset": 23, "nodeName": "KerasSequenceAdapter", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 762, "col_offset": 4, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 767, "col_offset": 4, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 800, "col_offset": 4, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "ds", "type": "Any"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "filtered_ds", "type": "Any"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "ds", "type": "Any"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "filtered_ds", "type": "Any"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 874, "col_offset": 4, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "ds", "type": "Any"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "ds", "type": "Any"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 895, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 897, "col_offset": 4, "nodeName": "sw", "type": "numpy.ndarray"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 920, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 953, "col_offset": 4, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 954, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 960, "col_offset": 4, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 968, "col_offset": 4, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 974, "col_offset": 4, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1006, "col_offset": 7, "nodeName": "use_numpy", "type": "Any"}, {"lineNumber": 1012, "col_offset": 4, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 1023, "col_offset": 7, "nodeName": "use_numpy", "type": "Any"}, {"lineNumber": 1035, "col_offset": 7, "nodeName": "use_numpy", "type": "Any"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 1077, "col_offset": 23, "nodeName": "ListsOfScalarsDataAdapter", "type": "Any"}, {"lineNumber": 1096, "col_offset": 4, "nodeName": "st", "type": "Any"}, {"lineNumber": 1101, "col_offset": 2, "nodeName": "enable_eager_execution", "type": "Any"}, {"lineNumber": 1102, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "self", "type": "DummyArrayLike"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "constant", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "DummyArrayLike", "type": "Type[DummyArrayLike]"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "DummyArrayLike", "type": "Type[DummyArrayLike]"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "TestSequence", "type": "Type[TestSequence]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "Input", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "Input", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "Input", "type": "Any"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "input_a", "type": "Any"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "input_b", "type": "Any"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "input_c", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "Model", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "Model", "type": "Any"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "Model", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "input_a_np", "type": "Any"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "input_b_np", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "predict", "type": "Any"}, {"lineNumber": 222, "col_offset": 38, "nodeName": "input_a_np", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "predict", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "predict", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "predict_1_numpy", "type": "Any"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "predict_1_pandas", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "predict_2_numpy", "type": "Any"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "predict_2_pandas", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "predict_3_numpy", "type": "Any"}, {"lineNumber": 228, "col_offset": 41, "nodeName": "predict_3_pandas", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "predict", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "predict", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "predict", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 254, "col_offset": 19, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 254, "col_offset": 38, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 272, "col_offset": 6, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 277, "col_offset": 14, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "_get_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 282, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 282, "col_offset": 30, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "_get_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 35, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 289, "col_offset": 30, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 291, "col_offset": 39, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "arange", "type": "Any"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 301, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 305, "col_offset": 6, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 306, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "_get_epoch_batches", "type": "Callable[[Any], Any]"}, {"lineNumber": 313, "col_offset": 42, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 314, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 314, "col_offset": 32, "nodeName": "epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 319, "col_offset": 6, "nodeName": "shuffled_batch", "type": "Any"}, {"lineNumber": 321, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 330, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 335, "col_offset": 30, "nodeName": "_get_epoch_batches", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 49, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 336, "col_offset": 39, "nodeName": "second_epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 343, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 343, "col_offset": 30, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 345, "col_offset": 27, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 345, "col_offset": 39, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 356, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 359, "col_offset": 43, "nodeName": "batch_size_out", "type": "Any"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 371, "col_offset": 27, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 373, "col_offset": 41, "nodeName": "size", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 422, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "arraylike_input", "type": "DummyArrayLike"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "arraylike_target", "type": "DummyArrayLike"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 430, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "arraylike_input", "type": "DummyArrayLike"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 433, "col_offset": 14, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 435, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "arraylike_target", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 453, "col_offset": 19, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 454, "col_offset": 19, "nodeName": "arraylike_target", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "arraylike_target", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 459, "col_offset": 24, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "arraylike_target", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "predict", "type": "Any"}, {"lineNumber": 461, "col_offset": 23, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 467, "col_offset": 19, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 468, "col_offset": 19, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 472, "col_offset": 19, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 473, "col_offset": 19, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 476, "col_offset": 24, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 483, "col_offset": 19, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 485, "col_offset": 19, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 488, "col_offset": 19, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 490, "col_offset": 24, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 491, "col_offset": 24, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "DummyArrayLike", "type": "Type[DummyArrayLike]"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 499, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 504, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 508, "col_offset": 14, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "_get_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 511, "col_offset": 28, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 513, "col_offset": 27, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 513, "col_offset": 30, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 515, "col_offset": 24, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "_get_epoch", "type": "Callable[[Any], Any]"}, {"lineNumber": 518, "col_offset": 35, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 520, "col_offset": 27, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 520, "col_offset": 30, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 522, "col_offset": 27, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 522, "col_offset": 39, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 524, "col_offset": 24, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "DummyArrayLike", "type": "Type[DummyArrayLike]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 532, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 536, "col_offset": 6, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 537, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 539, "col_offset": 13, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 541, "col_offset": 14, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 544, "col_offset": 23, "nodeName": "_get_epoch_batches", "type": "Callable[[Any], Any]"}, {"lineNumber": 544, "col_offset": 42, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 545, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 545, "col_offset": 32, "nodeName": "epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 550, "col_offset": 6, "nodeName": "shuffled_batch", "type": "Any"}, {"lineNumber": 552, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 561, "col_offset": 27, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 561, "col_offset": 30, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 563, "col_offset": 24, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 566, "col_offset": 30, "nodeName": "_get_epoch_batches", "type": "Callable[[Any], Any]"}, {"lineNumber": 566, "col_offset": 49, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 567, "col_offset": 24, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 567, "col_offset": 39, "nodeName": "second_epoch_batch_data", "type": "List[Any]"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 574, "col_offset": 27, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 574, "col_offset": 30, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 576, "col_offset": 27, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 576, "col_offset": 39, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "x", "type": "DummyArrayLike"}, {"lineNumber": 587, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "arraylike_target", "type": "Any"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 591, "col_offset": 43, "nodeName": "batch_size_out", "type": "Any"}, {"lineNumber": 602, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 603, "col_offset": 30, "nodeName": "arraylike_target", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 606, "col_offset": 41, "nodeName": "size", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 615, "col_offset": 23, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 626, "col_offset": 14, "nodeName": "get_dataset", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 629, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 632, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 632, "col_offset": 31, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 636, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 636, "col_offset": 31, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 640, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 640, "col_offset": 31, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 658, "col_offset": 23, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 673, "col_offset": 19, "nodeName": "generator_input", "type": "Any"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 681, "col_offset": 19, "nodeName": "iterator_input", "type": "Any"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 685, "col_offset": 19, "nodeName": "iterator_input", "type": "Any"}, {"lineNumber": 689, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 689, "col_offset": 31, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 693, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 693, "col_offset": 31, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 698, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 698, "col_offset": 31, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 715, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 718, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 719, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 719, "col_offset": 19, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 727, "col_offset": 23, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 735, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "sequence_input", "type": "Any"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 750, "col_offset": 19, "nodeName": "sequence_input", "type": "Any"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 754, "col_offset": 19, "nodeName": "sequence_input", "type": "Any"}, {"lineNumber": 758, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 758, "col_offset": 31, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 762, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 762, "col_offset": 31, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 767, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 767, "col_offset": 31, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 784, "col_offset": 11, "nodeName": "batch", "type": "Any"}, {"lineNumber": 786, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 788, "col_offset": 21, "nodeName": "inferred_steps", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 791, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 791, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 792, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 793, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 796, "col_offset": 21, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 799, "col_offset": 11, "nodeName": "batch", "type": "Any"}, {"lineNumber": 800, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 800, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 801, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "inferred_steps", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 803, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 803, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 804, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 805, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 808, "col_offset": 21, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 811, "col_offset": 11, "nodeName": "batch", "type": "Any"}, {"lineNumber": 814, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 816, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 818, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 818, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 818, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 819, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 820, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 823, "col_offset": 21, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 827, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 830, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 830, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 830, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 831, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 832, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 835, "col_offset": 21, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 838, "col_offset": 9, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 839, "col_offset": 18, "nodeName": "filter", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 841, "col_offset": 63, "nodeName": "UNKNOWN_CARDINALITY", "type": "Any"}, {"lineNumber": 844, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "filtered_ds", "type": "Any"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 848, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 848, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 849, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 850, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 853, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 853, "col_offset": 34, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 854, "col_offset": 21, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 855, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 855, "col_offset": 21, "nodeName": "inferred_steps", "type": "Any"}, {"lineNumber": 858, "col_offset": 9, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 859, "col_offset": 18, "nodeName": "filter", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 861, "col_offset": 63, "nodeName": "UNKNOWN_CARDINALITY", "type": "Any"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 864, "col_offset": 8, "nodeName": "filtered_ds", "type": "Any"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 865, "col_offset": 21, "nodeName": "inferred_steps", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 868, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 868, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 869, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 874, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 874, "col_offset": 34, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 875, "col_offset": 21, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 876, "col_offset": 21, "nodeName": "inferred_steps", "type": "Any"}, {"lineNumber": 879, "col_offset": 9, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 880, "col_offset": 9, "nodeName": "filter", "type": "Any"}, {"lineNumber": 881, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "ds", "type": "Any"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 884, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 885, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 886, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 890, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 890, "col_offset": 34, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 891, "col_offset": 20, "nodeName": "_insufficient_data", "type": "Any"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 892, "col_offset": 21, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 897, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 898, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 901, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 901, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 902, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 903, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 906, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 906, "col_offset": 34, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 907, "col_offset": 21, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 914, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 918, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 921, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 921, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 921, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 922, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 923, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 926, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 926, "col_offset": 34, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 927, "col_offset": 21, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 931, "col_offset": 9, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 933, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 933, "col_offset": 44, "nodeName": "st", "type": "Any"}, {"lineNumber": 935, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 935, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 935, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 936, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 937, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 940, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 942, "col_offset": 21, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 947, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 951, "col_offset": 9, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 953, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 953, "col_offset": 44, "nodeName": "it", "type": "Any"}, {"lineNumber": 955, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 955, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 955, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 956, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 957, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 960, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 960, "col_offset": 34, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 961, "col_offset": 21, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 965, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 969, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 969, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 970, "col_offset": 6, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 971, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 974, "col_offset": 20, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 974, "col_offset": 34, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 975, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 975, "col_offset": 21, "nodeName": "returned_data", "type": "Any"}, {"lineNumber": 1004, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1007, "col_offset": 6, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1009, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1010, "col_offset": 6, "nodeName": "batch_size", "type": "None"}, {"lineNumber": 1012, "col_offset": 19, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 1012, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 1013, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 1013, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 1013, "col_offset": 23, "nodeName": "enumerate_epochs", "type": "Any"}, {"lineNumber": 1014, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 1024, "col_offset": 6, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 1025, "col_offset": 6, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 1026, "col_offset": 6, "nodeName": "sw", "type": "numpy.ndarray"}, {"lineNumber": 1028, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1029, "col_offset": 6, "nodeName": "y", "type": "Any"}, {"lineNumber": 1030, "col_offset": 6, "nodeName": "sw", "type": "Any"}, {"lineNumber": 1033, "col_offset": 8, "nodeName": "train_validation_split", "type": "Any"}, {"lineNumber": 1036, "col_offset": 6, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 1037, "col_offset": 6, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 1038, "col_offset": 6, "nodeName": "train_sw", "type": "Any"}, {"lineNumber": 1039, "col_offset": 6, "nodeName": "val_x", "type": "Any"}, {"lineNumber": 1040, "col_offset": 6, "nodeName": "val_y", "type": "Any"}, {"lineNumber": 1041, "col_offset": 6, "nodeName": "val_sw", "type": "Any"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1045, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1047, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1048, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1049, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1062, "col_offset": 23, "nodeName": "train_validation_split", "type": "Any"}, {"lineNumber": 1064, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 1064, "col_offset": 22, "nodeName": "train_sw", "type": "Any"}, {"lineNumber": 1065, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 1065, "col_offset": 22, "nodeName": "val_sw", "type": "Any"}, {"lineNumber": 1067, "col_offset": 33, "nodeName": "train_validation_split", "type": "Any"}, {"lineNumber": 1069, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 1069, "col_offset": 22, "nodeName": "train_sw", "type": "Any"}, {"lineNumber": 1070, "col_offset": 4, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 1070, "col_offset": 22, "nodeName": "val_sw", "type": "Any"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1077, "col_offset": 23, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1083, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 1084, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 1085, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 1086, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 1088, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 1094, "col_offset": 9, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 1096, "col_offset": 9, "nodeName": "expand_1d", "type": "Any"}, {"lineNumber": 1096, "col_offset": 32, "nodeName": "st", "type": "Any"}, {"lineNumber": 1097, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1097, "col_offset": 21, "nodeName": "rank", "type": "Any"}, {"lineNumber": 1101, "col_offset": 2, "nodeName": "v1", "type": "Any"}, {"lineNumber": 1102, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "self", "type": "DummyArrayLike"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "self", "type": "DummyArrayLike"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "key", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "threadsafe_generator", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "models", "type": "module"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 112, "col_offset": 49, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 114, "col_offset": 49, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "text_input", "type": "List[List[str]]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "bytes_input", "type": "List[List[str]]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "get_size", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "has_partial_batch", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "get_size", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "has_partial_batch", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "partial_batch_size", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 139, "col_offset": 66, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "get_dataset", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "num_batches_per_epoch", "type": "Any"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "next", "type": "Callable"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 144, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "next", "type": "Callable"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "keras", "type": "module"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "keras", "type": "module"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "keras", "type": "module"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "keras", "type": "module"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "input_a", "type": "Any"}, {"lineNumber": 180, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "keras", "type": "module"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "keras", "type": "module"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "input_c", "type": "Any"}, {"lineNumber": 182, "col_offset": 50, "nodeName": "z", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "model_2", "type": "Any"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "random", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "pd", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "random", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "model_2", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "input_b_df", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "output_b_df", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "model_2", "type": "Any"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 203, "col_offset": 51, "nodeName": "input_b_df", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 204, "col_offset": 30, "nodeName": "output_b_df", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "model_2", "type": "Any"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "input_b_df", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "output_b_df", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "model_2", "type": "Any"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 214, "col_offset": 56, "nodeName": "input_b_df", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "output_a_df", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "output_b_df", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "model_2", "type": "Any"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 219, "col_offset": 52, "nodeName": "input_b_df", "type": "Any"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "model_3", "type": "Any"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "model_2", "type": "Any"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "input_a_np", "type": "Any"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "input_b_np", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "model_3", "type": "Any"}, {"lineNumber": 224, "col_offset": 38, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "model_1", "type": "Any"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "model_2", "type": "Any"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 233, "col_offset": 55, "nodeName": "input_b_df", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 236, "col_offset": 48, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 238, "col_offset": 55, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 240, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 240, "col_offset": 49, "nodeName": "arraylike_input", "type": "DummyArrayLike"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 242, "col_offset": 36, "nodeName": "arraylike_input", "type": "DummyArrayLike"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "arraylike_target", "type": "DummyArrayLike"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 244, "col_offset": 49, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 245, "col_offset": 49, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 246, "col_offset": 49, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 247, "col_offset": 49, "nodeName": "text_input", "type": "List[List[str]]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 248, "col_offset": 49, "nodeName": "bytes_input", "type": "List[List[str]]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 254, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "get_size", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "has_partial_batch", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "get_dataset", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 27, "nodeName": "sort", "type": "Any"}, {"lineNumber": 284, "col_offset": 35, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "sort", "type": "Any"}, {"lineNumber": 293, "col_offset": 35, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 301, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 30, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "get_dataset", "type": "Any"}, {"lineNumber": 314, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "sort", "type": "Any"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 320, "col_offset": 6, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 320, "col_offset": 36, "nodeName": "shuffled_batch", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 326, "col_offset": 6, "nodeName": "_verify_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 27, "nodeName": "sort", "type": "Any"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 6, "nodeName": "_verify_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "sort", "type": "Any"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 356, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 58, "nodeName": "batch_size_in", "type": "Any"}, {"lineNumber": 358, "col_offset": 14, "nodeName": "steps", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 371, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 371, "col_offset": 58, "nodeName": "batch_size_in", "type": "Any"}, {"lineNumber": 372, "col_offset": 14, "nodeName": "steps", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "get_size", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "has_partial_batch", "type": "Any"}, {"lineNumber": 374, "col_offset": 50, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 374, "col_offset": 55, "nodeName": "partial_batch_size", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "partial_batch_size", "type": "Any"}, {"lineNumber": 375, "col_offset": 51, "nodeName": "partial_batch_size", "type": "Any"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "arraylike_input", "type": "DummyArrayLike"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 388, "col_offset": 36, "nodeName": "arraylike_input", "type": "DummyArrayLike"}, {"lineNumber": 389, "col_offset": 36, "nodeName": "arraylike_target", "type": "DummyArrayLike"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 393, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 393, "col_offset": 49, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 395, "col_offset": 36, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 396, "col_offset": 36, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 397, "col_offset": 49, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 399, "col_offset": 36, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 399, "col_offset": 55, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 403, "col_offset": 36, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 404, "col_offset": 36, "nodeName": "arraylike_target", "type": "DummyArrayLike"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 406, "col_offset": 36, "nodeName": "arraylike_input", "type": "DummyArrayLike"}, {"lineNumber": 407, "col_offset": 36, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 409, "col_offset": 36, "nodeName": "arraylike_input", "type": "DummyArrayLike"}, {"lineNumber": 410, "col_offset": 36, "nodeName": "tensor_target", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 413, "col_offset": 36, "nodeName": "arraylike_target", "type": "DummyArrayLike"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 415, "col_offset": 49, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 416, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 416, "col_offset": 49, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 417, "col_offset": 49, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 418, "col_offset": 49, "nodeName": "text_input", "type": "List[List[str]]"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 419, "col_offset": 49, "nodeName": "bytes_input", "type": "List[List[str]]"}, {"lineNumber": 422, "col_offset": 14, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "get_size", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "has_partial_batch", "type": "Any"}, {"lineNumber": 430, "col_offset": 14, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 432, "col_offset": 48, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "get_dataset", "type": "Any"}, {"lineNumber": 434, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "num_batches_per_epoch", "type": "Any"}, {"lineNumber": 435, "col_offset": 43, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 436, "col_offset": 6, "nodeName": "next", "type": "Callable"}, {"lineNumber": 436, "col_offset": 11, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 437, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 437, "col_offset": 27, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 438, "col_offset": 6, "nodeName": "next", "type": "Callable"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 443, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 443, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 444, "col_offset": 6, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 444, "col_offset": 27, "nodeName": "arraylike_input", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 453, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 454, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 459, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 461, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 467, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 468, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 472, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 476, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 483, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 485, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 488, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 490, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 491, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 497, "col_offset": 33, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 499, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 500, "col_offset": 30, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 504, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 506, "col_offset": 13, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 506, "col_offset": 28, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "get_dataset", "type": "Any"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 515, "col_offset": 27, "nodeName": "sort", "type": "Any"}, {"lineNumber": 515, "col_offset": 35, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 27, "nodeName": "sort", "type": "Any"}, {"lineNumber": 524, "col_offset": 35, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 530, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 530, "col_offset": 33, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 532, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 533, "col_offset": 30, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 541, "col_offset": 19, "nodeName": "get_dataset", "type": "Any"}, {"lineNumber": 545, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 550, "col_offset": 23, "nodeName": "sort", "type": "Any"}, {"lineNumber": 550, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 551, "col_offset": 6, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 551, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 551, "col_offset": 36, "nodeName": "shuffled_batch", "type": "Any"}, {"lineNumber": 552, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 557, "col_offset": 6, "nodeName": "_verify_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 557, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 563, "col_offset": 27, "nodeName": "sort", "type": "Any"}, {"lineNumber": 563, "col_offset": 35, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 567, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 571, "col_offset": 6, "nodeName": "_verify_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 578, "col_offset": 27, "nodeName": "sort", "type": "Any"}, {"lineNumber": 578, "col_offset": 35, "nodeName": "second_epoch_data", "type": "Any"}, {"lineNumber": 587, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 589, "col_offset": 42, "nodeName": "batch_size_in", "type": "Any"}, {"lineNumber": 590, "col_offset": 14, "nodeName": "steps", "type": "Any"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 591, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 602, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 604, "col_offset": 19, "nodeName": "batch_size_in", "type": "Any"}, {"lineNumber": 605, "col_offset": 14, "nodeName": "steps", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 606, "col_offset": 21, "nodeName": "get_size", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 607, "col_offset": 21, "nodeName": "has_partial_batch", "type": "Any"}, {"lineNumber": 607, "col_offset": 50, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 607, "col_offset": 55, "nodeName": "partial_batch_size", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 608, "col_offset": 21, "nodeName": "partial_batch_size", "type": "Any"}, {"lineNumber": 608, "col_offset": 51, "nodeName": "partial_batch_size", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 618, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 618, "col_offset": 49, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 619, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 619, "col_offset": 49, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 620, "col_offset": 20, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 620, "col_offset": 48, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 621, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 621, "col_offset": 49, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 622, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 622, "col_offset": 49, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 632, "col_offset": 14, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 632, "col_offset": 31, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 633, "col_offset": 22, "nodeName": "get_size", "type": "Any"}, {"lineNumber": 636, "col_offset": 14, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 636, "col_offset": 31, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 637, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 640, "col_offset": 14, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 640, "col_offset": 31, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 641, "col_offset": 21, "nodeName": "has_partial_batch", "type": "Any"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 642, "col_offset": 22, "nodeName": "partial_batch_size", "type": "Any"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 645, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 649, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 649, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 651, "col_offset": 6, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 651, "col_offset": 23, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 661, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 661, "col_offset": 49, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 662, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 662, "col_offset": 49, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 663, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 663, "col_offset": 49, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 664, "col_offset": 20, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 664, "col_offset": 48, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 665, "col_offset": 49, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 666, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 666, "col_offset": 49, "nodeName": "text_input", "type": "List[List[str]]"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 667, "col_offset": 49, "nodeName": "bytes_input", "type": "List[List[str]]"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 673, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 681, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 685, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 689, "col_offset": 14, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 689, "col_offset": 31, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 690, "col_offset": 22, "nodeName": "get_size", "type": "Any"}, {"lineNumber": 693, "col_offset": 14, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 693, "col_offset": 31, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 694, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 695, "col_offset": 21, "nodeName": "representative_batch_size", "type": "Any"}, {"lineNumber": 698, "col_offset": 14, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 698, "col_offset": 31, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "has_partial_batch", "type": "Any"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 700, "col_offset": 22, "nodeName": "partial_batch_size", "type": "Any"}, {"lineNumber": 703, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 703, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 704, "col_offset": 6, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 704, "col_offset": 23, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 707, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 707, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 710, "col_offset": 10, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 718, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 718, "col_offset": 31, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 719, "col_offset": 29, "nodeName": "get_dataset", "type": "Any"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 720, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 730, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 730, "col_offset": 49, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 731, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 731, "col_offset": 49, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 732, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 732, "col_offset": 49, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 733, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 733, "col_offset": 49, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 734, "col_offset": 20, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 734, "col_offset": 48, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 735, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 735, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 735, "col_offset": 49, "nodeName": "text_input", "type": "List[List[str]]"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 736, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 736, "col_offset": 49, "nodeName": "bytes_input", "type": "List[List[str]]"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 750, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 754, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 758, "col_offset": 14, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 758, "col_offset": 31, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 759, "col_offset": 21, "nodeName": "get_size", "type": "Any"}, {"lineNumber": 762, "col_offset": 14, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 762, "col_offset": 31, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 763, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 764, "col_offset": 21, "nodeName": "representative_batch_size", "type": "Any"}, {"lineNumber": 767, "col_offset": 14, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 767, "col_offset": 31, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 768, "col_offset": 21, "nodeName": "has_partial_batch", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 769, "col_offset": 22, "nodeName": "partial_batch_size", "type": "Any"}, {"lineNumber": 772, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 772, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 773, "col_offset": 6, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 773, "col_offset": 23, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 776, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 776, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 778, "col_offset": 6, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 778, "col_offset": 23, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 786, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 788, "col_offset": 21, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "should_recreate_iterator", "type": "Any"}, {"lineNumber": 791, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 795, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 795, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 800, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 801, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 803, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 805, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 807, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 807, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 814, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 816, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 816, "col_offset": 20, "nodeName": "should_recreate_iterator", "type": "Any"}, {"lineNumber": 818, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 820, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 822, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 822, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 827, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 830, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 832, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 834, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 834, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 838, "col_offset": 9, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 839, "col_offset": 18, "nodeName": "ds", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 841, "col_offset": 63, "nodeName": "experimental", "type": "Any"}, {"lineNumber": 844, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 846, "col_offset": 21, "nodeName": "should_recreate_iterator", "type": "Any"}, {"lineNumber": 848, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 850, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 852, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 852, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 853, "col_offset": 20, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 855, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 855, "col_offset": 21, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 858, "col_offset": 9, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 859, "col_offset": 18, "nodeName": "ds", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 861, "col_offset": 63, "nodeName": "experimental", "type": "Any"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 865, "col_offset": 21, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 866, "col_offset": 20, "nodeName": "should_recreate_iterator", "type": "Any"}, {"lineNumber": 868, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 873, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 873, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 874, "col_offset": 20, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 876, "col_offset": 21, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 879, "col_offset": 9, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 880, "col_offset": 9, "nodeName": "ds", "type": "Any"}, {"lineNumber": 881, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 884, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 886, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 889, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 889, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 890, "col_offset": 20, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 891, "col_offset": 20, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 897, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 898, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 899, "col_offset": 10, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 899, "col_offset": 32, "nodeName": "sw", "type": "numpy.ndarray"}, {"lineNumber": 901, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 903, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 905, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 905, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 906, "col_offset": 20, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 914, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 915, "col_offset": 12, "nodeName": "step", "type": "int"}, {"lineNumber": 918, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 919, "col_offset": 8, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 921, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 923, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 925, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 925, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 926, "col_offset": 20, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 931, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 933, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 935, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 937, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 939, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 939, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 940, "col_offset": 20, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 941, "col_offset": 30, "nodeName": "to_dense", "type": "Any"}, {"lineNumber": 941, "col_offset": 50, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 947, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 948, "col_offset": 12, "nodeName": "step", "type": "int"}, {"lineNumber": 951, "col_offset": 14, "nodeName": "from_generator", "type": "Any"}, {"lineNumber": 952, "col_offset": 8, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 953, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 955, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 957, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 959, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 959, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 960, "col_offset": 20, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 965, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 969, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 971, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 973, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 973, "col_offset": 27, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 974, "col_offset": 20, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 975, "col_offset": 4, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 979, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 979, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 980, "col_offset": 6, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 991, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 991, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 992, "col_offset": 6, "nodeName": "DataHandler", "type": "Any"}, {"lineNumber": 1004, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1009, "col_offset": 10, "nodeName": "batch", "type": "Any"}, {"lineNumber": 1012, "col_offset": 19, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 1012, "col_offset": 58, "nodeName": "batch_size", "type": "Optional[int]"}, {"lineNumber": 1013, "col_offset": 23, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 1014, "col_offset": 15, "nodeName": "steps", "type": "Any"}, {"lineNumber": 1024, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1025, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1026, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1028, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1029, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1030, "col_offset": 11, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1033, "col_offset": 8, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 1033, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 1033, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 1033, "col_offset": 51, "nodeName": "sw", "type": "Any"}, {"lineNumber": 1036, "col_offset": 16, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1036, "col_offset": 37, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 1037, "col_offset": 16, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1037, "col_offset": 37, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 1038, "col_offset": 17, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1038, "col_offset": 38, "nodeName": "train_sw", "type": "Any"}, {"lineNumber": 1039, "col_offset": 14, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1039, "col_offset": 35, "nodeName": "val_x", "type": "Any"}, {"lineNumber": 1040, "col_offset": 14, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1040, "col_offset": 35, "nodeName": "val_y", "type": "Any"}, {"lineNumber": 1041, "col_offset": 15, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1041, "col_offset": 36, "nodeName": "val_sw", "type": "Any"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1043, "col_offset": 21, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1044, "col_offset": 21, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 1045, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1045, "col_offset": 21, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 1047, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1047, "col_offset": 21, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 1048, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1048, "col_offset": 21, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 1049, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1049, "col_offset": 21, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 1052, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 1052, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1053, "col_offset": 6, "nodeName": "train_validation_split", "type": "Any"}, {"lineNumber": 1057, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 1057, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1058, "col_offset": 6, "nodeName": "train_validation_split", "type": "Any"}, {"lineNumber": 1062, "col_offset": 23, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 1064, "col_offset": 4, "nodeName": "self", "type": "TestValidationSplit"}, {"lineNumber": 1065, "col_offset": 4, "nodeName": "self", "type": "TestValidationSplit"}, {"lineNumber": 1067, "col_offset": 33, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 1069, "col_offset": 4, "nodeName": "self", "type": "TestValidationSplit"}, {"lineNumber": 1070, "col_offset": 4, "nodeName": "self", "type": "TestValidationSplit"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1080, "col_offset": 20, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 1080, "col_offset": 48, "nodeName": "text_input", "type": "List[List[str]]"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1081, "col_offset": 20, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 1081, "col_offset": 48, "nodeName": "bytes_input", "type": "List[List[str]]"}, {"lineNumber": 1083, "col_offset": 4, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1083, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 1083, "col_offset": 49, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 1084, "col_offset": 4, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1084, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 1084, "col_offset": 49, "nodeName": "tensor_input", "type": "Any"}, {"lineNumber": 1085, "col_offset": 4, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1085, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 1085, "col_offset": 49, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 1086, "col_offset": 4, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1086, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 1086, "col_offset": 49, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1087, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 1087, "col_offset": 49, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 1088, "col_offset": 4, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1088, "col_offset": 21, "nodeName": "can_handle", "type": "Any"}, {"lineNumber": 1094, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1096, "col_offset": 9, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 1097, "col_offset": 4, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 1097, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1101, "col_offset": 2, "nodeName": "compat", "type": "Any"}, {"lineNumber": 1102, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "DataAdapterTestBase", "type": "Type[DataAdapterTestBase]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "keras", "type": "module"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "feature_shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "TensorLikeDataAdapterTest", "type": "Type[TensorLikeDataAdapterTest]"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 112, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 114, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 144, "col_offset": 9, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 158, "col_offset": 61, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "layers", "type": "module"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "layers", "type": "module"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "layers", "type": "module"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "input_a", "type": "Any"}, {"lineNumber": 181, "col_offset": 43, "nodeName": "input_b", "type": "Any"}, {"lineNumber": 181, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 65, "nodeName": "y", "type": "Any"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "random", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "random", "type": "Any"}, {"lineNumber": 224, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 49, "nodeName": "input_a_df", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 236, "col_offset": 48, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 238, "col_offset": 55, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 240, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 240, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 242, "col_offset": 36, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 244, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 245, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 246, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 247, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 248, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 284, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 321, "col_offset": 28, "nodeName": "batch", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 332, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 381, "col_offset": 10, "nodeName": "GenericArrayLikeDataAdapterTest", "type": "Type[GenericArrayLikeDataAdapterTest]"}, {"lineNumber": 381, "col_offset": 43, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 388, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 389, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 393, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 393, "col_offset": 49, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 395, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 396, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 397, "col_offset": 49, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 399, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 399, "col_offset": 55, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 403, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 404, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 406, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 407, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 409, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 410, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 413, "col_offset": 36, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 415, "col_offset": 49, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 416, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 416, "col_offset": 49, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 417, "col_offset": 49, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 418, "col_offset": 49, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 419, "col_offset": 49, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 434, "col_offset": 28, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 437, "col_offset": 9, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 443, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 444, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 444, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 450, "col_offset": 35, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 466, "col_offset": 35, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 481, "col_offset": 35, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 504, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 506, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 515, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 524, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 530, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 537, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 541, "col_offset": 19, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 550, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 551, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 552, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 552, "col_offset": 28, "nodeName": "batch", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 563, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 591, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 606, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 607, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 608, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 614, "col_offset": 10, "nodeName": "DatasetAdapterTest", "type": "Type[DatasetAdapterTest]"}, {"lineNumber": 614, "col_offset": 30, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 618, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 618, "col_offset": 49, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 619, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 619, "col_offset": 49, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 620, "col_offset": 20, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 620, "col_offset": 48, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 621, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 621, "col_offset": 49, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 622, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 622, "col_offset": 49, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 626, "col_offset": 14, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 626, "col_offset": 31, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 628, "col_offset": 35, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 633, "col_offset": 22, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 637, "col_offset": 22, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 641, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 642, "col_offset": 22, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 646, "col_offset": 45, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 649, "col_offset": 9, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 651, "col_offset": 6, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 651, "col_offset": 23, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 651, "col_offset": 58, "nodeName": "dataset_input", "type": "Any"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 657, "col_offset": 10, "nodeName": "GeneratorDataAdapterTest", "type": "Type[GeneratorDataAdapterTest]"}, {"lineNumber": 657, "col_offset": 36, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 661, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 661, "col_offset": 49, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 662, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 662, "col_offset": 49, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 663, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 663, "col_offset": 49, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 664, "col_offset": 20, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 664, "col_offset": 48, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 665, "col_offset": 49, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 666, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 666, "col_offset": 49, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 667, "col_offset": 49, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 672, "col_offset": 35, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 680, "col_offset": 35, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 690, "col_offset": 22, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 694, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 695, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 700, "col_offset": 22, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 703, "col_offset": 9, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 704, "col_offset": 6, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 704, "col_offset": 23, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 704, "col_offset": 47, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 707, "col_offset": 9, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 710, "col_offset": 10, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 710, "col_offset": 47, "nodeName": "generator_input", "type": "Generator[Tuple[Any, Any], Any, Any]"}, {"lineNumber": 719, "col_offset": 29, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 720, "col_offset": 26, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 726, "col_offset": 10, "nodeName": "KerasSequenceAdapterTest", "type": "Type[KerasSequenceAdapterTest]"}, {"lineNumber": 726, "col_offset": 36, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 730, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 730, "col_offset": 49, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 731, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 731, "col_offset": 49, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 732, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 732, "col_offset": 49, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 733, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 733, "col_offset": 49, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 734, "col_offset": 20, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 734, "col_offset": 48, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 735, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 735, "col_offset": 49, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 736, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 736, "col_offset": 49, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 741, "col_offset": 35, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 749, "col_offset": 35, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 759, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 763, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 764, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 768, "col_offset": 21, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 769, "col_offset": 22, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 772, "col_offset": 9, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 773, "col_offset": 6, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 773, "col_offset": 23, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 773, "col_offset": 46, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 776, "col_offset": 9, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 778, "col_offset": 6, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 778, "col_offset": 23, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 778, "col_offset": 59, "nodeName": "sequence_input", "type": "TestSequence"}, {"lineNumber": 784, "col_offset": 11, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "_adapter", "type": "Any"}, {"lineNumber": 793, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 795, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 799, "col_offset": 11, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 805, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 807, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 811, "col_offset": 11, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 816, "col_offset": 20, "nodeName": "_adapter", "type": "Any"}, {"lineNumber": 820, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 822, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "batch", "type": "Any"}, {"lineNumber": 832, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 834, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 838, "col_offset": 9, "nodeName": "data", "type": "Any"}, {"lineNumber": 839, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 841, "col_offset": 63, "nodeName": "data", "type": "Any"}, {"lineNumber": 846, "col_offset": 21, "nodeName": "_adapter", "type": "Any"}, {"lineNumber": 850, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 852, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 858, "col_offset": 9, "nodeName": "data", "type": "Any"}, {"lineNumber": 859, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 861, "col_offset": 63, "nodeName": "data", "type": "Any"}, {"lineNumber": 866, "col_offset": 20, "nodeName": "_adapter", "type": "Any"}, {"lineNumber": 870, "col_offset": 11, "nodeName": "catch_stop_iteration", "type": "Any"}, {"lineNumber": 871, "col_offset": 17, "nodeName": "steps", "type": "Any"}, {"lineNumber": 873, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 879, "col_offset": 9, "nodeName": "data", "type": "Any"}, {"lineNumber": 886, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 889, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 903, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 904, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 905, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 915, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 923, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 925, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 937, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 938, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 939, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "nest", "type": "Any"}, {"lineNumber": 941, "col_offset": 30, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 948, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 951, "col_offset": 14, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 957, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 958, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 959, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 971, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 973, "col_offset": 6, "nodeName": "returned_data", "type": "List[List[Any]]"}, {"lineNumber": 979, "col_offset": 9, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 980, "col_offset": 6, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 991, "col_offset": 9, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 992, "col_offset": 6, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 1014, "col_offset": 15, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 1016, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 1016, "col_offset": 46, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 1024, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1025, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1026, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1028, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1029, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1030, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1036, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1037, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1038, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1039, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1040, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1041, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1052, "col_offset": 9, "nodeName": "self", "type": "TestValidationSplit"}, {"lineNumber": 1053, "col_offset": 6, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 1057, "col_offset": 9, "nodeName": "self", "type": "TestValidationSplit"}, {"lineNumber": 1058, "col_offset": 6, "nodeName": "data_adapter", "type": "module"}, {"lineNumber": 1059, "col_offset": 10, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1068, "col_offset": 9, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1076, "col_offset": 10, "nodeName": "ListsOfScalarsDataAdapterTest", "type": "Type[ListsOfScalarsDataAdapterTest]"}, {"lineNumber": 1076, "col_offset": 41, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1080, "col_offset": 20, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 1080, "col_offset": 48, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1081, "col_offset": 20, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 1081, "col_offset": 48, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1083, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 1083, "col_offset": 49, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1084, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 1084, "col_offset": 49, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1085, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 1085, "col_offset": 49, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1086, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 1086, "col_offset": 49, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1087, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 1087, "col_offset": 49, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1088, "col_offset": 21, "nodeName": "adapter_cls", "type": "Any"}, {"lineNumber": 1097, "col_offset": 21, "nodeName": "st", "type": "Any"}, {"lineNumber": 1101, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "layers", "type": "module"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "self", "type": "TestSequence"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "pd", "type": "Any"}, {"lineNumber": 158, "col_offset": 61, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 160, "col_offset": 49, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "keras", "type": "module"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "keras", "type": "module"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "keras", "type": "module"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 240, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 50, "nodeName": "shuffled_batch", "type": "Any"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 393, "col_offset": 21, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 416, "col_offset": 21, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 434, "col_offset": 28, "nodeName": "self", "type": "GenericArrayLikeDataAdapterTest"}, {"lineNumber": 450, "col_offset": 35, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 466, "col_offset": 35, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 481, "col_offset": 35, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 504, "col_offset": 25, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 505, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 537, "col_offset": 25, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "ds_data", "type": "List[Any]"}, {"lineNumber": 538, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 553, "col_offset": 50, "nodeName": "shuffled_batch", "type": "Any"}, {"lineNumber": 618, "col_offset": 21, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 619, "col_offset": 21, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 620, "col_offset": 20, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 621, "col_offset": 21, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 622, "col_offset": 21, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 626, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 626, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 628, "col_offset": 35, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 646, "col_offset": 45, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 651, "col_offset": 58, "nodeName": "self", "type": "DatasetAdapterTest"}, {"lineNumber": 661, "col_offset": 21, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 662, "col_offset": 21, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 663, "col_offset": 21, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 664, "col_offset": 20, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 666, "col_offset": 21, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 672, "col_offset": 35, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 680, "col_offset": 35, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 704, "col_offset": 47, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 710, "col_offset": 47, "nodeName": "self", "type": "GeneratorDataAdapterTest"}, {"lineNumber": 716, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 730, "col_offset": 21, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 731, "col_offset": 21, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 732, "col_offset": 21, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 733, "col_offset": 21, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 734, "col_offset": 20, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 735, "col_offset": 21, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 736, "col_offset": 21, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 741, "col_offset": 35, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 749, "col_offset": 35, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 773, "col_offset": 46, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 778, "col_offset": 59, "nodeName": "self", "type": "KerasSequenceAdapterTest"}, {"lineNumber": 784, "col_offset": 11, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 794, "col_offset": 26, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 799, "col_offset": 11, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 806, "col_offset": 26, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 811, "col_offset": 11, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 816, "col_offset": 20, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 821, "col_offset": 26, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 833, "col_offset": 26, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 838, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "cardinality", "type": "Any"}, {"lineNumber": 841, "col_offset": 41, "nodeName": "filtered_ds", "type": "Any"}, {"lineNumber": 841, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 846, "col_offset": 21, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 851, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 851, "col_offset": 31, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 858, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "cardinality", "type": "Any"}, {"lineNumber": 861, "col_offset": 41, "nodeName": "filtered_ds", "type": "Any"}, {"lineNumber": 861, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 866, "col_offset": 20, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 870, "col_offset": 11, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 871, "col_offset": 17, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 872, "col_offset": 10, "nodeName": "append", "type": "Callable"}, {"lineNumber": 879, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 887, "col_offset": 13, "nodeName": "catch_stop_iteration", "type": "Any"}, {"lineNumber": 888, "col_offset": 10, "nodeName": "append", "type": "Callable"}, {"lineNumber": 904, "col_offset": 8, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 904, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 904, "col_offset": 31, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 924, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 924, "col_offset": 31, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 938, "col_offset": 8, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 938, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 938, "col_offset": 31, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 941, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 951, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 958, "col_offset": 8, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 958, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 958, "col_offset": 31, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 972, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 972, "col_offset": 31, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 993, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1009, "col_offset": 10, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 1009, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 1016, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1016, "col_offset": 30, "nodeName": "next", "type": "Callable"}, {"lineNumber": 1016, "col_offset": 35, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 1016, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1043, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1044, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1045, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1047, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1048, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1049, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 1054, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1059, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1068, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 1080, "col_offset": 20, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1081, "col_offset": 20, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1083, "col_offset": 21, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1084, "col_offset": 21, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1085, "col_offset": 21, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1086, "col_offset": 21, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1087, "col_offset": 21, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 1088, "col_offset": 21, "nodeName": "self", "type": "ListsOfScalarsDataAdapterTest"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 76, "col_offset": 56, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "keras", "type": "module"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "pd", "type": "Any"}, {"lineNumber": 160, "col_offset": 49, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "self", "type": "TensorLikeDataAdapterTest"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "math", "type": "module"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 273, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "math", "type": "module"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 306, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "shuffled_batch", "type": "Any"}, {"lineNumber": 322, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 504, "col_offset": 25, "nodeName": "math", "type": "module"}, {"lineNumber": 504, "col_offset": 35, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 504, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 537, "col_offset": 25, "nodeName": "math", "type": "module"}, {"lineNumber": 537, "col_offset": 35, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 537, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "shuffled_batch", "type": "Any"}, {"lineNumber": 553, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 716, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 720, "col_offset": 26, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 784, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 799, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 811, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "experimental", "type": "Any"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "experimental", "type": "Any"}, {"lineNumber": 872, "col_offset": 10, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 872, "col_offset": 28, "nodeName": "next", "type": "Callable"}, {"lineNumber": 872, "col_offset": 33, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 887, "col_offset": 13, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 888, "col_offset": 10, "nodeName": "epoch_data", "type": "List[Any]"}, {"lineNumber": 888, "col_offset": 28, "nodeName": "next", "type": "Callable"}, {"lineNumber": 888, "col_offset": 33, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 951, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 993, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 994, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 994, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1009, "col_offset": 10, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 1043, "col_offset": 21, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 1044, "col_offset": 21, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 1045, "col_offset": 21, "nodeName": "train_sw", "type": "Any"}, {"lineNumber": 1047, "col_offset": 21, "nodeName": "val_x", "type": "Any"}, {"lineNumber": 1048, "col_offset": 21, "nodeName": "val_y", "type": "Any"}, {"lineNumber": 1049, "col_offset": 21, "nodeName": "val_sw", "type": "Any"}, {"lineNumber": 1054, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "numpy_input", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "numpy_target", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 56, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "next", "type": "Callable"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 505, "col_offset": 23, "nodeName": "next", "type": "Callable"}, {"lineNumber": 505, "col_offset": 28, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 716, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 784, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 794, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 794, "col_offset": 31, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 799, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 806, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 806, "col_offset": 31, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 811, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 821, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 821, "col_offset": 31, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 833, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 833, "col_offset": 31, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 916, "col_offset": 17, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 949, "col_offset": 17, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 994, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 994, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 1009, "col_offset": 10, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "self", "type": "DataAdapterTestBase"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "next", "type": "Callable"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 322, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 538, "col_offset": 23, "nodeName": "next", "type": "Callable"}, {"lineNumber": 538, "col_offset": 28, "nodeName": "ds_iter", "type": "Any"}, {"lineNumber": 553, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 720, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 916, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 916, "col_offset": 39, "nodeName": "step", "type": "int"}, {"lineNumber": 949, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 949, "col_offset": 39, "nodeName": "step", "type": "int"}, {"lineNumber": 1009, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 826, "col_offset": 11, "nodeName": "tf", "type": "Any"}]