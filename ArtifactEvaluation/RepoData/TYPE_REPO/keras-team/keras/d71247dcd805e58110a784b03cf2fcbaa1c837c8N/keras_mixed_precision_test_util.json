[{"lineNumber": 22, "col_offset": 0, "nodeName": "create_identity_with_grad_check_fn", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "create_identity_with_nan_gradients_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 2, "nodeName": "assert_input_types", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "AssertTypeLayer", "type": "Type[AssertTypeLayer]"}, {"lineNumber": 153, "col_offset": 2, "nodeName": "build", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 2, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 2, "nodeName": "_multiply", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 2, "nodeName": "get_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "Regularizer", "type": "Any"}, {"lineNumber": 181, "col_offset": 2, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 2, "nodeName": "get_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "Regularizer", "type": "Any"}, {"lineNumber": 191, "col_offset": 2, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 194, "col_offset": 2, "nodeName": "get_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "identity_with_grad_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "identity_with_nan_gradients", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "base_layer", "type": "module"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "regularizers", "type": "module"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "regularizers", "type": "module"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 7, "nodeName": "_assert_type", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "_regularizer", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "_activity_regularizer", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "_use_operator", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "use_operator", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "_var_name", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "built", "type": "bool"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "_use_operator", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "_use_operator", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "_var_name", "type": "Any"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "_assert_type", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "identity", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "expected_dtype", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "dx", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "grad", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "_identity_with_grad_check", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "identity", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "grad", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "_identity_with_nan_gradients", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "assert_type", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 110, "col_offset": 7, "nodeName": "self", "type": "AssertTypeLayer"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "inputs_flattened", "type": "Any"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "inp", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "inputs_flattened", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 144, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 144, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "_var_name", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "assert_input_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "_multiply", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "_regularizer", "type": "Any"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "_activity_regularizer", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "expected_gradient", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assert_op", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "dx", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "cond", "type": "Any"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "have_nan_gradients", "type": "Any"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "deserialize", "type": "Any"}, {"lineNumber": 141, "col_offset": 51, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "deserialize", "type": "Any"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "_activity_regularizer", "type": "Any"}, {"lineNumber": 151, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 155, "col_offset": 60, "nodeName": "_regularizer", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "regularizers", "type": "module"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "regularizers", "type": "module"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "expected_dtype", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "control_dependencies", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "dx", "type": "Any"}, {"lineNumber": 54, "col_offset": 50, "nodeName": "expected_tensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "control_dependencies", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "dx", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "v1", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "dx", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "as_dtype", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "assert_type", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "AssertTypeLayer", "type": "Type[AssertTypeLayer]"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "self", "type": "AssertTypeLayer"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "nest", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "base_dtype", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "_assert_type", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "regularizers", "type": "module"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "regularizers", "type": "module"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 150, "col_offset": 10, "nodeName": "MultiplyLayer", "type": "Type[MultiplyLayer]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 155, "col_offset": 60, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "MultiplyLayer", "type": "Type[MultiplyLayer]"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "self", "type": "MultiplyLayer"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "dx", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "expected_dtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 66, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "dx", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "v1", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "assert_op", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "compat", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "dx", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "self", "type": "AssertTypeLayer"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "_assert_type", "type": "Any"}, {"lineNumber": 142, "col_offset": 66, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 146, "col_offset": 47, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 47, "col_offset": 66, "nodeName": "dx", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "compat", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "inp", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "self", "type": "AssertTypeLayer"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "inp", "type": "Any"}]