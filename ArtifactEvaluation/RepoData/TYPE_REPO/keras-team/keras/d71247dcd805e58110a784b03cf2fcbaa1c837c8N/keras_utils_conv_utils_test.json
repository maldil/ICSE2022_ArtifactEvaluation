[{"lineNumber": 27, "col_offset": 0, "nodeName": "_get_const_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 336, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "ndims", "type": "int"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[Union[int, Any], ...]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "ndims", "type": "int"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "ndims", "type": "int"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "strides", "type": "Tuple[Union[int, Any], ...]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[Union[int, Any], ...]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "ndims", "type": "int"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "strides", "type": "Tuple[Any, ...]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[Union[int, Any], ...]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "ndims", "type": "int"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "d", "type": "int"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "ndims", "type": "int"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "strides", "type": "int"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "ndims", "type": "int"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 337, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "ndims", "type": "int"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "_get_const_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "bool", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "ndims", "type": "int"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "ndims", "type": "int"}, {"lineNumber": 186, "col_offset": 6, "nodeName": "mask", "type": "Any"}, {"lineNumber": 187, "col_offset": 6, "nodeName": "mask", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "ndims", "type": "int"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "_get_const_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 43, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 205, "col_offset": 48, "nodeName": "bool", "type": "Any"}, {"lineNumber": 206, "col_offset": 7, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "ndims", "type": "int"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "_get_const_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 224, "col_offset": 43, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "bool", "type": "Any"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 228, "col_offset": 10, "nodeName": "in_position", "type": "Tuple[Any, ...]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "ndims", "type": "int"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "ndims", "type": "int"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "kernel_shape", "type": "List[Union[int, Any]]"}, {"lineNumber": 251, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 254, "col_offset": 6, "nodeName": "mask", "type": "Any"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "mask", "type": "Any"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "mask", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "ndims", "type": "int"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "ndims", "type": "int"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 296, "col_offset": 49, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "strides", "type": "int"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 314, "col_offset": 35, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 314, "col_offset": 49, "nodeName": "strides", "type": "int"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "ndims", "type": "int"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 319, "col_offset": 35, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 319, "col_offset": 49, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "ndims", "type": "int"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 323, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 22, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 325, "col_offset": 49, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 327, "col_offset": 21, "nodeName": "ndims", "type": "int"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 337, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "min", "type": "Callable"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "d", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "dim", "type": "Any"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "d", "type": "Any"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "convert_data_format", "type": "Callable[[Any, Any], str]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "convert_data_format", "type": "Callable[[Any, Any], str]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "convert_data_format", "type": "Callable[[Any, Any], str]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "convert_data_format", "type": "Callable[[Any, Any], str]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "convert_data_format", "type": "Callable[[Any, Any], str]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "convert_data_format", "type": "Callable[[Any, Any], str]"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 66, "col_offset": 6, "nodeName": "convert_data_format", "type": "Callable[[Any, Any], str]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "normalize_tuple", "type": "Callable"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "normalize_tuple", "type": "Callable"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 75, "col_offset": 6, "nodeName": "normalize_tuple", "type": "Callable"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "normalize_tuple", "type": "Callable"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "normalize_data_format", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "normalize_data_format", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "normalize_data_format", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "normalize_padding", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "normalize_padding", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "normalize_padding", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "conv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "conv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "conv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "conv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "conv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "conv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "conv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "conv_input_length", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "conv_input_length", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "conv_input_length", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "conv_input_length", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "conv_input_length", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "conv_input_length", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "deconv_output_length", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "output_shape", "type": "Tuple[Union[int, Any], ...]"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "kernel_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "padding", "type": "str"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 186, "col_offset": 52, "nodeName": "bool", "type": "Any"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 188, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 189, "col_offset": 10, "nodeName": "mask", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "output_shape", "type": "Tuple[Union[int, Any], ...]"}, {"lineNumber": 205, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "mask", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "strides", "type": "Tuple[Union[int, Any], ...]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "padding", "type": "str"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "output_shape", "type": "Tuple[Union[int, Any], ...]"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "product", "type": "Callable"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "out_position", "type": "Tuple[Any, ...]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "strides", "type": "Tuple[Any, ...]"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "padding", "type": "str"}, {"lineNumber": 248, "col_offset": 27, "nodeName": "ndims", "type": "int"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "kernel_shape", "type": "List[Union[int, Any]]"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "min", "type": "Callable"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 254, "col_offset": 52, "nodeName": "bool", "type": "Any"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "product", "type": "Callable"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "take", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "mask", "type": "Any"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 266, "col_offset": 10, "nodeName": "mask", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 311, "col_offset": 27, "nodeName": "ndims", "type": "int"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "ndims", "type": "int"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 337, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 66, "col_offset": 6, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 75, "col_offset": 6, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "self", "type": "TestBasicConvUtilsTest"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 186, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 188, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 10, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "padding", "type": "str"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "max", "type": "Callable"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "d", "type": "Any"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "d", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "max", "type": "Callable"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "d", "type": "Any"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "d", "type": "Any"}, {"lineNumber": 227, "col_offset": 21, "nodeName": "d", "type": "Any"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "itertools", "type": "module"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "d", "type": "int"}, {"lineNumber": 249, "col_offset": 36, "nodeName": "d", "type": "int"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "d", "type": "int"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 254, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "itertools", "type": "module"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 263, "col_offset": 61, "nodeName": "ndims", "type": "int"}, {"lineNumber": 263, "col_offset": 69, "nodeName": "d", "type": "int"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 10, "nodeName": "conv_kernel_mask", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 269, "col_offset": 14, "nodeName": "kernel_shape", "type": "List[Union[int, Any]]"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "strides", "type": "Tuple[int, ...]"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "padding", "type": "str"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "prod", "type": "Any"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 190, "col_offset": 10, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "mask", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "mask", "type": "Any"}, {"lineNumber": 252, "col_offset": 43, "nodeName": "d", "type": "int"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "prod", "type": "Any"}, {"lineNumber": 254, "col_offset": 37, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 260, "col_offset": 10, "nodeName": "d", "type": "int"}, {"lineNumber": 263, "col_offset": 36, "nodeName": "min", "type": "Callable"}, {"lineNumber": 267, "col_offset": 10, "nodeName": "conv_utils", "type": "module"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "output_shape", "type": "Tuple[Union[int, Any], ...]"}, {"lineNumber": 228, "col_offset": 60, "nodeName": "d", "type": "Any"}, {"lineNumber": 228, "col_offset": 65, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "min", "type": "Callable"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "p", "type": "Any"}, {"lineNumber": 229, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "in_position", "type": "Tuple[Any, ...]"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "in_position", "type": "Tuple[Any, ...]"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "out_position", "type": "Tuple[Any, ...]"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 39, "nodeName": "dim", "type": "int"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 43, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "d", "type": "Any"}, {"lineNumber": 258, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 258, "col_offset": 52, "nodeName": "ndims", "type": "int"}, {"lineNumber": 263, "col_offset": 55, "nodeName": "d", "type": "int"}]