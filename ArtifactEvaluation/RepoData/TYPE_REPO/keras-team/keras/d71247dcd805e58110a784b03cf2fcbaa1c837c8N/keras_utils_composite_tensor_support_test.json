[{"lineNumber": 147, "col_offset": 0, "nodeName": "get_test_mode_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "get_input_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 283, "col_offset": 0, "nodeName": "get_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 0, "nodeName": "prepare_inputs", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 39, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 78, "col_offset": 2, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "Model", "type": "Any"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 2, "nodeName": "_layer_name_for_i", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "call", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 158, "col_offset": 2, "nodeName": "test_internal_ragged_tensors", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 2, "nodeName": "test_internal_sparse_tensors", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 2, "nodeName": "test_training_internal_ragged_tensors", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 205, "col_offset": 2, "nodeName": "test_ragged_tensor_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 2, "nodeName": "test_ragged_tensor_rebatched_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 2, "nodeName": "test_sparse_tensor_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 2, "nodeName": "test_sparse_tensor_rebatched_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 28, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 318, "col_offset": 2, "nodeName": "test_sparse_tensors", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 359, "col_offset": 33, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 360, "col_offset": 33, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 362, "col_offset": 2, "nodeName": "test_sparse_scipy_predict_inputs_via_input_layer_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 2, "nodeName": "test_sparse_scipy_eval_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 407, "col_offset": 2, "nodeName": "test_sparse_scipy_predict_input_dicts_via_input_layer_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 2, "nodeName": "test_sparse_scipy_eval_input_dicts", "type": "Callable[[Any], Any]"}, {"lineNumber": 481, "col_offset": 28, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 482, "col_offset": 28, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 484, "col_offset": 2, "nodeName": "test_ragged_input", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 526, "col_offset": 38, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 527, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 529, "col_offset": 2, "nodeName": "test_ragged_tensor_input_with_one_none_dimension", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 558, "col_offset": 2, "nodeName": "test_ragged_tensor_input_with_no_none_dimension", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 591, "col_offset": 38, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 593, "col_offset": 2, "nodeName": "_normalize_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 598, "col_offset": 2, "nodeName": "test_sparse_tensor_model_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 620, "col_offset": 2, "nodeName": "test_ragged_tensor_model_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "keras", "type": "module"}, {"lineNumber": 117, "col_offset": 2, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 148, "col_offset": 2, "nodeName": "run_eagerly", "type": "Any"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 294, "col_offset": 2, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 296, "col_offset": 5, "nodeName": "use_dict", "type": "Any"}, {"lineNumber": 298, "col_offset": 5, "nodeName": "use_dataset", "type": "Any"}, {"lineNumber": 316, "col_offset": 28, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 359, "col_offset": 33, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 360, "col_offset": 33, "nodeName": "test", "type": "Any"}, {"lineNumber": 481, "col_offset": 28, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 482, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 526, "col_offset": 38, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 527, "col_offset": 38, "nodeName": "test", "type": "Any"}, {"lineNumber": 591, "col_offset": 38, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 640, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "_default_value", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "default_value", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "_padding", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "padding", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "_ragged_rank", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "ragged_rank", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "indices", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "shape", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 5, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 121, "col_offset": 5, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 131, "col_offset": 5, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "run_eagerly", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "layers", "type": "List[Union[ToRagged, ToDense]]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "layers", "type": "List[Union[ToSparse, ToDense]]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "expected_data", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "history", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "layers", "type": "List[ToRagged]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "_run_eagerly", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "expected_values", "type": "List[List[int]]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "layers", "type": "List[ToRagged]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "_run_eagerly", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "expected_values", "type": "List[List[int]]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "layers", "type": "List[ToSparse]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "_run_eagerly", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "expected_indices", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "expected_values", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "expected_dense_shape", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "layers", "type": "List[ToSparse]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "_run_eagerly", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "expected_values", "type": "numpy.ndarray"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "expected_dense_shape", "type": "numpy.ndarray"}, {"lineNumber": 275, "col_offset": 9, "nodeName": "use_dict", "type": "Any"}, {"lineNumber": 284, "col_offset": 5, "nodeName": "use_dataset", "type": "Any"}, {"lineNumber": 293, "col_offset": 2, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "input_data", "type": "Dict[Any, Any]"}, {"lineNumber": 306, "col_offset": 10, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 306, "col_offset": 22, "nodeName": "expected_output", "type": "Optional[Any]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "input_name", "type": "Optional[str]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "data_element", "type": "Tuple[Any, numpy.ndarray]"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "data", "type": "List[Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 360, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "expected_output_2", "type": "numpy.ndarray"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "output_2", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "expected_output_2", "type": "numpy.ndarray"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "output_2", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "expected_output_2", "type": "numpy.ndarray"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "output_2", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "expected_output_2", "type": "numpy.ndarray"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "output_2", "type": "Any"}, {"lineNumber": 482, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "input_name", "type": "Optional[str]"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "data_element", "type": "Tuple[Any, numpy.ndarray]"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "data", "type": "List[Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 527, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[None, int]"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "input_name", "type": "Optional[str]"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "data_element", "type": "Tuple[Any, numpy.ndarray]"}, {"lineNumber": 548, "col_offset": 24, "nodeName": "data", "type": "List[Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, int]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "input_name", "type": "Optional[str]"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "data_element", "type": "Tuple[Any, numpy.ndarray]"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "data", "type": "List[Tuple[Any, numpy.ndarray]]"}, {"lineNumber": 596, "col_offset": 11, "nodeName": "shape", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "shape", "type": "Any"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "shape", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "shape", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "shape", "type": "Any"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 641, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "self", "type": "ToDense"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 46, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "RaggedTensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "cast", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "self", "type": "ToRagged"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "self", "type": "ToRagged"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "from_tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "where", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "gather_nd", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "indices", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "indices", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "layer", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "self", "type": "_SubclassModel"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "i_layer", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "layer", "type": "Any"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 5, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "_SubclassModel", "type": "Type[_SubclassModel]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 123, "col_offset": 7, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 132, "col_offset": 7, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "Model", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "get_model_from_layers", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 48, "nodeName": "layers", "type": "List[Union[ToRagged, ToDense]]"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "output", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "get_model_from_layers", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 48, "nodeName": "layers", "type": "List[Union[ToSparse, ToDense]]"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "output", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "get_model_from_layers", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 48, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "fit", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "expected_data", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "get_model_from_layers", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "layers", "type": "List[ToRagged]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "expected_values", "type": "List[List[int]]"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "output", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "get_model_from_layers", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 48, "nodeName": "layers", "type": "List[ToRagged]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "expected_values", "type": "List[List[int]]"}, {"lineNumber": 231, "col_offset": 41, "nodeName": "output", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "get_model_from_layers", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 48, "nodeName": "layers", "type": "List[ToSparse]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 242, "col_offset": 27, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "indices", "type": "Any"}, {"lineNumber": 248, "col_offset": 40, "nodeName": "expected_indices", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 249, "col_offset": 39, "nodeName": "expected_values", "type": "numpy.ndarray"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "dense_shape", "type": "Any"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "expected_dense_shape", "type": "numpy.ndarray"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "get_model_from_layers", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "layers", "type": "List[ToSparse]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "input_data", "type": "numpy.ndarray"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "indices", "type": "Any"}, {"lineNumber": 268, "col_offset": 40, "nodeName": "expected_indices", "type": "numpy.ndarray"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 269, "col_offset": 39, "nodeName": "expected_values", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "dense_shape", "type": "Any"}, {"lineNumber": 270, "col_offset": 44, "nodeName": "expected_dense_shape", "type": "numpy.ndarray"}, {"lineNumber": 285, "col_offset": 7, "nodeName": "action", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 297, "col_offset": 18, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 299, "col_offset": 7, "nodeName": "action", "type": "Any"}, {"lineNumber": 305, "col_offset": 6, "nodeName": "expected_output", "type": "None"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "get_input_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "use_dict", "type": "Any"}, {"lineNumber": 329, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "get_model_from_layers_with_input", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 45, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "get_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "use_dataset", "type": "Any"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "action", "type": "Any"}, {"lineNumber": 366, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "get_model_from_layers_with_input", "type": "Callable[..., Any]"}, {"lineNumber": 368, "col_offset": 45, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 370, "col_offset": 17, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 373, "col_offset": 27, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 374, "col_offset": 41, "nodeName": "output", "type": "Any"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 378, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 379, "col_offset": 29, "nodeName": "input_data_2", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "expected_output_2", "type": "numpy.ndarray"}, {"lineNumber": 380, "col_offset": 43, "nodeName": "output_2", "type": "Any"}, {"lineNumber": 386, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "get_model_from_layers_with_input", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 45, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 394, "col_offset": 17, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 398, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 398, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 398, "col_offset": 40, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 403, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 404, "col_offset": 30, "nodeName": "input_data_2", "type": "Any"}, {"lineNumber": 404, "col_offset": 44, "nodeName": "expected_output_2", "type": "numpy.ndarray"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 412, "col_offset": 6, "nodeName": "input_name", "type": "str"}, {"lineNumber": 414, "col_offset": 6, "nodeName": "input_name", "type": "str"}, {"lineNumber": 415, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "get_model_from_layers_with_input", "type": "Callable[..., Any]"}, {"lineNumber": 418, "col_offset": 45, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 425, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 426, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 426, "col_offset": 27, "nodeName": "input_data", "type": "Dict[str, Any]"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 427, "col_offset": 24, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 427, "col_offset": 41, "nodeName": "output", "type": "Any"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 435, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 435, "col_offset": 29, "nodeName": "input_data_2", "type": "Dict[str, Any]"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "expected_output_2", "type": "numpy.ndarray"}, {"lineNumber": 436, "col_offset": 43, "nodeName": "output_2", "type": "Any"}, {"lineNumber": 443, "col_offset": 6, "nodeName": "input_name", "type": "str"}, {"lineNumber": 445, "col_offset": 6, "nodeName": "input_name", "type": "str"}, {"lineNumber": 446, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "get_model_from_layers_with_input", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 45, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 460, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 461, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 461, "col_offset": 28, "nodeName": "input_data", "type": "Dict[str, Any]"}, {"lineNumber": 461, "col_offset": 40, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 470, "col_offset": 30, "nodeName": "input_data_2", "type": "Dict[str, Any]"}, {"lineNumber": 470, "col_offset": 44, "nodeName": "expected_output_2", "type": "numpy.ndarray"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "get_input_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 489, "col_offset": 32, "nodeName": "use_dict", "type": "Any"}, {"lineNumber": 490, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 493, "col_offset": 26, "nodeName": "_type_spec", "type": "Any"}, {"lineNumber": 494, "col_offset": 26, "nodeName": "RaggedTensorSpec", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "get_model_from_layers_with_input", "type": "Callable[..., Any]"}, {"lineNumber": 497, "col_offset": 45, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 537, "col_offset": 17, "nodeName": "get_input_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 537, "col_offset": 32, "nodeName": "use_dict", "type": "Any"}, {"lineNumber": 538, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "get_model_from_layers_with_input", "type": "Callable[..., Any]"}, {"lineNumber": 541, "col_offset": 45, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 555, "col_offset": 6, "nodeName": "result", "type": "Any"}, {"lineNumber": 566, "col_offset": 17, "nodeName": "get_input_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 566, "col_offset": 32, "nodeName": "use_dict", "type": "Any"}, {"lineNumber": 567, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "get_model_from_layers_with_input", "type": "Callable[..., Any]"}, {"lineNumber": 570, "col_offset": 45, "nodeName": "layers", "type": "List[ToDense]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 576, "col_offset": 13, "nodeName": "get_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 576, "col_offset": 24, "nodeName": "use_dataset", "type": "Any"}, {"lineNumber": 585, "col_offset": 6, "nodeName": "result", "type": "Any"}, {"lineNumber": 595, "col_offset": 6, "nodeName": "shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 600, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "get_model_from_layers_with_input", "type": "Callable[..., Any]"}, {"lineNumber": 606, "col_offset": 45, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 608, "col_offset": 19, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 622, "col_offset": 18, "nodeName": "Input", "type": "Any"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "get_model_from_layers_with_input", "type": "Callable[..., Any]"}, {"lineNumber": 626, "col_offset": 45, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 628, "col_offset": 19, "nodeName": "constant", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 641, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "to_tensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "RaggedTensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "_padding", "type": "Any"}, {"lineNumber": 72, "col_offset": 51, "nodeName": "_ragged_rank", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "not_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "v1", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "v1", "type": "Any"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "int64", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "self", "type": "_SubclassModel"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "layer", "type": "Any"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "_set_inputs", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "i_layer", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "self", "type": "_SubclassModel"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "self", "type": "_SubclassModel"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "layer", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "add", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "add", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "Input", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "keras", "type": "module"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "ToRagged", "type": "Type[ToRagged]"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "ToSparse", "type": "Type[ToSparse]"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "ToRagged", "type": "Type[ToRagged]"}, {"lineNumber": 187, "col_offset": 50, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "ToRagged", "type": "Type[ToRagged]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "ToRagged", "type": "Type[ToRagged]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "ToSparse", "type": "Type[ToSparse]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "ToSparse", "type": "Type[ToSparse]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 277, "col_offset": 7, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 301, "col_offset": 10, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 329, "col_offset": 18, "nodeName": "input_layer", "type": "module"}, {"lineNumber": 330, "col_offset": 43, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 330, "col_offset": 61, "nodeName": "int32", "type": "Any"}, {"lineNumber": 331, "col_offset": 14, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 332, "col_offset": 65, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 342, "col_offset": 36, "nodeName": "prepare_inputs", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 342, "col_offset": 51, "nodeName": "data_element", "type": "Tuple[Any, numpy.ndarray]"}, {"lineNumber": 342, "col_offset": 65, "nodeName": "use_dict", "type": "Any"}, {"lineNumber": 343, "col_offset": 51, "nodeName": "use_dataset", "type": "Any"}, {"lineNumber": 343, "col_offset": 64, "nodeName": "action", "type": "Any"}, {"lineNumber": 344, "col_offset": 51, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 346, "col_offset": 9, "nodeName": "action", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 349, "col_offset": 9, "nodeName": "action", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 352, "col_offset": 9, "nodeName": "action", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 366, "col_offset": 18, "nodeName": "input_layer", "type": "module"}, {"lineNumber": 366, "col_offset": 67, "nodeName": "int64", "type": "Any"}, {"lineNumber": 367, "col_offset": 14, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 368, "col_offset": 65, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 370, "col_offset": 17, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 378, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 18, "nodeName": "input_layer", "type": "module"}, {"lineNumber": 386, "col_offset": 67, "nodeName": "int64", "type": "Any"}, {"lineNumber": 387, "col_offset": 14, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 388, "col_offset": 65, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 394, "col_offset": 17, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 403, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "output_2", "type": "Any"}, {"lineNumber": 411, "col_offset": 7, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 415, "col_offset": 18, "nodeName": "input_layer", "type": "module"}, {"lineNumber": 416, "col_offset": 38, "nodeName": "input_name", "type": "str"}, {"lineNumber": 416, "col_offset": 56, "nodeName": "int64", "type": "Any"}, {"lineNumber": 417, "col_offset": 14, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 418, "col_offset": 65, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 425, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 426, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 442, "col_offset": 7, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 446, "col_offset": 18, "nodeName": "input_layer", "type": "module"}, {"lineNumber": 447, "col_offset": 38, "nodeName": "input_name", "type": "str"}, {"lineNumber": 447, "col_offset": 56, "nodeName": "int64", "type": "Any"}, {"lineNumber": 448, "col_offset": 14, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 449, "col_offset": 65, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 460, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 461, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 471, "col_offset": 29, "nodeName": "output_2", "type": "Any"}, {"lineNumber": 490, "col_offset": 18, "nodeName": "input_layer", "type": "module"}, {"lineNumber": 491, "col_offset": 46, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 491, "col_offset": 64, "nodeName": "int32", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 493, "col_offset": 26, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 494, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 496, "col_offset": 14, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 497, "col_offset": 65, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 506, "col_offset": 36, "nodeName": "prepare_inputs", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 506, "col_offset": 51, "nodeName": "data_element", "type": "Tuple[Any, numpy.ndarray]"}, {"lineNumber": 506, "col_offset": 65, "nodeName": "use_dict", "type": "Any"}, {"lineNumber": 507, "col_offset": 51, "nodeName": "use_dataset", "type": "Any"}, {"lineNumber": 507, "col_offset": 64, "nodeName": "action", "type": "Any"}, {"lineNumber": 508, "col_offset": 51, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 510, "col_offset": 9, "nodeName": "action", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 513, "col_offset": 9, "nodeName": "action", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 516, "col_offset": 9, "nodeName": "action", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 538, "col_offset": 18, "nodeName": "input_layer", "type": "module"}, {"lineNumber": 539, "col_offset": 14, "nodeName": "input_shape", "type": "Tuple[None, int]"}, {"lineNumber": 539, "col_offset": 45, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 539, "col_offset": 63, "nodeName": "int32", "type": "Any"}, {"lineNumber": 540, "col_offset": 14, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 541, "col_offset": 65, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 549, "col_offset": 36, "nodeName": "prepare_inputs", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 550, "col_offset": 10, "nodeName": "data_element", "type": "Tuple[Any, numpy.ndarray]"}, {"lineNumber": 551, "col_offset": 10, "nodeName": "use_dict", "type": "Any"}, {"lineNumber": 552, "col_offset": 10, "nodeName": "use_dataset", "type": "Any"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 555, "col_offset": 29, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 556, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 556, "col_offset": 26, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 556, "col_offset": 43, "nodeName": "result", "type": "Any"}, {"lineNumber": 567, "col_offset": 18, "nodeName": "input_layer", "type": "module"}, {"lineNumber": 568, "col_offset": 14, "nodeName": "input_shape", "type": "Tuple[int, int]"}, {"lineNumber": 568, "col_offset": 45, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 568, "col_offset": 63, "nodeName": "int32", "type": "Any"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 570, "col_offset": 65, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 579, "col_offset": 36, "nodeName": "prepare_inputs", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 580, "col_offset": 10, "nodeName": "data_element", "type": "Tuple[Any, numpy.ndarray]"}, {"lineNumber": 581, "col_offset": 10, "nodeName": "use_dict", "type": "Any"}, {"lineNumber": 582, "col_offset": 10, "nodeName": "use_dataset", "type": "Any"}, {"lineNumber": 585, "col_offset": 15, "nodeName": "predict", "type": "Any"}, {"lineNumber": 585, "col_offset": 29, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 586, "col_offset": 26, "nodeName": "expected_output", "type": "numpy.ndarray"}, {"lineNumber": 586, "col_offset": 43, "nodeName": "result", "type": "Any"}, {"lineNumber": 594, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 594, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 594, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 595, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 600, "col_offset": 18, "nodeName": "input_layer", "type": "module"}, {"lineNumber": 601, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 32, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 605, "col_offset": 14, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 606, "col_offset": 65, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 608, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 614, "col_offset": 18, "nodeName": "sparse_input", "type": "Any"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 615, "col_offset": 29, "nodeName": "_normalize_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 615, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 617, "col_offset": 26, "nodeName": "sparse_input", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 618, "col_offset": 29, "nodeName": "_normalize_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 618, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 622, "col_offset": 18, "nodeName": "input_layer", "type": "module"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 623, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 625, "col_offset": 14, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 626, "col_offset": 65, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 628, "col_offset": 19, "nodeName": "ragged", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 633, "col_offset": 18, "nodeName": "ragged_input", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 634, "col_offset": 35, "nodeName": "_normalize_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 634, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "predict", "type": "Any"}, {"lineNumber": 636, "col_offset": 26, "nodeName": "ragged_input", "type": "Any"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 637, "col_offset": 35, "nodeName": "_normalize_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 637, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 641, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "ToDense", "type": "Type[ToDense]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "self", "type": "ToDense"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 46, "nodeName": "_default_value", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "to_dense", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "ToRagged", "type": "Type[ToRagged]"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "self", "type": "ToRagged"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "self", "type": "ToRagged"}, {"lineNumber": 72, "col_offset": 51, "nodeName": "self", "type": "ToRagged"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "compat", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "compat", "type": "Any"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 89, "col_offset": 10, "nodeName": "_SubclassModel", "type": "Type[_SubclassModel]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "self", "type": "_SubclassModel"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "_layer_name_for_i", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "self", "type": "_SubclassModel"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "_layer_name_for_i", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "keras", "type": "module"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "add", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "model", "type": "Any"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "keras", "type": "module"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 52, "nodeName": "input_dtype", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "core", "type": "module"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 191, "col_offset": 52, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "get_test_mode_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "history", "type": "Any"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "history", "type": "Any"}, {"lineNumber": 277, "col_offset": 7, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 330, "col_offset": 61, "nodeName": "tf", "type": "Any"}, {"lineNumber": 337, "col_offset": 10, "nodeName": "get_test_mode_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 347, "col_offset": 17, "nodeName": "predict", "type": "Any"}, {"lineNumber": 347, "col_offset": 31, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "expected_output", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 348, "col_offset": 45, "nodeName": "result", "type": "Any"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 350, "col_offset": 32, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 350, "col_offset": 44, "nodeName": "expected_output", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 354, "col_offset": 22, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 354, "col_offset": 34, "nodeName": "expected_output", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 366, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 370, "col_offset": 17, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 386, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 394, "col_offset": 17, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 411, "col_offset": 7, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 416, "col_offset": 56, "nodeName": "tf", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 442, "col_offset": 7, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 447, "col_offset": 56, "nodeName": "tf", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 485, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 491, "col_offset": 64, "nodeName": "tf", "type": "Any"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 502, "col_offset": 10, "nodeName": "get_test_mode_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "predict", "type": "Any"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 512, "col_offset": 28, "nodeName": "expected_output", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 512, "col_offset": 45, "nodeName": "result", "type": "Any"}, {"lineNumber": 514, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 514, "col_offset": 32, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 514, "col_offset": 44, "nodeName": "expected_output", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 518, "col_offset": 22, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 518, "col_offset": 34, "nodeName": "expected_output", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 533, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 539, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 546, "col_offset": 10, "nodeName": "get_test_mode_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 554, "col_offset": 21, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 556, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 561, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 562, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 568, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 575, "col_offset": 10, "nodeName": "get_test_mode_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 584, "col_offset": 21, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 585, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 585, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 601, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 603, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 615, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 618, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 623, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 628, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 634, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 637, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 49, "col_offset": 46, "nodeName": "self", "type": "ToDense"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "_default_value", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "self", "type": "_SubclassModel"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "self", "type": "_SubclassModel"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "Input", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "history", "type": "Any"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "history", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 300, "col_offset": 54, "nodeName": "input_data", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 347, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 350, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 33, "nodeName": "result", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 354, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 485, "col_offset": 13, "nodeName": "ragged", "type": "Any"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 514, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 515, "col_offset": 33, "nodeName": "result", "type": "Any"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "ragged", "type": "Any"}, {"lineNumber": 533, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 561, "col_offset": 13, "nodeName": "ragged", "type": "Any"}, {"lineNumber": 562, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 603, "col_offset": 32, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 623, "col_offset": 35, "nodeName": "model_input", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "self", "type": "ToDense"}, {"lineNumber": 56, "col_offset": 52, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "keras", "type": "module"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 53, "nodeName": "input_dtype", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "input_data", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 485, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 561, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 52, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "tf", "type": "Any"}]