[{"lineNumber": 30, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "_freezeModel", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 2, "nodeName": "_hasStatefulPartitionedCallOp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "_getNumVariables", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "_testConvertedFunction", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 2, "nodeName": "testKerasModel", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 2, "nodeName": "testKerasLSTM", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 2, "nodeName": "testEmbeddings", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 169, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "root", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "input_func", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "constant_graph_def", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "actual_value", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "root", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "converted_concrete_func", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "loaded_obj", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "actual_value", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "input_data", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "Model", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 170, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "Module", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "root", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "convert_variables_to_constants_v2", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "input_func", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "root", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "output_func", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "graph_def", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "as_graph_def", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "actual", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "actual_value", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "converted_concrete_func", "type": "Any"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "actual_shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "Module", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "root", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "save", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "root", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "load", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "actual", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "actual_value", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "root", "type": "Any"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "output_func", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "_freezeModel", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "to_save", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "_testConvertedFunction", "type": "Any"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "root", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "f", "type": "Any"}, {"lineNumber": 114, "col_offset": 46, "nodeName": "output_func", "type": "Any"}, {"lineNumber": 114, "col_offset": 59, "nodeName": "input_data", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "root", "type": "Any"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "output_func", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "_freezeModel", "type": "Any"}, {"lineNumber": 135, "col_offset": 42, "nodeName": "to_save", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "_testConvertedFunction", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "root", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "f", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "output_func", "type": "Any"}, {"lineNumber": 136, "col_offset": 59, "nodeName": "input_data", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "keras", "type": "module"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "EmbeddingModel", "type": "Type[Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "root", "type": "Any"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "output_func", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "_freezeModel", "type": "Any"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "func", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "_testConvertedFunction", "type": "Any"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "root", "type": "Any"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "f", "type": "Any"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "output_func", "type": "Any"}, {"lineNumber": 166, "col_offset": 59, "nodeName": "input_data", "type": "Dict[str, Any]"}, {"lineNumber": 170, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "f", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "convert_to_constants", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "op", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "graph", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "VariablesToConstantsTest"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "_getNumVariables", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "constant_graph_def", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "VariablesToConstantsTest"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "_hasStatefulPartitionedCallOp", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "constant_graph_def", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "func", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "nest", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "converted_concrete_func", "type": "Any"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "actual_shape", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "get_temp_dir", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "converted_concrete_func", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "nest", "type": "Any"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "constant", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "root", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "root", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "root", "type": "Any"}, {"lineNumber": 170, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "root", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "node", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "node", "type": "Any"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "node", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "converted_concrete_func", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "self", "type": "VariablesToConstantsTest"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "self", "type": "VariablesToConstantsTest"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 61, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "self", "type": "VariablesToConstantsTest"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "self", "type": "VariablesToConstantsTest"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "signatures", "type": "Any"}, {"lineNumber": 89, "col_offset": 68, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "testing", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 91, "col_offset": 55, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "keras", "type": "module"}, {"lineNumber": 103, "col_offset": 9, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "keras", "type": "module"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "gather", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "shared_weights", "type": "Any"}, {"lineNumber": 162, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "graph_def", "type": "Any"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "expected", "type": "Any"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "actual", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "loaded_obj", "type": "Any"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "expected", "type": "Any"}, {"lineNumber": 91, "col_offset": 55, "nodeName": "actual", "type": "Any"}, {"lineNumber": 103, "col_offset": 9, "nodeName": "layers", "type": "module"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 123, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "layers", "type": "module"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 144, "col_offset": 62, "nodeName": "int32", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "v1", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 9, "nodeName": "keras", "type": "module"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 123, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "keras", "type": "module"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 144, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "EmbeddingModel", "type": "Type[Any]"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "random_normal_initializer", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "compat", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "split", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "v1", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "compat", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "tf", "type": "Any"}]