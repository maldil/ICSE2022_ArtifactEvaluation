[{"lineNumber": 25, "col_offset": 15, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 27, "col_offset": 2, "nodeName": "test_one_hot", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "test_tokenizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "test_hashing_trick_hash", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 2, "nodeName": "test_hashing_trick_md5", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "test_tokenizer_oov_flag", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 2, "nodeName": "test_sequential_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 2, "nodeName": "test_text_to_word_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 2, "nodeName": "test_text_to_word_sequence_multichar_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 2, "nodeName": "test_text_to_word_sequence_unicode", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 2, "nodeName": "test_text_to_word_sequence_unicode_multichar_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 2, "nodeName": "test_tokenizer_unicode", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 139, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "text", "type": "unicode"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "sequences", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "x_train", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "x_test", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "x_test_seq", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "x_test_seq", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "seq", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "seq", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "text", "type": "unicode"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "seq", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "text", "type": "unicode"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "seq", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 140, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "text", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "text", "type": "unicode"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "Tokenizer", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "fit_on_texts", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "texts", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "texts_to_sequences_generator", "type": "Any"}, {"lineNumber": 51, "col_offset": 54, "nodeName": "texts", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "fit_on_sequences", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "sequences", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 6, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "hashing_trick", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "text", "type": "str"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "hashing_trick", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "Tokenizer", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "fit_on_texts", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "x_train", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "texts_to_sequences", "type": "Any"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "x_test", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "Tokenizer", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "fit_on_texts", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "x_train", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "texts_to_sequences", "type": "Any"}, {"lineNumber": 90, "col_offset": 46, "nodeName": "x_test", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "Tokenizer", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "fit_on_texts", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "texts", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "fit_on_texts", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "word_sequences", "type": "List[List[str]]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "document_count", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "texts_to_matrix", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "texts", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "texts_to_matrix", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "word_sequences", "type": "List[List[str]]"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "text_to_word_sequence", "type": "Any"}, {"lineNumber": 111, "col_offset": 51, "nodeName": "text", "type": "str"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "seq", "type": "Any"}, {"lineNumber": 116, "col_offset": 10, "nodeName": "text_to_word_sequence", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "text", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "seq", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "text_to_word_sequence", "type": "Any"}, {"lineNumber": 121, "col_offset": 51, "nodeName": "text", "type": "unicode"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "seq", "type": "Any"}, {"lineNumber": 126, "col_offset": 10, "nodeName": "text_to_word_sequence", "type": "Any"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "text", "type": "unicode"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "seq", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "Tokenizer", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "fit_on_texts", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "texts", "type": "List[unicode]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 140, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "min", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "min", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "seq", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "min", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "texts_to_matrix", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "texts", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "mode", "type": "str"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "min", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "min", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "encoded", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 116, "col_offset": 10, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 126, "col_offset": 10, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "preprocessing_text", "type": "module"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "self", "type": "TestText"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "word_counts", "type": "Any"}, {"lineNumber": 140, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "sequences", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "max", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "sequences", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "min", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "sequences", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "self", "type": "TestText"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "x_test_seq", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "x_test_seq", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "np", "type": "module"}]