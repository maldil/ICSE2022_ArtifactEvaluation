[{"lineNumber": 28, "col_offset": 20, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 2, "nodeName": "call", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 2, "nodeName": "get_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "compute_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 106, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 2, "nodeName": "call", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 2, "nodeName": "get_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 2, "nodeName": "compute_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 165, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 2, "nodeName": "_get_noise_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 2, "nodeName": "call", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 2, "nodeName": "get_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 2, "nodeName": "compute_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "rate", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "rate", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "rate", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "rate", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "seed", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "noised", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "rate", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "rate", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "rate", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "rate", "type": "Any"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "backend", "type": "module"}, {"lineNumber": 69, "col_offset": 59, "nodeName": "training", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "noised", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 173, "col_offset": 72, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "_get_noise_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "rate", "type": "Any"}, {"lineNumber": 179, "col_offset": 61, "nodeName": "seed", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "scale", "type": "float"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "dropped_inputs", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "GaussianNoise", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "GaussianNoise", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "GaussianDropout", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 122, "col_offset": 61, "nodeName": "training", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "GaussianDropout", "type": "Any"}, {"lineNumber": 127, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "AlphaDropout", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "v1", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "scale", "type": "float"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 185, "col_offset": 60, "nodeName": "rate", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "cast", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "rate", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "backend", "type": "module"}, {"lineNumber": 198, "col_offset": 69, "nodeName": "training", "type": "Any"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "AlphaDropout", "type": "Any"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "backend", "type": "module"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "rate", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 128, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "compat", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "alpha", "type": "float"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "rate", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "backend", "type": "module"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 128, "col_offset": 49, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "backend", "type": "module"}, {"lineNumber": 185, "col_offset": 53, "nodeName": "seed", "type": "Any"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "rate", "type": "Any"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "a", "type": "Any"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "v1", "type": "Any"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "rate", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "compat", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "v1", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "compat", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "tf", "type": "Any"}]