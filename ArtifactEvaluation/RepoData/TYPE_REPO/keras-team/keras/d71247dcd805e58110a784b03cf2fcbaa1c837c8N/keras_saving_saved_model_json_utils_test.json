[{"lineNumber": 24, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 26, "col_offset": 2, "nodeName": "test_encode_decode_tensor_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 2, "nodeName": "test_encode_decode_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 2, "nodeName": "test_encode_decode_type_spec", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "test_encode_decode_enum", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 71, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "string", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "string", "type": "str"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "spec", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "string", "type": "str"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "string", "type": "str"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "Enum", "type": "Type[enum.Enum]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "config", "type": "Dict[str, str]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "string", "type": "str"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "encode", "type": "Callable[[Any], str]"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "metadata", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "decode", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "string", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "rank", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "encode", "type": "Callable[[Any], str]"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "metadata", "type": "Dict[str, Union[Tuple[int, int], List[Union[Tuple[int, Tuple[int, int]], Tuple[int]]]]]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "decode", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "string", "type": "str"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "encode", "type": "Callable[[Any], str]"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "spec", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "decode", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "string", "type": "str"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "spec", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "encode", "type": "Callable[[Any], str]"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "invalid_type_spec", "type": "Dict[str, Optional[str]]"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "enum", "type": "module"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "CLASS_A", "type": "str"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "CLASS_B", "type": "str"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "CLASS_A", "type": "str"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "CLASS_B", "type": "str"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "encode", "type": "Callable[[Any], str]"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "config", "type": "Dict[str, str]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "decode", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "string", "type": "str"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "json_utils", "type": "module"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "self", "type": "JsonUtilsTest"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "self", "type": "JsonUtilsTest"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "self", "type": "JsonUtilsTest"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "self", "type": "JsonUtilsTest"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "json_utils", "type": "module"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "JsonUtilsTest"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "self", "type": "JsonUtilsTest"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "self", "type": "JsonUtilsTest"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "json_utils", "type": "module"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "self", "type": "JsonUtilsTest"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "decode", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "string", "type": "str"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "Enum", "type": "Type[Any]"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "Enum", "type": "Type[Any]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "json_utils", "type": "module"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "self", "type": "JsonUtilsTest"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "Encoder", "type": "Type[keras.saving.saved_model.json_utils.Encoder]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "Encoder", "type": "Type[keras.saving.saved_model.json_utils.Encoder]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "Encoder", "type": "Type[keras.saving.saved_model.json_utils.Encoder]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "Encoder", "type": "Type[keras.saving.saved_model.json_utils.Encoder]"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "self", "type": "JsonUtilsTest"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "json_utils", "type": "module"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "Encoder", "type": "Type[keras.saving.saved_model.json_utils.Encoder]"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "json_utils", "type": "module"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "json_utils", "type": "module"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "json_utils", "type": "module"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "json_utils", "type": "module"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "json_utils", "type": "module"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "loaded", "type": "Any"}]