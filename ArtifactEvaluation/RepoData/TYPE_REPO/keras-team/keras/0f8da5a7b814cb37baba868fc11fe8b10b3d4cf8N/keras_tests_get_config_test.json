[{"lineNumber": 30, "col_offset": 39, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "test_functional_dnn", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "test_functional_cnn", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "test_functional_lstm", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 2, "nodeName": "test_sequential_dnn", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 2, "nodeName": "test_sequential_cnn", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "test_sequential_lstm", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 58, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "FUNCTIONAL_DNN", "type": "Dict[str, Union[str, List[Union[Dict[str, Union[str, Dict[str, Optional[Union[int, str, Dict[str, Union[str, Dict[str, None]]], Tuple[None, int]]]], List[List[List[Union[int, str, Dict[nothing, nothing]]]]]]], List[Union[int, str]]]]]]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "FUNCTIONAL_CNN", "type": "Dict[str, Union[str, List[Union[Dict[str, Union[str, Dict[str, Optional[Union[int, str, Dict[str, Union[str, Dict[str, None]]], Tuple[Optional[int], ...]]]], List[List[List[Union[int, str, Dict[nothing, nothing]]]]]]], List[Union[int, str]]]]]]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "FUNCTIONAL_LSTM", "type": "Dict[str, Union[str, List[Union[Dict[str, Union[str, Dict[str, Optional[Union[float, int, str, Dict[str, Union[str, Dict[str, Optional[float]]]], Tuple[None, int, int]]]], List[List[List[Union[int, str, Dict[nothing, nothing]]]]]]], List[Union[int, str]]]]]]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "SEQUENTIAL_DNN", "type": "Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, Optional[Union[int, str, Dict[str, Union[str, Dict[str, None]]]]]]]]]]]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 49, "col_offset": 46, "nodeName": "SEQUENTIAL_CNN", "type": "Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, Optional[Union[int, str, Dict[str, Union[str, Dict[str, None]]], Tuple[int, int]]]]]]]]]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "SEQUENTIAL_LSTM", "type": "Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, Optional[Union[float, int, str, Dict[str, Union[str, Dict[str, Optional[float]]]]]]]]]]]]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "get_config_samples", "type": "module"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "get_config_samples", "type": "module"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "get_config_samples", "type": "module"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "get_config_samples", "type": "module"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 49, "col_offset": 46, "nodeName": "get_config_samples", "type": "module"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "get_config_samples", "type": "module"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "training", "type": "module"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "training", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "training", "type": "module"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "sequential", "type": "module"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "sequential", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "sequential", "type": "module"}]