[{"lineNumber": 443, "col_offset": 0, "nodeName": "_serialize_function_to_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 460, "col_offset": 0, "nodeName": "_parse_config_to_function", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 489, "col_offset": 0, "nodeName": "_default_dropout_state_filter_visitor", "type": "Callable[[Any], Any]"}, {"lineNumber": 499, "col_offset": 0, "nodeName": "_enumerated_map_structure_up_to", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 403, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 463, "col_offset": 2, "nodeName": "globs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 464, "col_offset": 2, "nodeName": "module", "type": "Any"}, {"lineNumber": 471, "col_offset": 5, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 473, "col_offset": 2, "nodeName": "function_type", "type": "Any"}, {"lineNumber": 486, "col_offset": 9, "nodeName": "function", "type": "Any"}, {"lineNumber": 500, "col_offset": 2, "nodeName": "ix", "type": "List[int]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "_variational_recurrent", "type": "Any"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "variational_recurrent", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "_input_size", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "_seed", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "seed", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "_recurrent_input_noise", "type": "None"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "_recurrent_state_noise", "type": "None"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "_recurrent_output_noise", "type": "None"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "variational_recurrent", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "salt", "type": "str"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "string", "type": "bytes"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "cell", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "built", "type": "bool"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "random_tensor", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "binary_tensor", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "ret", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "_residual_fn", "type": "Any"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "residual_fn", "type": "Any"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "res_outputs", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "_device", "type": "Any"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 445, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "function", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 445, "col_offset": 26, "nodeName": "LambdaType", "type": "Type[Callable[..., Any]]"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "output", "type": "Tuple[str, Any, Optional[Tuple[Any, ...]]]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "output_type", "type": "str"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "module", "type": "Union[Any, str]"}, {"lineNumber": 448, "col_offset": 13, "nodeName": "__module__", "type": "Union[Any, str]"}, {"lineNumber": 457, "col_offset": 9, "nodeName": "output", "type": "Union[Any, Tuple[str, Any, Optional[Tuple[Any, ...]]], str]"}, {"lineNumber": 457, "col_offset": 17, "nodeName": "output_type", "type": "str"}, {"lineNumber": 457, "col_offset": 30, "nodeName": "module", "type": "Union[Any, str]"}, {"lineNumber": 463, "col_offset": 10, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 464, "col_offset": 11, "nodeName": "pop", "type": "Any"}, {"lineNumber": 464, "col_offset": 22, "nodeName": "module_attr_name", "type": "str"}, {"lineNumber": 465, "col_offset": 5, "nodeName": "module", "type": "Any"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 473, "col_offset": 18, "nodeName": "pop", "type": "Any"}, {"lineNumber": 473, "col_offset": 29, "nodeName": "func_type_attr_name", "type": "str"}, {"lineNumber": 474, "col_offset": 5, "nodeName": "function_type", "type": "Any"}, {"lineNumber": 491, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "substate", "type": "Any"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "LSTMStateTuple", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "r", "type": "Any"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "r", "type": "Any"}, {"lineNumber": 507, "col_offset": 9, "nodeName": "map_structure_up_to", "type": "Any"}, {"lineNumber": 507, "col_offset": 50, "nodeName": "shallow_structure", "type": "Any"}, {"lineNumber": 507, "col_offset": 69, "nodeName": "enumerated_fn", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "cell", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "dropout_state_filter_visitor", "type": "Any"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "_default_dropout_state_filter_visitor", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 171, "col_offset": 7, "nodeName": "_seed", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "cell", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "cell", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "build", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "inputs_shape", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "noise", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "floor", "type": "Any"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "random_tensor", "type": "Any"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "binary_tensor", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "set_shape", "type": "Any"}, {"lineNumber": 217, "col_offset": 7, "nodeName": "shallow_filtered_substructure", "type": "None"}, {"lineNumber": 220, "col_offset": 6, "nodeName": "shallow_filtered_substructure", "type": "Any"}, {"lineNumber": 220, "col_offset": 38, "nodeName": "values", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "_variational_recurrent", "type": "Any"}, {"lineNumber": 266, "col_offset": 7, "nodeName": "_should_dropout", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "_input_keep_prob", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "cell_call_fn", "type": "Any"}, {"lineNumber": 269, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 269, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 270, "col_offset": 7, "nodeName": "_should_dropout", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "_state_keep_prob", "type": "Any"}, {"lineNumber": 278, "col_offset": 7, "nodeName": "_should_dropout", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "_output_keep_prob", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "_input_keep_prob", "type": "Any"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "_output_keep_prob", "type": "Any"}, {"lineNumber": 288, "col_offset": 27, "nodeName": "_state_keep_prob", "type": "Any"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "_variational_recurrent", "type": "Any"}, {"lineNumber": 290, "col_offset": 22, "nodeName": "_input_size", "type": "Any"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "_seed", "type": "Any"}, {"lineNumber": 293, "col_offset": 7, "nodeName": "_dropout_state_filter", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "_default_dropout_state_filter_visitor", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 305, "col_offset": 6, "nodeName": "config", "type": "Any"}, {"lineNumber": 310, "col_offset": 47, "nodeName": "dropout_state_filter", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 329, "col_offset": 46, "nodeName": "cell", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "self", "type": "ResidualWrapperBase"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "cell", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "cell", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 361, "col_offset": 13, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 361, "col_offset": 25, "nodeName": "cell_call_fn", "type": "Any"}, {"lineNumber": 361, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 361, "col_offset": 46, "nodeName": "state", "type": "Any"}, {"lineNumber": 372, "col_offset": 61, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 372, "col_offset": 69, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "res_outputs", "type": "Any"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 377, "col_offset": 7, "nodeName": "_residual_fn", "type": "Any"}, {"lineNumber": 386, "col_offset": 6, "nodeName": "config", "type": "Dict[nothing, nothing]"}, {"lineNumber": 387, "col_offset": 18, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 392, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 393, "col_offset": 6, "nodeName": "config", "type": "Any"}, {"lineNumber": 398, "col_offset": 30, "nodeName": "residual_function", "type": "Any"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 416, "col_offset": 44, "nodeName": "cell", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "self", "type": "DeviceWrapperBase"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "cell", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "cell", "type": "Any"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "_device", "type": "Any"}, {"lineNumber": 439, "col_offset": 18, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 445, "col_offset": 26, "nodeName": "python_types", "type": "module"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "func_dump", "type": "Callable[[Any], Tuple[str, Any, Optional[Tuple[Any, ...]]]]"}, {"lineNumber": 446, "col_offset": 37, "nodeName": "function", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 448, "col_offset": 13, "nodeName": "function", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 449, "col_offset": 7, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "function", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "output", "type": "Union[Any, str]"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "__name__", "type": "Union[Any, str]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "output_type", "type": "str"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "module", "type": "Union[Any, str]"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "__module__", "type": "Union[Any, str]"}, {"lineNumber": 464, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "sys", "type": "module"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 466, "col_offset": 17, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 467, "col_offset": 7, "nodeName": "module", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 472, "col_offset": 17, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 473, "col_offset": 18, "nodeName": "config", "type": "Any"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "deserialize_keras_object", "type": "Any"}, {"lineNumber": 480, "col_offset": 7, "nodeName": "function_type", "type": "Any"}, {"lineNumber": 493, "col_offset": 11, "nodeName": "LSTMStateTuple", "type": "Any"}, {"lineNumber": 494, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 494, "col_offset": 18, "nodeName": "substate", "type": "Any"}, {"lineNumber": 494, "col_offset": 28, "nodeName": "TensorArray", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "map_fn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "ix", "type": "List[int]"}, {"lineNumber": 507, "col_offset": 9, "nodeName": "nest", "type": "Any"}, {"lineNumber": 507, "col_offset": 85, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 508, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 101, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "dropout_state_filter_visitor", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "tensor_value", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "const_value", "type": "Any"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "_enumerated_map_structure_up_to", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "_enumerated_map_structure_up_to", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 168, "col_offset": 10, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 171, "col_offset": 7, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "salt_prefix", "type": "Any"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "index", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "cell", "type": "Any"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 205, "col_offset": 10, "nodeName": "divide", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "_enumerated_map_structure_up_to", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 10, "nodeName": "shallow_filtered_substructure", "type": "Any"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "dropout", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "_enumerated_map_structure_up_to", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 10, "nodeName": "shallow_filtered_substructure", "type": "Any"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "_dropout", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "_recurrent_input_noise", "type": "Any"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "_input_keep_prob", "type": "Any"}, {"lineNumber": 269, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "get_traverse_shallow_structure", "type": "Any"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "_dropout_state_filter", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "_dropout", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 32, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 275, "col_offset": 52, "nodeName": "_recurrent_state_noise", "type": "Any"}, {"lineNumber": 276, "col_offset": 32, "nodeName": "_state_keep_prob", "type": "Any"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "shallow_filtered_substructure", "type": "Any"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "_dropout", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 279, "col_offset": 47, "nodeName": "_recurrent_output_noise", "type": "Any"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "_output_keep_prob", "type": "Any"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 288, "col_offset": 27, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 290, "col_offset": 22, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 293, "col_offset": 7, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 294, "col_offset": 49, "nodeName": "_serialize_function_to_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 10, "nodeName": "_dropout_state_filter", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 296, "col_offset": 6, "nodeName": "update", "type": "Callable"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "_parse_config_to_function", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 307, "col_offset": 10, "nodeName": "config", "type": "Any"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "pop", "type": "Any"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "config", "type": "Any"}, {"lineNumber": 312, "col_offset": 31, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 329, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 342, "col_offset": 34, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 342, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 361, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 365, "col_offset": 6, "nodeName": "assert_is_compatible_with", "type": "Any"}, {"lineNumber": 368, "col_offset": 6, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 368, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 368, "col_offset": 44, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 369, "col_offset": 6, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 369, "col_offset": 28, "nodeName": "assert_shape_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 369, "col_offset": 48, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 369, "col_offset": 56, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 370, "col_offset": 13, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 370, "col_offset": 63, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 370, "col_offset": 71, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "_residual_fn", "type": "Any"}, {"lineNumber": 372, "col_offset": 40, "nodeName": "default_residual_fn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 377, "col_offset": 7, "nodeName": "self", "type": "ResidualWrapperBase"}, {"lineNumber": 378, "col_offset": 49, "nodeName": "_serialize_function_to_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 10, "nodeName": "_residual_fn", "type": "Any"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "function", "type": "Union[Tuple[str, Any, Optional[Tuple[Any, ...]]], Any]"}, {"lineNumber": 382, "col_offset": 30, "nodeName": "function_type", "type": "str"}, {"lineNumber": 383, "col_offset": 32, "nodeName": "function_module", "type": "Any"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 394, "col_offset": 26, "nodeName": "_parse_config_to_function", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 394, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 394, "col_offset": 60, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 398, "col_offset": 6, "nodeName": "config", "type": "Any"}, {"lineNumber": 400, "col_offset": 31, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 416, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 428, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 434, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 434, "col_offset": 29, "nodeName": "_device", "type": "Any"}, {"lineNumber": 435, "col_offset": 13, "nodeName": "cell_call_fn", "type": "Any"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 435, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "self", "type": "DeviceWrapperBase"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "generic_utils", "type": "module"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "function", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "function", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 454, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "globs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 470, "col_offset": 57, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "globs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "generic_utils", "type": "module"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 478, "col_offset": 23, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "func_load", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 485, "col_offset": 10, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 485, "col_offset": 46, "nodeName": "function_type", "type": "Any"}, {"lineNumber": 494, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "ix", "type": "List[int]"}, {"lineNumber": 503, "col_offset": 23, "nodeName": "inner_args", "type": "Tuple[Any, ...]"}, {"lineNumber": 503, "col_offset": 37, "nodeName": "inner_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 507, "col_offset": 9, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "DropoutWrapperBase", "type": "Type[DropoutWrapperBase]"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "dropout_state_filter_visitor", "type": "Any"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "get_static_value", "type": "Any"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "tensor_value", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "tensor_value", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "const_value", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "input_keep_prob", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "state_keep_prob", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "output_keep_prob", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "tensor_prob", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "const_prob", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "tensor_and_const_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 57, "nodeName": "prob", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "const_prob", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "convert_to_batch_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "s", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "_input_keep_prob", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "_enumerated_map_structure_up_to", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "cell", "type": "Any"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "cell", "type": "Any"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "cell", "type": "Any"}, {"lineNumber": 168, "col_offset": 10, "nodeName": "cell", "type": "Any"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "salt", "type": "str"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "__name__", "type": "str"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "cell", "type": "Any"}, {"lineNumber": 205, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "value", "type": "Any"}, {"lineNumber": 225, "col_offset": 47, "nodeName": "do_dropout", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 237, "col_offset": 47, "nodeName": "do_dropout", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 264, "col_offset": 43, "nodeName": "p", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "nest", "type": "Any"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 275, "col_offset": 52, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 276, "col_offset": 32, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 279, "col_offset": 47, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 295, "col_offset": 10, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 296, "col_offset": 6, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "function", "type": "Union[Tuple[str, Any, Optional[Tuple[Any, ...]]], Any, str]"}, {"lineNumber": 297, "col_offset": 40, "nodeName": "function_type", "type": "str"}, {"lineNumber": 298, "col_offset": 42, "nodeName": "function_module", "type": "Union[str, Any]"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "DropoutWrapperBase", "type": "Type[DropoutWrapperBase]"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 300, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "config", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "DropoutWrapperBase", "type": "Type[DropoutWrapperBase]"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "cls", "type": "Type[DropoutWrapperBase]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 329, "col_offset": 10, "nodeName": "ResidualWrapperBase", "type": "Type[ResidualWrapperBase]"}, {"lineNumber": 329, "col_offset": 31, "nodeName": "self", "type": "ResidualWrapperBase"}, {"lineNumber": 341, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "__name__", "type": "str"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "cell", "type": "Any"}, {"lineNumber": 365, "col_offset": 48, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 368, "col_offset": 6, "nodeName": "nest", "type": "Any"}, {"lineNumber": 369, "col_offset": 6, "nodeName": "nest", "type": "Any"}, {"lineNumber": 370, "col_offset": 13, "nodeName": "nest", "type": "Any"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "self", "type": "ResidualWrapperBase"}, {"lineNumber": 379, "col_offset": 10, "nodeName": "self", "type": "ResidualWrapperBase"}, {"lineNumber": 387, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "ResidualWrapperBase", "type": "Type[ResidualWrapperBase]"}, {"lineNumber": 387, "col_offset": 45, "nodeName": "self", "type": "ResidualWrapperBase"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 388, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 399, "col_offset": 17, "nodeName": "ResidualWrapperBase", "type": "Type[ResidualWrapperBase]"}, {"lineNumber": 399, "col_offset": 38, "nodeName": "cls", "type": "Type[ResidualWrapperBase]"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 416, "col_offset": 10, "nodeName": "DeviceWrapperBase", "type": "Type[DeviceWrapperBase]"}, {"lineNumber": 416, "col_offset": 29, "nodeName": "self", "type": "DeviceWrapperBase"}, {"lineNumber": 428, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "__name__", "type": "str"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 429, "col_offset": 31, "nodeName": "_device", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 430, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 434, "col_offset": 9, "nodeName": "v1", "type": "Any"}, {"lineNumber": 434, "col_offset": 29, "nodeName": "self", "type": "DeviceWrapperBase"}, {"lineNumber": 435, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 439, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 439, "col_offset": 24, "nodeName": "DeviceWrapperBase", "type": "Type[DeviceWrapperBase]"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "self", "type": "DeviceWrapperBase"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 440, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 454, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 466, "col_offset": 17, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 470, "col_offset": 48, "nodeName": "module", "type": "Any"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "func_attr_name", "type": "str"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "generic_utils", "type": "module"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 483, "col_offset": 38, "nodeName": "globs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 507, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 123, "col_offset": 10, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "tensor_prob", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 149, "col_offset": 45, "nodeName": "inner_seed", "type": "Any"}, {"lineNumber": 149, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "_input_keep_prob", "type": "Any"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "Real", "type": "Type[numbers.Real]"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "batch_noise", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "batch_noise", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "_seed", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "hexdigest", "type": "Callable[[], str]"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "v", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "shallow_filtered_substructure", "type": "Any"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "values", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "_variational_recurrent_dropout_value", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 238, "col_offset": 59, "nodeName": "i", "type": "Any"}, {"lineNumber": 238, "col_offset": 62, "nodeName": "v", "type": "Any"}, {"lineNumber": 238, "col_offset": 65, "nodeName": "n", "type": "Any"}, {"lineNumber": 238, "col_offset": 68, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "shallow_filtered_substructure", "type": "Any"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "values", "type": "Any"}, {"lineNumber": 244, "col_offset": 51, "nodeName": "recurrent_noise", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "self", "type": "ResidualWrapperBase"}, {"lineNumber": 365, "col_offset": 6, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 365, "col_offset": 48, "nodeName": "out", "type": "Any"}, {"lineNumber": 368, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 369, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 370, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 370, "col_offset": 52, "nodeName": "inp", "type": "Any"}, {"lineNumber": 370, "col_offset": 58, "nodeName": "out", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 388, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "v1", "type": "Any"}, {"lineNumber": 429, "col_offset": 31, "nodeName": "self", "type": "DeviceWrapperBase"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 434, "col_offset": 9, "nodeName": "compat", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 440, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "function", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 466, "col_offset": 17, "nodeName": "sys", "type": "module"}, {"lineNumber": 466, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "func_attr_name", "type": "str"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "const_prob", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "const_prob", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "attr", "type": "str"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "const_prob", "type": "Any"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "attr", "type": "str"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "numbers", "type": "module"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "batch_noise", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "s", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "do_dropout", "type": "Any"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 237, "col_offset": 26, "nodeName": "do_dropout", "type": "Any"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "self", "type": "ResidualWrapperBase"}, {"lineNumber": 365, "col_offset": 6, "nodeName": "inp", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 388, "col_offset": 49, "nodeName": "config", "type": "Union[Dict[str, Union[Any, str, Tuple[str, Any, Optional[Tuple[Any, ...]]]]], Dict[nothing, nothing]]"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 428, "col_offset": 28, "nodeName": "self", "type": "DeviceWrapperBase"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "compat", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "self", "type": "DeviceWrapperBase"}, {"lineNumber": 434, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 440, "col_offset": 49, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "_gen_seed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 73, "nodeName": "i", "type": "Any"}, {"lineNumber": 167, "col_offset": 49, "nodeName": "_gen_seed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 74, "nodeName": "i", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "md5", "type": "Callable[..., hashlib._Hash]"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "string", "type": "bytes"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 227, "col_offset": 43, "nodeName": "_gen_seed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "salt_prefix", "type": "str"}, {"lineNumber": 227, "col_offset": 71, "nodeName": "i", "type": "Any"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "attr", "type": "str"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "const_prob", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "s", "type": "Any"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "_gen_seed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 75, "nodeName": "i", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 167, "col_offset": 49, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "hashlib", "type": "module"}, {"lineNumber": 227, "col_offset": 43, "nodeName": "self", "type": "DropoutWrapperBase"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "self", "type": "DropoutWrapperBase"}]