[{"lineNumber": 12, "col_offset": 14, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "layer", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_input_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "trainable_weights", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "non_trainable_weights", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "inner_inputs", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "updates", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "updates", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "updates", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "child_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "child_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "child_output_shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "timesteps", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "uses_learning_phase", "type": "bool"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "uses_learning_phase", "type": "Union[Any, bool]"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "weights", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "nw", "type": "int"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "constraints", "type": "Dict[Any, Any]"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "constraints", "type": "Dict[Any, Any]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "updates", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "uid", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "get_updates_for", "type": "Any"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "inner_inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "get_updates_for", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "losses", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "losses", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "weights", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "deserialize_layer", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "cls", "type": "Type[Wrapper]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "layer", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "InputSpec", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "built", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "built", "type": "bool"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 61, "nodeName": "child_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "training", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "input_uid", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 197, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "output_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "regularization_loss", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "_uses_learning_phase", "type": "bool"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 44, "nodeName": "layer", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 253, "col_offset": 58, "nodeName": "config", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "name", "type": "str"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 255, "col_offset": 49, "nodeName": "name", "type": "str"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "nw", "type": "int"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "initial_weights", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "initial_weights", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "layer", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "layer", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "weights", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 286, "col_offset": 33, "nodeName": "training", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "mask", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "call", "type": "Any"}, {"lineNumber": 290, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 291, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "reset_states", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "reset_states", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 364, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 370, "col_offset": 32, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "get_config", "type": "Callable[[], Any]"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "_object_list_uid", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "uid", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "_input_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "inner_inputs", "type": "nothing"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "layer", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "losses", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "pop", "type": "Any"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 146, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 48, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "build", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "child_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "layer", "type": "Any"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "timesteps", "type": "Any"}, {"lineNumber": 162, "col_offset": 52, "nodeName": "child_output_shape", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "K", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "_object_list_uid", "type": "Any"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "_input_map", "type": "Dict[Any, Any]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "uses_learning_phase", "type": "Any"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "_uses_learning_phase", "type": "Any"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 209, "col_offset": 34, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 209, "col_offset": 66, "nodeName": "y", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "regularization_loss", "type": "Any"}, {"lineNumber": 210, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 245, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "copy", "type": "module"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "layer", "type": "Any"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "config", "type": "Any"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 255, "col_offset": 49, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "weights", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 259, "col_offset": 49, "nodeName": "weights", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 260, "col_offset": 50, "nodeName": "weights", "type": "Any"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 266, "col_offset": 50, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "weights", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 271, "col_offset": 40, "nodeName": "weights", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 275, "col_offset": 59, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 290, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 291, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 307, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 309, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "_uses_learning_phase", "type": "bool"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 320, "col_offset": 26, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "build", "type": "Any"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 322, "col_offset": 26, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "build", "type": "Any"}, {"lineNumber": 323, "col_offset": 38, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "mask", "type": "Any"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "trainable_weights", "type": "Any"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "trainable_weights", "type": "Any"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 345, "col_offset": 20, "nodeName": "non_trainable_weights", "type": "Any"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "non_trainable_weights", "type": "Any"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "updates", "type": "Any"}, {"lineNumber": 352, "col_offset": 48, "nodeName": "updates", "type": "Any"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "losses", "type": "Any"}, {"lineNumber": 358, "col_offset": 47, "nodeName": "losses", "type": "Any"}, {"lineNumber": 364, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 370, "col_offset": 32, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "_input_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "layer", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "TimeDistributed", "type": "Type[TimeDistributed]"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "TimeDistributed", "type": "Type[TimeDistributed]"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "child_output_shape", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "call", "type": "Any"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "K", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "K", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "input_uid", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "layer", "type": "Any"}, {"lineNumber": 209, "col_offset": 34, "nodeName": "layer", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "Bidirectional", "type": "Type[Bidirectional]"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "layer", "type": "Any"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 255, "col_offset": 49, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 266, "col_offset": 50, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "K", "type": "Any"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "K", "type": "Any"}, {"lineNumber": 295, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "_uses_learning_phase", "type": "bool"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "K", "type": "Any"}, {"lineNumber": 320, "col_offset": 26, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "K", "type": "Any"}, {"lineNumber": 322, "col_offset": 26, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "mask", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 345, "col_offset": 20, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 352, "col_offset": 48, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 358, "col_offset": 47, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "constraints", "type": "Dict[Any, Any]"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "constraints", "type": "Dict[Any, Any]"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 371, "col_offset": 28, "nodeName": "Bidirectional", "type": "Type[Bidirectional]"}, {"lineNumber": 371, "col_offset": 43, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 372, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "uid", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "layer", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "layer", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 90, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 175, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "_uses_learning_phase", "type": "Any"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "uses_learning_phase", "type": "Any"}, {"lineNumber": 183, "col_offset": 47, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 196, "col_offset": 47, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 204, "col_offset": 50, "nodeName": "output_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 209, "col_offset": 34, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 259, "col_offset": 58, "nodeName": "nw", "type": "int"}, {"lineNumber": 260, "col_offset": 58, "nodeName": "nw", "type": "int"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 266, "col_offset": 50, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 270, "col_offset": 48, "nodeName": "nw", "type": "int"}, {"lineNumber": 271, "col_offset": 48, "nodeName": "nw", "type": "int"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 277, "col_offset": 65, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 320, "col_offset": 26, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 322, "col_offset": 26, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 345, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 372, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 90, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "base_config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 372, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 281, "col_offset": 60, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "self", "type": "Bidirectional"}]