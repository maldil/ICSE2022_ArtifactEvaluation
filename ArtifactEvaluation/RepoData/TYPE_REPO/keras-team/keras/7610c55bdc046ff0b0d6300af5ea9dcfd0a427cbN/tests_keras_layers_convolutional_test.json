[{"lineNumber": 68, "col_offset": 0, "nodeName": "test_conv_1d", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "test_maxpooling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "test_averagepooling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "test_conv2d_transpose", "type": "Callable[[], Any]"}, {"lineNumber": 283, "col_offset": 0, "nodeName": "test_globalpooling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 291, "col_offset": 0, "nodeName": "test_globalpooling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 307, "col_offset": 0, "nodeName": "test_globalpooling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "test_maxpooling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 335, "col_offset": 0, "nodeName": "test_averagepooling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 355, "col_offset": 0, "nodeName": "test_convolution_3d", "type": "Callable[[], Any]"}, {"lineNumber": 395, "col_offset": 0, "nodeName": "test_conv3d_transpose", "type": "Callable[[], Any]"}, {"lineNumber": 440, "col_offset": 0, "nodeName": "test_maxpooling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 457, "col_offset": 0, "nodeName": "test_averagepooling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 474, "col_offset": 0, "nodeName": "test_zero_padding_1d", "type": "Callable[[], Any]"}, {"lineNumber": 511, "col_offset": 0, "nodeName": "test_zero_padding_2d", "type": "Callable[[], Any]"}, {"lineNumber": 573, "col_offset": 0, "nodeName": "test_zero_padding_3d", "type": "Callable[[], Any]"}, {"lineNumber": 635, "col_offset": 0, "nodeName": "test_upsampling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 642, "col_offset": 0, "nodeName": "test_upsampling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 757, "col_offset": 0, "nodeName": "test_cropping_2d", "type": "Callable[[], Any]"}, {"lineNumber": 821, "col_offset": 0, "nodeName": "test_cropping_3d", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "steps", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "num_row", "type": "int"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "num_col", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "num_row", "type": "int"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "num_col", "type": "int"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "num_row", "type": "int"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "num_col", "type": "int"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "pool_size", "type": "Tuple[int, int]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 365, "col_offset": 19, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "num_depth", "type": "int"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "num_row", "type": "int"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "num_col", "type": "int"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 403, "col_offset": 19, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 691, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "time_length", "type": "int"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 760, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 761, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 762, "col_offset": 4, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 863, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 887, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 3, "nodeName": "backend", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "Conv1D", "type": "Type[keras.layers.convolutional.Conv1D]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "Conv1D", "type": "Type[keras.layers.convolutional.Conv1D]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "Conv1D", "type": "Type[keras.layers.convolutional.Conv1D]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "strides", "type": "int"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "Conv1D", "type": "Type[keras.layers.convolutional.Conv1D]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[keras.layers.convolutional.Conv1D]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "stride", "type": "int"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "stride", "type": "int"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "Conv2D", "type": "Type[keras.layers.convolutional.Conv2D]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "Conv2D", "type": "Type[keras.layers.convolutional.Conv2D]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "Deconvolution2D", "type": "Type[keras.layers.convolutional.Conv2DTranspose]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "SeparableConv2D", "type": "Type[keras.layers.convolutional.SeparableConv2D]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "GlobalMaxPooling1D", "type": "Type[keras.layers.pooling.GlobalMaxPooling1D]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "GlobalAveragePooling1D", "type": "Type[keras.layers.pooling.GlobalAveragePooling1D]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "GlobalMaxPooling2D", "type": "Type[keras.layers.pooling.GlobalMaxPooling2D]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "GlobalMaxPooling2D", "type": "Type[keras.layers.pooling.GlobalMaxPooling2D]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "GlobalAveragePooling2D", "type": "Type[keras.layers.pooling.GlobalAveragePooling2D]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "GlobalAveragePooling2D", "type": "Type[keras.layers.pooling.GlobalAveragePooling2D]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "GlobalMaxPooling3D", "type": "Type[keras.layers.pooling.GlobalMaxPooling3D]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "GlobalMaxPooling3D", "type": "Type[keras.layers.pooling.GlobalMaxPooling3D]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "GlobalAveragePooling3D", "type": "Type[keras.layers.pooling.GlobalAveragePooling3D]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "GlobalAveragePooling3D", "type": "Type[keras.layers.pooling.GlobalAveragePooling3D]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "AveragePooling2D", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "AveragePooling2D", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "AveragePooling2D", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "Convolution3D", "type": "Type[keras.layers.convolutional.Conv3D]"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[keras.layers.convolutional.Conv3DTranspose]"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "MaxPooling3D", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "MaxPooling3D", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "AveragePooling3D", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "AveragePooling3D", "type": "Any"}, {"lineNumber": 479, "col_offset": 13, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 479, "col_offset": 37, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 480, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 480, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 15, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 493, "col_offset": 14, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 494, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 500, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 501, "col_offset": 14, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 502, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "get_config", "type": "Callable[[], Dict[str, Tuple[Any, ...]]]"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 580, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "UpSampling1D", "type": "Type[keras.layers.convolutional.UpSampling1D]"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "length_row", "type": "int"}, {"lineNumber": 712, "col_offset": 12, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 750, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 750, "col_offset": 28, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 750, "col_offset": 41, "nodeName": "time_length", "type": "int"}, {"lineNumber": 750, "col_offset": 54, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 752, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 752, "col_offset": 15, "nodeName": "Cropping1D", "type": "Type[keras.layers.convolutional.Cropping1D]"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 816, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 818, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 847, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 885, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 15, "col_offset": 3, "nodeName": "K", "type": "module"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "filters", "type": "int"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "padding", "type": "str"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 181, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "Sequential", "type": "Type[keras.models.Sequential]"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "Sequential", "type": "Type[keras.models.Sequential]"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "multiplier", "type": "int"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 276, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "Sequential", "type": "Type[keras.models.Sequential]"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "data_format", "type": "str"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 433, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "Sequential", "type": "Type[keras.models.Sequential]"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 480, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 485, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 486, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 488, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 493, "col_offset": 20, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 493, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 501, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 507, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 518, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 522, "col_offset": 19, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 533, "col_offset": 18, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 534, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 549, "col_offset": 18, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 550, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 550, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 556, "col_offset": 16, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 558, "col_offset": 16, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 580, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 580, "col_offset": 22, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 581, "col_offset": 21, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 581, "col_offset": 37, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 581, "col_offset": 53, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 582, "col_offset": 21, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 586, "col_offset": 19, "nodeName": "ZeroPadding3D", "type": "Type[keras.layers.convolutional.ZeroPadding3D]"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 589, "col_offset": 19, "nodeName": "ZeroPadding3D", "type": "Type[keras.layers.convolutional.ZeroPadding3D]"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "ZeroPadding3D", "type": "Type[keras.layers.convolutional.ZeroPadding3D]"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 596, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 597, "col_offset": 18, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 598, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 599, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "ZeroPadding3D", "type": "Type[keras.layers.convolutional.ZeroPadding3D]"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 615, "col_offset": 18, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 616, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 616, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 617, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "dim1_offset", "type": "int"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "dim2_offset", "type": "int"}, {"lineNumber": 622, "col_offset": 16, "nodeName": "dim3_offset", "type": "int"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 650, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 658, "col_offset": 19, "nodeName": "UpSampling2D", "type": "Type[keras.layers.convolutional.UpSampling2D]"}, {"lineNumber": 663, "col_offset": 16, "nodeName": "length_col", "type": "int"}, {"lineNumber": 698, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 708, "col_offset": 19, "nodeName": "UpSampling3D", "type": "Type[keras.layers.convolutional.UpSampling3D]"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 750, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 752, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 754, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 765, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 773, "col_offset": 19, "nodeName": "Cropping2D", "type": "Type[keras.layers.convolutional.Cropping2D]"}, {"lineNumber": 778, "col_offset": 16, "nodeName": "Cropping2D", "type": "Type[keras.layers.convolutional.Cropping2D]"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 781, "col_offset": 18, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 782, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 782, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 784, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 794, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 794, "col_offset": 35, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 797, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 806, "col_offset": 16, "nodeName": "Cropping2D", "type": "Type[keras.layers.convolutional.Cropping2D]"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 808, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 809, "col_offset": 18, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 810, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 810, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 812, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 812, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 815, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 815, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 816, "col_offset": 16, "nodeName": "Cropping2D", "type": "Type[keras.layers.convolutional.Cropping2D]"}, {"lineNumber": 817, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 817, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 818, "col_offset": 16, "nodeName": "Cropping2D", "type": "Type[keras.layers.convolutional.Cropping2D]"}, {"lineNumber": 830, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 838, "col_offset": 19, "nodeName": "Cropping3D", "type": "Type[keras.layers.convolutional.Cropping3D]"}, {"lineNumber": 843, "col_offset": 16, "nodeName": "Cropping3D", "type": "Type[keras.layers.convolutional.Cropping3D]"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 845, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 846, "col_offset": 18, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 847, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 847, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 849, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 861, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 861, "col_offset": 35, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 864, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 873, "col_offset": 16, "nodeName": "Cropping3D", "type": "Type[keras.layers.convolutional.Cropping3D]"}, {"lineNumber": 875, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 875, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 876, "col_offset": 18, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 877, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 877, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 879, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 879, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 882, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 882, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 883, "col_offset": 16, "nodeName": "Cropping3D", "type": "Type[keras.layers.convolutional.Cropping3D]"}, {"lineNumber": 884, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 884, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 885, "col_offset": 16, "nodeName": "Cropping3D", "type": "Type[keras.layers.convolutional.Cropping3D]"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 888, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "Conv1D", "type": "Type[keras.layers.convolutional.Conv1D]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "Conv1D", "type": "Type[keras.layers.convolutional.Conv1D]"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "filters", "type": "int"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "padding", "type": "str"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "steps", "type": "int"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "MaxPooling1D", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "AveragePooling1D", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "Conv2D", "type": "Type[keras.layers.convolutional.Conv2D]"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "filters", "type": "int"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "padding", "type": "str"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "num_row", "type": "int"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "num_col", "type": "int"}, {"lineNumber": 170, "col_offset": 59, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "filters", "type": "int"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "padding", "type": "str"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "num_row", "type": "int"}, {"lineNumber": 178, "col_offset": 50, "nodeName": "num_col", "type": "int"}, {"lineNumber": 178, "col_offset": 59, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 181, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "Deconvolution2D", "type": "Type[keras.layers.convolutional.Conv2DTranspose]"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "filters", "type": "int"}, {"lineNumber": 212, "col_offset": 34, "nodeName": "padding", "type": "str"}, {"lineNumber": 220, "col_offset": 34, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 221, "col_offset": 53, "nodeName": "num_row", "type": "int"}, {"lineNumber": 221, "col_offset": 62, "nodeName": "num_col", "type": "int"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "dilation_rate", "type": "Tuple[int, int]"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "filters", "type": "int"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "padding", "type": "str"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "multiplier", "type": "int"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 273, "col_offset": 41, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 273, "col_offset": 53, "nodeName": "num_row", "type": "int"}, {"lineNumber": 273, "col_offset": 62, "nodeName": "num_col", "type": "int"}, {"lineNumber": 276, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "Convolution3D", "type": "Type[keras.layers.convolutional.Conv3D]"}, {"lineNumber": 380, "col_offset": 34, "nodeName": "filters", "type": "int"}, {"lineNumber": 382, "col_offset": 34, "nodeName": "padding", "type": "str"}, {"lineNumber": 389, "col_offset": 34, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 391, "col_offset": 44, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 391, "col_offset": 60, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 418, "col_offset": 34, "nodeName": "filters", "type": "int"}, {"lineNumber": 420, "col_offset": 34, "nodeName": "padding", "type": "str"}, {"lineNumber": 428, "col_offset": 34, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 429, "col_offset": 46, "nodeName": "num_depth", "type": "int"}, {"lineNumber": 429, "col_offset": 57, "nodeName": "num_row", "type": "int"}, {"lineNumber": 429, "col_offset": 66, "nodeName": "num_col", "type": "int"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 447, "col_offset": 36, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 453, "col_offset": 36, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 464, "col_offset": 36, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 470, "col_offset": 36, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 485, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 488, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 493, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 496, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 504, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 506, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 518, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 518, "col_offset": 26, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 518, "col_offset": 39, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 518, "col_offset": 54, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 518, "col_offset": 69, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 519, "col_offset": 39, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 519, "col_offset": 51, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 519, "col_offset": 66, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 522, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 524, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 527, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 531, "col_offset": 56, "nodeName": "data_format", "type": "str"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 533, "col_offset": 24, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 533, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 540, "col_offset": 13, "nodeName": "data_format", "type": "str"}, {"lineNumber": 541, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 547, "col_offset": 56, "nodeName": "data_format", "type": "str"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 549, "col_offset": 24, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 549, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 550, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 561, "col_offset": 13, "nodeName": "data_format", "type": "str"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 564, "col_offset": 16, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 566, "col_offset": 16, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 568, "col_offset": 16, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 586, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 588, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 589, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 591, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 595, "col_offset": 56, "nodeName": "data_format", "type": "str"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 596, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 597, "col_offset": 24, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 597, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 604, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 605, "col_offset": 13, "nodeName": "data_format", "type": "str"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 613, "col_offset": 56, "nodeName": "data_format", "type": "str"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 615, "col_offset": 24, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 615, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 616, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 625, "col_offset": 13, "nodeName": "data_format", "type": "str"}, {"lineNumber": 626, "col_offset": 16, "nodeName": "dim1_offset", "type": "int"}, {"lineNumber": 628, "col_offset": 16, "nodeName": "dim2_offset", "type": "int"}, {"lineNumber": 630, "col_offset": 16, "nodeName": "dim3_offset", "type": "int"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 651, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 651, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 651, "col_offset": 61, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 652, "col_offset": 36, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 654, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 654, "col_offset": 49, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 654, "col_offset": 64, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 655, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 658, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 660, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 668, "col_offset": 16, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 669, "col_offset": 16, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 699, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 700, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 701, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 701, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 701, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 703, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 704, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 704, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 704, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 705, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 708, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 710, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 714, "col_offset": 20, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 750, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 754, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 766, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 766, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 766, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 767, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 767, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 769, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 769, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 770, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 770, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 771, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 773, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 776, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 778, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 778, "col_offset": 50, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 779, "col_offset": 53, "nodeName": "data_format", "type": "str"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 781, "col_offset": 24, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 781, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 782, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 785, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 790, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 798, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 798, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 799, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 799, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 801, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 802, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 802, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 803, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 806, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 806, "col_offset": 50, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 807, "col_offset": 53, "nodeName": "data_format", "type": "str"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 808, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 809, "col_offset": 24, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 809, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 810, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 815, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 816, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 817, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 818, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 831, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 831, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 831, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 832, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 832, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 832, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 834, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 834, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 835, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 835, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 836, "col_offset": 36, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 836, "col_offset": 52, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 838, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 841, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 843, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 843, "col_offset": 50, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 844, "col_offset": 53, "nodeName": "data_format", "type": "str"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 845, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 846, "col_offset": 24, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 846, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 847, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 850, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 856, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 865, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 865, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 865, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 866, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 866, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 866, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 868, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 868, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 869, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 869, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 870, "col_offset": 36, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 870, "col_offset": 52, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 873, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 873, "col_offset": 50, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 874, "col_offset": 53, "nodeName": "data_format", "type": "str"}, {"lineNumber": 875, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 875, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 876, "col_offset": 24, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 876, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 877, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 882, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 883, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 884, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 885, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "arange", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "arange", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "arange", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "padding", "type": "str"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "strides", "type": "int"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "padding", "type": "str"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "Conv2D", "type": "Type[keras.layers.convolutional.Conv2D]"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "padding", "type": "str"}, {"lineNumber": 198, "col_offset": 37, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "Conv2DTranspose", "type": "Type[keras.layers.convolutional.Conv2DTranspose]"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "SeparableConv2D", "type": "Type[keras.layers.convolutional.SeparableConv2D]"}, {"lineNumber": 329, "col_offset": 38, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 331, "col_offset": 40, "nodeName": "pool_size", "type": "Tuple[int, int]"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "padding", "type": "str"}, {"lineNumber": 367, "col_offset": 37, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 27, "nodeName": "Conv3DTranspose", "type": "Type[keras.layers.convolutional.Conv3DTranspose]"}, {"lineNumber": 434, "col_offset": 28, "nodeName": "Conv3DTranspose", "type": "Type[keras.layers.convolutional.Conv3DTranspose]"}, {"lineNumber": 523, "col_offset": 61, "nodeName": "data_format", "type": "str"}, {"lineNumber": 524, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 526, "col_offset": 71, "nodeName": "data_format", "type": "str"}, {"lineNumber": 527, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 533, "col_offset": 24, "nodeName": "K", "type": "module"}, {"lineNumber": 537, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 549, "col_offset": 24, "nodeName": "K", "type": "module"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 587, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 588, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 590, "col_offset": 79, "nodeName": "data_format", "type": "str"}, {"lineNumber": 591, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 597, "col_offset": 24, "nodeName": "K", "type": "module"}, {"lineNumber": 601, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 604, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 615, "col_offset": 24, "nodeName": "K", "type": "module"}, {"lineNumber": 619, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 621, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 623, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 624, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 632, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 659, "col_offset": 58, "nodeName": "data_format", "type": "str"}, {"lineNumber": 660, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 664, "col_offset": 24, "nodeName": "UpSampling2D", "type": "Type[keras.layers.convolutional.UpSampling2D]"}, {"lineNumber": 667, "col_offset": 16, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 667, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 668, "col_offset": 26, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling2D"}, {"lineNumber": 669, "col_offset": 28, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 669, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 670, "col_offset": 19, "nodeName": "data_format", "type": "str"}, {"lineNumber": 678, "col_offset": 19, "nodeName": "data_format", "type": "str"}, {"lineNumber": 679, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 680, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 682, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 683, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 685, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 685, "col_offset": 43, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 709, "col_offset": 61, "nodeName": "data_format", "type": "str"}, {"lineNumber": 710, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 719, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 720, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 766, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 769, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 774, "col_offset": 39, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 775, "col_offset": 42, "nodeName": "data_format", "type": "str"}, {"lineNumber": 776, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 781, "col_offset": 24, "nodeName": "K", "type": "module"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 809, "col_offset": 24, "nodeName": "K", "type": "module"}, {"lineNumber": 818, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 831, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 834, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 839, "col_offset": 39, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 840, "col_offset": 42, "nodeName": "data_format", "type": "str"}, {"lineNumber": 841, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 846, "col_offset": 24, "nodeName": "K", "type": "module"}, {"lineNumber": 865, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 868, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 876, "col_offset": 24, "nodeName": "K", "type": "module"}, {"lineNumber": 885, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "strides", "type": "int"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "steps", "type": "int"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "strides", "type": "int"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "steps", "type": "int"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "stride", "type": "int"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "stride", "type": "int"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 152, "col_offset": 46, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 156, "col_offset": 61, "nodeName": "num_row", "type": "int"}, {"lineNumber": 156, "col_offset": 70, "nodeName": "num_col", "type": "int"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 182, "col_offset": 57, "nodeName": "filters", "type": "int"}, {"lineNumber": 183, "col_offset": 61, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 184, "col_offset": 57, "nodeName": "padding", "type": "str"}, {"lineNumber": 201, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 204, "col_offset": 42, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "num_row", "type": "int"}, {"lineNumber": 206, "col_offset": 58, "nodeName": "num_col", "type": "int"}, {"lineNumber": 206, "col_offset": 67, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 226, "col_offset": 66, "nodeName": "filters", "type": "int"}, {"lineNumber": 228, "col_offset": 66, "nodeName": "padding", "type": "str"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "SeparableConv2D", "type": "Type[keras.layers.convolutional.SeparableConv2D]"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 277, "col_offset": 66, "nodeName": "filters", "type": "int"}, {"lineNumber": 279, "col_offset": 66, "nodeName": "padding", "type": "str"}, {"lineNumber": 371, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 373, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 374, "col_offset": 42, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 375, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 376, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 376, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 376, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 377, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 406, "col_offset": 19, "nodeName": "padding", "type": "str"}, {"lineNumber": 406, "col_offset": 41, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 408, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 434, "col_offset": 28, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 434, "col_offset": 66, "nodeName": "filters", "type": "int"}, {"lineNumber": 436, "col_offset": 66, "nodeName": "padding", "type": "str"}, {"lineNumber": 496, "col_offset": 37, "nodeName": "offset", "type": "int"}, {"lineNumber": 504, "col_offset": 37, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 506, "col_offset": 37, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 537, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 538, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 553, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 555, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 557, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 559, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 565, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 567, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 569, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 570, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 601, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 602, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 603, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 607, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 608, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 610, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 619, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 621, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 623, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 629, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 632, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 664, "col_offset": 24, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 666, "col_offset": 32, "nodeName": "data_format", "type": "str"}, {"lineNumber": 667, "col_offset": 16, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling2D"}, {"lineNumber": 667, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 668, "col_offset": 32, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 668, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 669, "col_offset": 28, "nodeName": "K", "type": "module"}, {"lineNumber": 679, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 679, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 679, "col_offset": 53, "nodeName": "length_row", "type": "int"}, {"lineNumber": 680, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 680, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 680, "col_offset": 59, "nodeName": "length_col", "type": "int"}, {"lineNumber": 682, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 682, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 682, "col_offset": 53, "nodeName": "length_row", "type": "int"}, {"lineNumber": 683, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 683, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 683, "col_offset": 59, "nodeName": "length_col", "type": "int"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 715, "col_offset": 28, "nodeName": "UpSampling3D", "type": "Type[keras.layers.convolutional.UpSampling3D]"}, {"lineNumber": 718, "col_offset": 20, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 718, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 719, "col_offset": 30, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling3D"}, {"lineNumber": 720, "col_offset": 32, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 720, "col_offset": 39, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 721, "col_offset": 23, "nodeName": "data_format", "type": "str"}, {"lineNumber": 731, "col_offset": 23, "nodeName": "data_format", "type": "str"}, {"lineNumber": 732, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 733, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 734, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 736, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 738, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 740, "col_offset": 20, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 740, "col_offset": 36, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 740, "col_offset": 47, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 766, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 769, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 831, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 834, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 865, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 868, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "padding", "type": "str"}, {"lineNumber": 245, "col_offset": 45, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "dilation_rate", "type": "Tuple[int, int]"}, {"lineNumber": 247, "col_offset": 51, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 409, "col_offset": 46, "nodeName": "filters", "type": "int"}, {"lineNumber": 411, "col_offset": 46, "nodeName": "padding", "type": "str"}, {"lineNumber": 412, "col_offset": 46, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 413, "col_offset": 50, "nodeName": "data_format", "type": "str"}, {"lineNumber": 414, "col_offset": 46, "nodeName": "num_depth", "type": "int"}, {"lineNumber": 414, "col_offset": 57, "nodeName": "num_row", "type": "int"}, {"lineNumber": 414, "col_offset": 66, "nodeName": "num_col", "type": "int"}, {"lineNumber": 414, "col_offset": 75, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 543, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 563, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 565, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 567, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 569, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 607, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 608, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 609, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 627, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 629, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 631, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 665, "col_offset": 26, "nodeName": "length_row", "type": "int"}, {"lineNumber": 665, "col_offset": 38, "nodeName": "length_col", "type": "int"}, {"lineNumber": 668, "col_offset": 32, "nodeName": "K", "type": "module"}, {"lineNumber": 671, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 671, "col_offset": 49, "nodeName": "length_row", "type": "int"}, {"lineNumber": 671, "col_offset": 62, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 672, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 672, "col_offset": 49, "nodeName": "length_col", "type": "int"}, {"lineNumber": 672, "col_offset": 62, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 674, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 674, "col_offset": 49, "nodeName": "length_row", "type": "int"}, {"lineNumber": 674, "col_offset": 62, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 675, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 675, "col_offset": 49, "nodeName": "length_col", "type": "int"}, {"lineNumber": 675, "col_offset": 62, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 679, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 680, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 682, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 683, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 715, "col_offset": 28, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 717, "col_offset": 36, "nodeName": "data_format", "type": "str"}, {"lineNumber": 718, "col_offset": 20, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling3D"}, {"lineNumber": 718, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 719, "col_offset": 36, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 719, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 720, "col_offset": 32, "nodeName": "K", "type": "module"}, {"lineNumber": 732, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 732, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 732, "col_offset": 57, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 733, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 733, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 733, "col_offset": 63, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 734, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 734, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 734, "col_offset": 63, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 736, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 736, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 736, "col_offset": 57, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 737, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 737, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 737, "col_offset": 63, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 738, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 738, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 738, "col_offset": 63, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 251, "col_offset": 50, "nodeName": "filters", "type": "int"}, {"lineNumber": 253, "col_offset": 50, "nodeName": "padding", "type": "str"}, {"lineNumber": 254, "col_offset": 50, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 255, "col_offset": 59, "nodeName": "multiplier", "type": "int"}, {"lineNumber": 256, "col_offset": 56, "nodeName": "dilation_rate", "type": "Tuple[int, int]"}, {"lineNumber": 257, "col_offset": 44, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 257, "col_offset": 57, "nodeName": "num_row", "type": "int"}, {"lineNumber": 257, "col_offset": 66, "nodeName": "num_col", "type": "int"}, {"lineNumber": 257, "col_offset": 75, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 537, "col_offset": 45, "nodeName": "offset", "type": "int"}, {"lineNumber": 538, "col_offset": 48, "nodeName": "offset", "type": "int"}, {"lineNumber": 553, "col_offset": 45, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 555, "col_offset": 45, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 557, "col_offset": 48, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 559, "col_offset": 48, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 601, "col_offset": 45, "nodeName": "offset", "type": "int"}, {"lineNumber": 602, "col_offset": 48, "nodeName": "offset", "type": "int"}, {"lineNumber": 603, "col_offset": 51, "nodeName": "offset", "type": "int"}, {"lineNumber": 619, "col_offset": 45, "nodeName": "dim1_offset", "type": "int"}, {"lineNumber": 621, "col_offset": 48, "nodeName": "dim2_offset", "type": "int"}, {"lineNumber": 623, "col_offset": 51, "nodeName": "dim3_offset", "type": "int"}, {"lineNumber": 671, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 672, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 674, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 675, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 716, "col_offset": 30, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 716, "col_offset": 43, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 716, "col_offset": 56, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 719, "col_offset": 36, "nodeName": "K", "type": "module"}, {"lineNumber": 722, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 722, "col_offset": 53, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 722, "col_offset": 67, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 723, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 723, "col_offset": 53, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 723, "col_offset": 67, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 724, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 724, "col_offset": 53, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 724, "col_offset": 67, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 726, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 726, "col_offset": 53, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 726, "col_offset": 67, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 727, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 727, "col_offset": 53, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 727, "col_offset": 67, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 728, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 728, "col_offset": 53, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 728, "col_offset": 67, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 732, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 733, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 734, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 736, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 737, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 738, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 787, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 788, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 791, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 792, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 852, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 853, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 854, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 857, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 858, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 859, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 542, "col_offset": 48, "nodeName": "offset", "type": "int"}, {"lineNumber": 543, "col_offset": 51, "nodeName": "offset", "type": "int"}, {"lineNumber": 563, "col_offset": 48, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 565, "col_offset": 48, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 567, "col_offset": 51, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 569, "col_offset": 51, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 607, "col_offset": 48, "nodeName": "offset", "type": "int"}, {"lineNumber": 608, "col_offset": 51, "nodeName": "offset", "type": "int"}, {"lineNumber": 609, "col_offset": 54, "nodeName": "offset", "type": "int"}, {"lineNumber": 627, "col_offset": 48, "nodeName": "dim1_offset", "type": "int"}, {"lineNumber": 629, "col_offset": 51, "nodeName": "dim2_offset", "type": "int"}, {"lineNumber": 631, "col_offset": 54, "nodeName": "dim3_offset", "type": "int"}, {"lineNumber": 722, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 723, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 724, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 726, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 727, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 728, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 787, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 788, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 791, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 792, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 852, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 853, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 854, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 857, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 858, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 859, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}]