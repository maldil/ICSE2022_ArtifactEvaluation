[{"lineNumber": 21, "col_offset": 22, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 182, "col_offset": 10, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 643, "col_offset": 20, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 803, "col_offset": 16, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 990, "col_offset": 14, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 1225, "col_offset": 10, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 1434, "col_offset": 15, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 1687, "col_offset": 11, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "cells", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "cells", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "state_size", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "nested_states", "type": "List[Union[Any, List[Any]]]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "nested_states", "type": "Union[List[Any], List[List[Any]]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "new_nested_states", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "cell_states", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "cells", "type": "List[Dict[str, Any]]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "config", "type": "Dict[str, List[Dict[str, Any]]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "cells", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "cell_config", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "tuples", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 342, "col_offset": 32, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "go_backwards", "type": "Any"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "go_backwards", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "unroll", "type": "Any"}, {"lineNumber": 346, "col_offset": 22, "nodeName": "unroll", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "input_spec", "type": "List[Any]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "_states", "type": "None"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "_states", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "_states", "type": "Any"}, {"lineNumber": 369, "col_offset": 23, "nodeName": "states", "type": "Any"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 385, "col_offset": 11, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "output_mask", "type": "Optional[Any]"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "batch_size", "type": "Optional[Any]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "is_keras_tensor", "type": "bool"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 446, "col_offset": 22, "nodeName": "initial_state", "type": "Union[Any, List[Any]]"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "is_keras_tensor", "type": "bool"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "timesteps", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 529, "col_offset": 11, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "cell_config", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "units", "type": "Any"}, {"lineNumber": 705, "col_offset": 21, "nodeName": "units", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "activation", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 707, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 723, "col_offset": 26, "nodeName": "units", "type": "Any"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "_dropout_mask", "type": "None"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "_recurrent_dropout_mask", "type": "None"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "prev_output", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 780, "col_offset": 18, "nodeName": "_dropout_mask", "type": "Any"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 781, "col_offset": 22, "nodeName": "_recurrent_dropout_mask", "type": "Any"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 909, "col_offset": 15, "nodeName": "units", "type": "Any"}, {"lineNumber": 913, "col_offset": 15, "nodeName": "activation", "type": "Any"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 921, "col_offset": 15, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 925, "col_offset": 15, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 929, "col_offset": 15, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 933, "col_offset": 15, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 937, "col_offset": 15, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 941, "col_offset": 15, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 949, "col_offset": 15, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 957, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 961, "col_offset": 15, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "units", "type": "Any"}, {"lineNumber": 1058, "col_offset": 21, "nodeName": "units", "type": "Any"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1060, "col_offset": 8, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1061, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1061, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1063, "col_offset": 8, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1064, "col_offset": 8, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1065, "col_offset": 8, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1067, "col_offset": 8, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1069, "col_offset": 8, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1072, "col_offset": 8, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1073, "col_offset": 8, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1075, "col_offset": 8, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1076, "col_offset": 8, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 1077, "col_offset": 8, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1077, "col_offset": 30, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1078, "col_offset": 8, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 1078, "col_offset": 26, "nodeName": "units", "type": "Any"}, {"lineNumber": 1079, "col_offset": 8, "nodeName": "_dropout_mask", "type": "None"}, {"lineNumber": 1080, "col_offset": 8, "nodeName": "_recurrent_dropout_mask", "type": "None"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 1096, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "kernel_z", "type": "Any"}, {"lineNumber": 1106, "col_offset": 8, "nodeName": "recurrent_kernel_z", "type": "Any"}, {"lineNumber": 1107, "col_offset": 8, "nodeName": "kernel_r", "type": "Any"}, {"lineNumber": 1111, "col_offset": 8, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 1112, "col_offset": 8, "nodeName": "recurrent_kernel_h", "type": "Any"}, {"lineNumber": 1114, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1122, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 1156, "col_offset": 8, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1159, "col_offset": 8, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1159, "col_offset": 18, "nodeName": "_dropout_mask", "type": "Any"}, {"lineNumber": 1161, "col_offset": 8, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1161, "col_offset": 22, "nodeName": "_recurrent_dropout_mask", "type": "Any"}, {"lineNumber": 1218, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 1331, "col_offset": 8, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "units", "type": "Any"}, {"lineNumber": 1347, "col_offset": 15, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1351, "col_offset": 15, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1355, "col_offset": 15, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1359, "col_offset": 15, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1363, "col_offset": 15, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1367, "col_offset": 15, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1371, "col_offset": 15, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1375, "col_offset": 15, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1379, "col_offset": 15, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1383, "col_offset": 15, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1387, "col_offset": 15, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1391, "col_offset": 15, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1395, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1399, "col_offset": 15, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 1403, "col_offset": 15, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1423, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 1507, "col_offset": 8, "nodeName": "units", "type": "Any"}, {"lineNumber": 1507, "col_offset": 21, "nodeName": "units", "type": "Any"}, {"lineNumber": 1508, "col_offset": 8, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1509, "col_offset": 8, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1510, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1510, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1512, "col_offset": 8, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1513, "col_offset": 8, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1514, "col_offset": 8, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1515, "col_offset": 8, "nodeName": "unit_forget_bias", "type": "Any"}, {"lineNumber": 1515, "col_offset": 32, "nodeName": "unit_forget_bias", "type": "Any"}, {"lineNumber": 1517, "col_offset": 8, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1518, "col_offset": 8, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1519, "col_offset": 8, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1521, "col_offset": 8, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1522, "col_offset": 8, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1523, "col_offset": 8, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1525, "col_offset": 8, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1526, "col_offset": 8, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 1527, "col_offset": 8, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1527, "col_offset": 30, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1528, "col_offset": 8, "nodeName": "state_size", "type": "Tuple[Any, Any]"}, {"lineNumber": 1529, "col_offset": 8, "nodeName": "_dropout_mask", "type": "None"}, {"lineNumber": 1530, "col_offset": 8, "nodeName": "_recurrent_dropout_mask", "type": "None"}, {"lineNumber": 1533, "col_offset": 8, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 1546, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1564, "col_offset": 8, "nodeName": "kernel_i", "type": "Any"}, {"lineNumber": 1565, "col_offset": 8, "nodeName": "kernel_f", "type": "Any"}, {"lineNumber": 1566, "col_offset": 8, "nodeName": "kernel_c", "type": "Any"}, {"lineNumber": 1567, "col_offset": 8, "nodeName": "kernel_o", "type": "Any"}, {"lineNumber": 1569, "col_offset": 8, "nodeName": "recurrent_kernel_i", "type": "Any"}, {"lineNumber": 1570, "col_offset": 8, "nodeName": "recurrent_kernel_f", "type": "Any"}, {"lineNumber": 1571, "col_offset": 8, "nodeName": "recurrent_kernel_c", "type": "Any"}, {"lineNumber": 1572, "col_offset": 8, "nodeName": "recurrent_kernel_o", "type": "Any"}, {"lineNumber": 1574, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1584, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 1619, "col_offset": 8, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1619, "col_offset": 18, "nodeName": "_dropout_mask", "type": "Any"}, {"lineNumber": 1621, "col_offset": 8, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1621, "col_offset": 22, "nodeName": "_recurrent_dropout_mask", "type": "Any"}, {"lineNumber": 1623, "col_offset": 8, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1624, "col_offset": 8, "nodeName": "c_tm1", "type": "Any"}, {"lineNumber": 1680, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 1800, "col_offset": 8, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 1812, "col_offset": 15, "nodeName": "units", "type": "Any"}, {"lineNumber": 1816, "col_offset": 15, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1820, "col_offset": 15, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1824, "col_offset": 15, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1828, "col_offset": 15, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1832, "col_offset": 15, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1836, "col_offset": 15, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1840, "col_offset": 15, "nodeName": "unit_forget_bias", "type": "Any"}, {"lineNumber": 1844, "col_offset": 15, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1848, "col_offset": 15, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1852, "col_offset": 15, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1856, "col_offset": 15, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1860, "col_offset": 15, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1864, "col_offset": 15, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1868, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1872, "col_offset": 15, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 1876, "col_offset": 15, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1897, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "state_size", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "cells", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "nested_states", "type": "List[Union[Any, List[Any]]]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "cell", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "states", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "cells", "type": "Any"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "nested_states", "type": "Union[List[List[Any]], List[Any]]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "new_nested_states", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "cell_states", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "cells", "type": "List[Dict[str, Any]]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "pop", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "cls", "type": "Type[StackedRNNCells]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "cells", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "trainable_weights", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "cell", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "cells", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "batch_get_value", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "batch_set_value", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "tuples", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "cell", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "cell", "type": "StackedRNNCells"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 350, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "state_spec", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "_states", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 372, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "output_dim", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "output_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "output_shape", "type": "Tuple[Any, Any]"}, {"lineNumber": 385, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "state_shape", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "output_shape", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "mask", "type": "Any"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 394, "col_offset": 30, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "mask", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "state_mask", "type": "List[None]"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "output_mask", "type": "Optional[Any]"}, {"lineNumber": 402, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 405, "col_offset": 39, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 406, "col_offset": 20, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "input_spec", "type": "List[Any]"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "InputSpec", "type": "Any"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 412, "col_offset": 22, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 412, "col_offset": 33, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "step_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 418, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 419, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 420, "col_offset": 38, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 439, "col_offset": 11, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "initial_state", "type": "List[Any]"}, {"lineNumber": 445, "col_offset": 26, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "input_spec", "type": "List[Any]"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "input_spec", "type": "List[Any]"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "state_spec", "type": "Any"}, {"lineNumber": 455, "col_offset": 25, "nodeName": "state_spec", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "input_spec", "type": "List[Any]"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "input_spec", "type": "List[Any]"}, {"lineNumber": 469, "col_offset": 30, "nodeName": "input_spec", "type": "List[Any]"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 472, "col_offset": 38, "nodeName": "initial_state", "type": "Union[Any, List[Any]]"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 479, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 479, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 489, "col_offset": 22, "nodeName": "mask", "type": "Any"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 497, "col_offset": 22, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 497, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 498, "col_offset": 20, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 499, "col_offset": 11, "nodeName": "unroll", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 512, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "step", "type": "functools.partial[nothing]"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 516, "col_offset": 39, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 516, "col_offset": 45, "nodeName": "step", "type": "Any"}, {"lineNumber": 517, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 518, "col_offset": 45, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "self", "type": "GRU"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "updates", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 525, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 529, "col_offset": 11, "nodeName": "self", "type": "GRU"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 532, "col_offset": 21, "nodeName": "last_output", "type": "Any"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 535, "col_offset": 19, "nodeName": "last_output", "type": "Any"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "_uses_learning_phase", "type": "bool"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "self", "type": "GRU"}, {"lineNumber": 545, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 548, "col_offset": 15, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 550, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 600, "col_offset": 38, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 601, "col_offset": 34, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 602, "col_offset": 34, "nodeName": "go_backwards", "type": "Any"}, {"lineNumber": 603, "col_offset": 30, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 604, "col_offset": 28, "nodeName": "unroll", "type": "Any"}, {"lineNumber": 605, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 607, "col_offset": 36, "nodeName": "cell_config", "type": "Any"}, {"lineNumber": 608, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "deserialize_layer", "type": "Any"}, {"lineNumber": 616, "col_offset": 15, "nodeName": "cls", "type": "Type[RNN]"}, {"lineNumber": 616, "col_offset": 19, "nodeName": "cell", "type": "Any"}, {"lineNumber": 620, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 620, "col_offset": 22, "nodeName": "cell", "type": "Any"}, {"lineNumber": 620, "col_offset": 33, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 621, "col_offset": 19, "nodeName": "trainable_weights", "type": "Any"}, {"lineNumber": 626, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 626, "col_offset": 22, "nodeName": "cell", "type": "Any"}, {"lineNumber": 626, "col_offset": 33, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "non_trainable_weights", "type": "Any"}, {"lineNumber": 632, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "cell", "type": "Any"}, {"lineNumber": 632, "col_offset": 33, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 633, "col_offset": 19, "nodeName": "losses", "type": "Any"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 637, "col_offset": 22, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 637, "col_offset": 33, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "cell_losses", "type": "Union[List[Any], Any]"}, {"lineNumber": 640, "col_offset": 15, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 640, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 706, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 706, "col_offset": 42, "nodeName": "activation", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 709, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 709, "col_offset": 51, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 710, "col_offset": 37, "nodeName": "get", "type": "Any"}, {"lineNumber": 710, "col_offset": 54, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 711, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 711, "col_offset": 49, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 713, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 713, "col_offset": 51, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 714, "col_offset": 37, "nodeName": "get", "type": "Any"}, {"lineNumber": 714, "col_offset": 54, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 715, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 715, "col_offset": 49, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 717, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 717, "col_offset": 49, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 718, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 718, "col_offset": 52, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 719, "col_offset": 31, "nodeName": "get", "type": "Any"}, {"lineNumber": 719, "col_offset": 47, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 721, "col_offset": 23, "nodeName": "min", "type": "Callable"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 722, "col_offset": 33, "nodeName": "min", "type": "Callable"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 723, "col_offset": 26, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 728, "col_offset": 22, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 733, "col_offset": 32, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 746, "col_offset": 12, "nodeName": "bias", "type": "None"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 750, "col_offset": 15, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 751, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 761, "col_offset": 12, "nodeName": "_dropout_mask", "type": "None"}, {"lineNumber": 764, "col_offset": 15, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 765, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 766, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "_recurrent_dropout_mask", "type": "None"}, {"lineNumber": 779, "col_offset": 22, "nodeName": "states", "type": "Any"}, {"lineNumber": 780, "col_offset": 18, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 781, "col_offset": 22, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 783, "col_offset": 11, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 784, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 786, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 787, "col_offset": 11, "nodeName": "bias", "type": "Any"}, {"lineNumber": 788, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 790, "col_offset": 11, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 791, "col_offset": 12, "nodeName": "prev_output", "type": "Any"}, {"lineNumber": 791, "col_offset": 27, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 792, "col_offset": 17, "nodeName": "h", "type": "Any"}, {"lineNumber": 793, "col_offset": 11, "nodeName": "activation", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 800, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 866, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 882, "col_offset": 15, "nodeName": "SimpleRNNCell", "type": "Type[SimpleRNNCell]"}, {"lineNumber": 882, "col_offset": 29, "nodeName": "units", "type": "Any"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 896, "col_offset": 40, "nodeName": "cell", "type": "SimpleRNNCell"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 897, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 897, "col_offset": 53, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 900, "col_offset": 8, "nodeName": "_generate_dropout_mask", "type": "Any"}, {"lineNumber": 900, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "_generate_recurrent_dropout_mask", "type": "Any"}, {"lineNumber": 901, "col_offset": 51, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 902, "col_offset": 15, "nodeName": "call", "type": "Callable[..., Any]"}, {"lineNumber": 902, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 909, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 913, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 921, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 925, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 929, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 933, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 937, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 941, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 949, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 957, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 961, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 964, "col_offset": 27, "nodeName": "units", "type": "Any"}, {"lineNumber": 966, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 977, "col_offset": 29, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 978, "col_offset": 39, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 979, "col_offset": 22, "nodeName": "get_config", "type": "Callable[[], Any]"}, {"lineNumber": 980, "col_offset": 12, "nodeName": "base_config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 981, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 985, "col_offset": 31, "nodeName": "config", "type": "Any"}, {"lineNumber": 987, "col_offset": 15, "nodeName": "cls", "type": "Type[SimpleRNN]"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1059, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 1059, "col_offset": 42, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1060, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1060, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 1060, "col_offset": 52, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1061, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1063, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1063, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 1063, "col_offset": 51, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1064, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1064, "col_offset": 37, "nodeName": "get", "type": "Any"}, {"lineNumber": 1064, "col_offset": 54, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1065, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1065, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 1065, "col_offset": 49, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1067, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1067, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 1067, "col_offset": 51, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1068, "col_offset": 37, "nodeName": "get", "type": "Any"}, {"lineNumber": 1068, "col_offset": 54, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1069, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1069, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 1069, "col_offset": 49, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1071, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 1071, "col_offset": 49, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1072, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1072, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 1072, "col_offset": 52, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1073, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1073, "col_offset": 31, "nodeName": "get", "type": "Any"}, {"lineNumber": 1073, "col_offset": 47, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1075, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1075, "col_offset": 23, "nodeName": "min", "type": "Callable"}, {"lineNumber": 1076, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1076, "col_offset": 33, "nodeName": "min", "type": "Callable"}, {"lineNumber": 1077, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1078, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1078, "col_offset": 26, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1079, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1080, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1083, "col_offset": 20, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1084, "col_offset": 22, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 1089, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1089, "col_offset": 32, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 1096, "col_offset": 11, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1103, "col_offset": 12, "nodeName": "bias", "type": "None"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1105, "col_offset": 24, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 1106, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1106, "col_offset": 34, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 1107, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1107, "col_offset": 24, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 1108, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1108, "col_offset": 34, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 1111, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1111, "col_offset": 24, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 1112, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1112, "col_offset": 34, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 1114, "col_offset": 11, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1115, "col_offset": 12, "nodeName": "bias_z", "type": "Any"}, {"lineNumber": 1116, "col_offset": 12, "nodeName": "bias_r", "type": "Any"}, {"lineNumber": 1117, "col_offset": 12, "nodeName": "bias_h", "type": "Any"}, {"lineNumber": 1119, "col_offset": 12, "nodeName": "bias_z", "type": "None"}, {"lineNumber": 1120, "col_offset": 12, "nodeName": "bias_r", "type": "None"}, {"lineNumber": 1121, "col_offset": 12, "nodeName": "bias_h", "type": "None"}, {"lineNumber": 1122, "col_offset": 8, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1125, "col_offset": 15, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1126, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1137, "col_offset": 12, "nodeName": "_dropout_mask", "type": "None"}, {"lineNumber": 1140, "col_offset": 15, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 1141, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1142, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1153, "col_offset": 12, "nodeName": "_recurrent_dropout_mask", "type": "None"}, {"lineNumber": 1156, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 1159, "col_offset": 18, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1161, "col_offset": 22, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1163, "col_offset": 11, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1172, "col_offset": 12, "nodeName": "x_z", "type": "Any"}, {"lineNumber": 1173, "col_offset": 12, "nodeName": "x_r", "type": "Any"}, {"lineNumber": 1174, "col_offset": 12, "nodeName": "x_h", "type": "Any"}, {"lineNumber": 1175, "col_offset": 15, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1198, "col_offset": 12, "nodeName": "matrix_x", "type": "Any"}, {"lineNumber": 1199, "col_offset": 15, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1206, "col_offset": 12, "nodeName": "x_z", "type": "Any"}, {"lineNumber": 1207, "col_offset": 12, "nodeName": "x_r", "type": "Any"}, {"lineNumber": 1208, "col_offset": 12, "nodeName": "recurrent_z", "type": "Any"}, {"lineNumber": 1209, "col_offset": 12, "nodeName": "recurrent_r", "type": "Any"}, {"lineNumber": 1211, "col_offset": 12, "nodeName": "z", "type": "Any"}, {"lineNumber": 1212, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 1214, "col_offset": 12, "nodeName": "x_h", "type": "Any"}, {"lineNumber": 1217, "col_offset": 12, "nodeName": "hh", "type": "Any"}, {"lineNumber": 1222, "col_offset": 15, "nodeName": "h", "type": "Any"}, {"lineNumber": 1299, "col_offset": 11, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1314, "col_offset": 15, "nodeName": "GRUCell", "type": "Type[GRUCell]"}, {"lineNumber": 1314, "col_offset": 23, "nodeName": "units", "type": "Any"}, {"lineNumber": 1330, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 1330, "col_offset": 34, "nodeName": "cell", "type": "GRUCell"}, {"lineNumber": 1331, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1331, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 1331, "col_offset": 53, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "_generate_dropout_mask", "type": "Any"}, {"lineNumber": 1334, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1335, "col_offset": 8, "nodeName": "_generate_recurrent_dropout_mask", "type": "Any"}, {"lineNumber": 1335, "col_offset": 51, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1336, "col_offset": 15, "nodeName": "call", "type": "Callable[..., Any]"}, {"lineNumber": 1336, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1347, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1351, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1355, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1359, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1363, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1367, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1371, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1375, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1379, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1383, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1387, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1391, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1395, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1399, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1403, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1406, "col_offset": 27, "nodeName": "units", "type": "Any"}, {"lineNumber": 1409, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1420, "col_offset": 29, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1421, "col_offset": 39, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 1422, "col_offset": 36, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1423, "col_offset": 22, "nodeName": "get_config", "type": "Callable[[], Any]"}, {"lineNumber": 1424, "col_offset": 12, "nodeName": "base_config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 1425, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1431, "col_offset": 15, "nodeName": "cls", "type": "Type[GRU]"}, {"lineNumber": 1506, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 1507, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1508, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1508, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 1508, "col_offset": 42, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1509, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1509, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 1509, "col_offset": 52, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1510, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1512, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1512, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 1512, "col_offset": 51, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1513, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1513, "col_offset": 37, "nodeName": "get", "type": "Any"}, {"lineNumber": 1513, "col_offset": 54, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1514, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1514, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 1514, "col_offset": 49, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1515, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1517, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1517, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 1517, "col_offset": 51, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1518, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1518, "col_offset": 37, "nodeName": "get", "type": "Any"}, {"lineNumber": 1518, "col_offset": 54, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1519, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1519, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 1519, "col_offset": 49, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1521, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1521, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 1521, "col_offset": 49, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1522, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1522, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 1522, "col_offset": 52, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1523, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1523, "col_offset": 31, "nodeName": "get", "type": "Any"}, {"lineNumber": 1523, "col_offset": 47, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1525, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1525, "col_offset": 23, "nodeName": "min", "type": "Callable"}, {"lineNumber": 1526, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1526, "col_offset": 33, "nodeName": "min", "type": "Callable"}, {"lineNumber": 1527, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1528, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1528, "col_offset": 27, "nodeName": "units", "type": "Any"}, {"lineNumber": 1528, "col_offset": 39, "nodeName": "units", "type": "Any"}, {"lineNumber": 1529, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1530, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1533, "col_offset": 20, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1534, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1534, "col_offset": 22, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 1539, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1539, "col_offset": 32, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 1546, "col_offset": 11, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1547, "col_offset": 15, "nodeName": "unit_forget_bias", "type": "Any"}, {"lineNumber": 1562, "col_offset": 12, "nodeName": "bias", "type": "None"}, {"lineNumber": 1564, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1564, "col_offset": 24, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 1565, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1565, "col_offset": 24, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 1566, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1566, "col_offset": 24, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 1567, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1567, "col_offset": 24, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 1569, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1569, "col_offset": 34, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 1570, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1570, "col_offset": 34, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 1571, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1571, "col_offset": 34, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 1572, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1572, "col_offset": 34, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 1574, "col_offset": 11, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1575, "col_offset": 12, "nodeName": "bias_i", "type": "Any"}, {"lineNumber": 1576, "col_offset": 12, "nodeName": "bias_f", "type": "Any"}, {"lineNumber": 1577, "col_offset": 12, "nodeName": "bias_c", "type": "Any"}, {"lineNumber": 1578, "col_offset": 12, "nodeName": "bias_o", "type": "Any"}, {"lineNumber": 1580, "col_offset": 12, "nodeName": "bias_i", "type": "None"}, {"lineNumber": 1581, "col_offset": 12, "nodeName": "bias_f", "type": "None"}, {"lineNumber": 1582, "col_offset": 12, "nodeName": "bias_c", "type": "None"}, {"lineNumber": 1583, "col_offset": 12, "nodeName": "bias_o", "type": "None"}, {"lineNumber": 1584, "col_offset": 8, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1587, "col_offset": 15, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1588, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1599, "col_offset": 12, "nodeName": "_dropout_mask", "type": "None"}, {"lineNumber": 1602, "col_offset": 15, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 1603, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1604, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1615, "col_offset": 12, "nodeName": "_recurrent_dropout_mask", "type": "None"}, {"lineNumber": 1619, "col_offset": 18, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1621, "col_offset": 22, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1623, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 1624, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 1626, "col_offset": 11, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1637, "col_offset": 12, "nodeName": "x_i", "type": "Any"}, {"lineNumber": 1638, "col_offset": 12, "nodeName": "x_f", "type": "Any"}, {"lineNumber": 1639, "col_offset": 12, "nodeName": "x_c", "type": "Any"}, {"lineNumber": 1640, "col_offset": 12, "nodeName": "x_o", "type": "Any"}, {"lineNumber": 1663, "col_offset": 12, "nodeName": "z", "type": "Any"}, {"lineNumber": 1666, "col_offset": 12, "nodeName": "z", "type": "Any"}, {"lineNumber": 1667, "col_offset": 15, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1670, "col_offset": 12, "nodeName": "z0", "type": "Any"}, {"lineNumber": 1671, "col_offset": 12, "nodeName": "z1", "type": "Any"}, {"lineNumber": 1672, "col_offset": 12, "nodeName": "z2", "type": "Any"}, {"lineNumber": 1673, "col_offset": 12, "nodeName": "z3", "type": "Any"}, {"lineNumber": 1675, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 1676, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 1677, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 1678, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 1680, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 1684, "col_offset": 15, "nodeName": "h", "type": "Any"}, {"lineNumber": 1767, "col_offset": 11, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1782, "col_offset": 15, "nodeName": "LSTMCell", "type": "Type[LSTMCell]"}, {"lineNumber": 1782, "col_offset": 24, "nodeName": "units", "type": "Any"}, {"lineNumber": 1799, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 1799, "col_offset": 35, "nodeName": "cell", "type": "LSTMCell"}, {"lineNumber": 1800, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1800, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 1800, "col_offset": 53, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 1803, "col_offset": 8, "nodeName": "_generate_dropout_mask", "type": "Any"}, {"lineNumber": 1803, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1804, "col_offset": 8, "nodeName": "_generate_recurrent_dropout_mask", "type": "Any"}, {"lineNumber": 1804, "col_offset": 51, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1805, "col_offset": 15, "nodeName": "call", "type": "Callable[..., Any]"}, {"lineNumber": 1805, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1812, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1816, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1820, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1824, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1828, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1832, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1836, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1840, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1844, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1848, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1852, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1856, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1860, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1864, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1868, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1872, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1876, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1879, "col_offset": 27, "nodeName": "units", "type": "Any"}, {"lineNumber": 1882, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1886, "col_offset": 38, "nodeName": "unit_forget_bias", "type": "Any"}, {"lineNumber": 1894, "col_offset": 29, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1895, "col_offset": 39, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 1896, "col_offset": 36, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1897, "col_offset": 22, "nodeName": "get_config", "type": "Callable[[], Any]"}, {"lineNumber": 1898, "col_offset": 12, "nodeName": "base_config", "type": "Dict[str, Any]"}, {"lineNumber": 1899, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1905, "col_offset": 15, "nodeName": "cls", "type": "Type[LSTM]"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "self", "type": "None"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "state_size", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "states", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "call", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "states", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "states", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "cell", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 90, "col_offset": 59, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "cell", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "trainable_weights", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "cell", "type": "Any"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "non_trainable_weights", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "trainable_weights", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "cell", "type": "Any"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "weights", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "K", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "cell", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "num_param", "type": "int"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "K", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "cell", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "cell_losses", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "losses", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "cell_losses", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "cell", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "cell_losses", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "cell_losses", "type": "Any"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 330, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "StackedRNNCells", "type": "Type[StackedRNNCells]"}, {"lineNumber": 331, "col_offset": 35, "nodeName": "cell", "type": "Any"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 332, "col_offset": 23, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 333, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 334, "col_offset": 52, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 336, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 340, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "InputSpec", "type": "Any"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "InputSpec", "type": "Any"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 360, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "num_states", "type": "int"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "num_states", "type": "int"}, {"lineNumber": 373, "col_offset": 26, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 381, "col_offset": 60, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 383, "col_offset": 44, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 387, "col_offset": 36, "nodeName": "state_shape", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 394, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 397, "col_offset": 35, "nodeName": "state_mask", "type": "List[None]"}, {"lineNumber": 403, "col_offset": 26, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 405, "col_offset": 39, "nodeName": "self", "type": "RNN"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "self", "type": "RNN"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "reset_states", "type": "Callable[..., Any]"}, {"lineNumber": 412, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "build", "type": "Union[Callable[[Any], Any], Any]"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "step_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "K", "type": "Any"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "K", "type": "Any"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "K", "type": "Any"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "cell", "type": "Any"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 431, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 431, "col_offset": 69, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 432, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 433, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 440, "col_offset": 19, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 440, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 442, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 442, "col_offset": 26, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 443, "col_offset": 29, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 445, "col_offset": 34, "nodeName": "initial_state", "type": "Union[Any, List[Any]]"}, {"lineNumber": 447, "col_offset": 52, "nodeName": "is_keras_tensor", "type": "bool"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "self", "type": "RNN"}, {"lineNumber": 455, "col_offset": 25, "nodeName": "self", "type": "RNN"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "state_spec", "type": "List[Any]"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 460, "col_offset": 30, "nodeName": "input_spec", "type": "List[Any]"}, {"lineNumber": 460, "col_offset": 43, "nodeName": "state_spec", "type": "Any"}, {"lineNumber": 466, "col_offset": 21, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 466, "col_offset": 47, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Union[Any, List[Any]]]"}, {"lineNumber": 473, "col_offset": 19, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 473, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 480, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 481, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 482, "col_offset": 13, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 490, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 492, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 492, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 492, "col_offset": 37, "nodeName": "states", "type": "Any"}, {"lineNumber": 493, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 497, "col_offset": 22, "nodeName": "K", "type": "Any"}, {"lineNumber": 499, "col_offset": 11, "nodeName": "self", "type": "GRU"}, {"lineNumber": 499, "col_offset": 27, "nodeName": "timesteps", "type": "Any"}, {"lineNumber": 500, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 512, "col_offset": 19, "nodeName": "cell", "type": "Any"}, {"lineNumber": 513, "col_offset": 19, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 513, "col_offset": 37, "nodeName": "call", "type": "Any"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "cell", "type": "Any"}, {"lineNumber": 516, "col_offset": 39, "nodeName": "K", "type": "Any"}, {"lineNumber": 519, "col_offset": 58, "nodeName": "go_backwards", "type": "Any"}, {"lineNumber": 520, "col_offset": 50, "nodeName": "mask", "type": "Any"}, {"lineNumber": 521, "col_offset": 52, "nodeName": "unroll", "type": "Any"}, {"lineNumber": 522, "col_offset": 58, "nodeName": "timesteps", "type": "Any"}, {"lineNumber": 525, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "add_update", "type": "Any"}, {"lineNumber": 527, "col_offset": 28, "nodeName": "updates", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 527, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 540, "col_offset": 16, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 543, "col_offset": 30, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 548, "col_offset": 15, "nodeName": "self", "type": "RNN"}, {"lineNumber": 549, "col_offset": 18, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 552, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "states", "type": "Any"}, {"lineNumber": 564, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 564, "col_offset": 23, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 568, "col_offset": 16, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "states", "type": "None"}, {"lineNumber": 600, "col_offset": 38, "nodeName": "self", "type": "GRU"}, {"lineNumber": 601, "col_offset": 34, "nodeName": "self", "type": "GRU"}, {"lineNumber": 602, "col_offset": 34, "nodeName": "self", "type": "GRU"}, {"lineNumber": 603, "col_offset": 30, "nodeName": "self", "type": "GRU"}, {"lineNumber": 604, "col_offset": 28, "nodeName": "self", "type": "GRU"}, {"lineNumber": 605, "col_offset": 22, "nodeName": "cell", "type": "Any"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 614, "col_offset": 33, "nodeName": "pop", "type": "Any"}, {"lineNumber": 615, "col_offset": 48, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 616, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 620, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 621, "col_offset": 19, "nodeName": "cell", "type": "Any"}, {"lineNumber": 626, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "cell", "type": "Any"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 633, "col_offset": 19, "nodeName": "cell", "type": "Any"}, {"lineNumber": 637, "col_offset": 22, "nodeName": "self", "type": "RNN"}, {"lineNumber": 638, "col_offset": 26, "nodeName": "get_losses_for", "type": "Union[Callable[..., Any], Any]"}, {"lineNumber": 638, "col_offset": 51, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 639, "col_offset": 19, "nodeName": "cell_losses", "type": "Union[List[Any], Any]"}, {"lineNumber": 704, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 706, "col_offset": 26, "nodeName": "activations", "type": "Any"}, {"lineNumber": 709, "col_offset": 34, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 710, "col_offset": 37, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 711, "col_offset": 32, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 713, "col_offset": 34, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 714, "col_offset": 37, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 715, "col_offset": 32, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 717, "col_offset": 33, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 718, "col_offset": 36, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 719, "col_offset": 31, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 721, "col_offset": 31, "nodeName": "max", "type": "Callable"}, {"lineNumber": 721, "col_offset": 39, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 722, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 722, "col_offset": 49, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 728, "col_offset": 22, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 730, "col_offset": 50, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 731, "col_offset": 50, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 732, "col_offset": 49, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 736, "col_offset": 24, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 738, "col_offset": 23, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 740, "col_offset": 12, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 740, "col_offset": 24, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 746, "col_offset": 12, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 750, "col_offset": 15, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 756, "col_offset": 33, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 757, "col_offset": 16, "nodeName": "dropped_inputs", "type": "Callable[[], Any]"}, {"lineNumber": 758, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 761, "col_offset": 12, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 764, "col_offset": 15, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 765, "col_offset": 19, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 766, "col_offset": 19, "nodeName": "tile", "type": "Any"}, {"lineNumber": 766, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 771, "col_offset": 43, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 772, "col_offset": 16, "nodeName": "dropped_inputs", "type": "Callable[[], Any]"}, {"lineNumber": 773, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 784, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 784, "col_offset": 40, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 786, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 786, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 786, "col_offset": 30, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 787, "col_offset": 11, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 788, "col_offset": 16, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 788, "col_offset": 27, "nodeName": "h", "type": "Any"}, {"lineNumber": 788, "col_offset": 30, "nodeName": "bias", "type": "Any"}, {"lineNumber": 792, "col_offset": 21, "nodeName": "dot", "type": "Any"}, {"lineNumber": 792, "col_offset": 27, "nodeName": "prev_output", "type": "Any"}, {"lineNumber": 792, "col_offset": 40, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 793, "col_offset": 11, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 794, "col_offset": 21, "nodeName": "activation", "type": "Any"}, {"lineNumber": 794, "col_offset": 37, "nodeName": "output", "type": "Any"}, {"lineNumber": 797, "col_offset": 15, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 797, "col_offset": 30, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 798, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 799, "col_offset": 16, "nodeName": "_uses_learning_phase", "type": "bool"}, {"lineNumber": 800, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 871, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 879, "col_offset": 16, "nodeName": "dropout", "type": "float"}, {"lineNumber": 880, "col_offset": 16, "nodeName": "recurrent_dropout", "type": "float"}, {"lineNumber": 883, "col_offset": 40, "nodeName": "activation", "type": "Any"}, {"lineNumber": 884, "col_offset": 38, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 885, "col_offset": 48, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 886, "col_offset": 51, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 887, "col_offset": 46, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 888, "col_offset": 48, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 889, "col_offset": 51, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 890, "col_offset": 46, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 891, "col_offset": 47, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 892, "col_offset": 50, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 893, "col_offset": 45, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 894, "col_offset": 37, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 895, "col_offset": 47, "nodeName": "recurrent_dropout", "type": "Union[Any, float]"}, {"lineNumber": 896, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 897, "col_offset": 36, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 900, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 900, "col_offset": 58, "nodeName": "training", "type": "Any"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 901, "col_offset": 68, "nodeName": "training", "type": "Any"}, {"lineNumber": 903, "col_offset": 48, "nodeName": "mask", "type": "Any"}, {"lineNumber": 904, "col_offset": 52, "nodeName": "training", "type": "Any"}, {"lineNumber": 905, "col_offset": 57, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 909, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 913, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 921, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 925, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 929, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 933, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 937, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 941, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 949, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 957, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 961, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 964, "col_offset": 27, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 965, "col_offset": 32, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 965, "col_offset": 54, "nodeName": "activation", "type": "Any"}, {"lineNumber": 966, "col_offset": 30, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 967, "col_offset": 40, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 967, "col_offset": 63, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 968, "col_offset": 43, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 968, "col_offset": 66, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 969, "col_offset": 38, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 969, "col_offset": 61, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 970, "col_offset": 40, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 970, "col_offset": 63, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 971, "col_offset": 43, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 971, "col_offset": 66, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 972, "col_offset": 38, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 972, "col_offset": 61, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 973, "col_offset": 42, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 973, "col_offset": 65, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 974, "col_offset": 39, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 974, "col_offset": 61, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 975, "col_offset": 42, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 975, "col_offset": 64, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 976, "col_offset": 37, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 976, "col_offset": 59, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 977, "col_offset": 29, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 978, "col_offset": 39, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 986, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 987, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 1057, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1059, "col_offset": 26, "nodeName": "activations", "type": "Any"}, {"lineNumber": 1060, "col_offset": 36, "nodeName": "activations", "type": "Any"}, {"lineNumber": 1063, "col_offset": 34, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1064, "col_offset": 37, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1065, "col_offset": 32, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1067, "col_offset": 34, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1068, "col_offset": 37, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1069, "col_offset": 32, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1071, "col_offset": 33, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1072, "col_offset": 36, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1073, "col_offset": 31, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1075, "col_offset": 31, "nodeName": "max", "type": "Callable"}, {"lineNumber": 1075, "col_offset": 39, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1076, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 1076, "col_offset": 49, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 1084, "col_offset": 22, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1086, "col_offset": 50, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1087, "col_offset": 50, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1088, "col_offset": 49, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1092, "col_offset": 24, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1093, "col_offset": 24, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1094, "col_offset": 23, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1097, "col_offset": 12, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1097, "col_offset": 24, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 1103, "col_offset": 12, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1105, "col_offset": 24, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1106, "col_offset": 34, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1107, "col_offset": 24, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1111, "col_offset": 24, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1112, "col_offset": 34, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1115, "col_offset": 12, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1115, "col_offset": 26, "nodeName": "bias", "type": "Any"}, {"lineNumber": 1116, "col_offset": 12, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1116, "col_offset": 26, "nodeName": "bias", "type": "Any"}, {"lineNumber": 1117, "col_offset": 12, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1117, "col_offset": 26, "nodeName": "bias", "type": "Any"}, {"lineNumber": 1119, "col_offset": 12, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1120, "col_offset": 12, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1121, "col_offset": 12, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1125, "col_offset": 15, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1126, "col_offset": 19, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 1137, "col_offset": 12, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1140, "col_offset": 15, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1141, "col_offset": 19, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 1142, "col_offset": 19, "nodeName": "tile", "type": "Any"}, {"lineNumber": 1142, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1153, "col_offset": 12, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1163, "col_offset": 11, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1164, "col_offset": 20, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1165, "col_offset": 16, "nodeName": "inputs_z", "type": "Any"}, {"lineNumber": 1166, "col_offset": 16, "nodeName": "inputs_r", "type": "Any"}, {"lineNumber": 1167, "col_offset": 16, "nodeName": "inputs_h", "type": "Any"}, {"lineNumber": 1169, "col_offset": 16, "nodeName": "inputs_z", "type": "Any"}, {"lineNumber": 1169, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1170, "col_offset": 16, "nodeName": "inputs_r", "type": "Any"}, {"lineNumber": 1170, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1171, "col_offset": 16, "nodeName": "inputs_h", "type": "Any"}, {"lineNumber": 1171, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1172, "col_offset": 18, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1172, "col_offset": 24, "nodeName": "inputs_z", "type": "Any"}, {"lineNumber": 1172, "col_offset": 34, "nodeName": "kernel_z", "type": "Any"}, {"lineNumber": 1173, "col_offset": 18, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1173, "col_offset": 24, "nodeName": "inputs_r", "type": "Any"}, {"lineNumber": 1173, "col_offset": 34, "nodeName": "kernel_r", "type": "Any"}, {"lineNumber": 1174, "col_offset": 18, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1174, "col_offset": 24, "nodeName": "inputs_h", "type": "Any"}, {"lineNumber": 1174, "col_offset": 34, "nodeName": "kernel_h", "type": "Any"}, {"lineNumber": 1175, "col_offset": 15, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1176, "col_offset": 16, "nodeName": "x_z", "type": "Any"}, {"lineNumber": 1177, "col_offset": 16, "nodeName": "x_r", "type": "Any"}, {"lineNumber": 1178, "col_offset": 16, "nodeName": "x_h", "type": "Any"}, {"lineNumber": 1180, "col_offset": 20, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 1181, "col_offset": 16, "nodeName": "h_tm1_z", "type": "Any"}, {"lineNumber": 1182, "col_offset": 16, "nodeName": "h_tm1_r", "type": "Any"}, {"lineNumber": 1183, "col_offset": 16, "nodeName": "h_tm1_h", "type": "Any"}, {"lineNumber": 1185, "col_offset": 16, "nodeName": "h_tm1_z", "type": "Any"}, {"lineNumber": 1185, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1186, "col_offset": 16, "nodeName": "h_tm1_r", "type": "Any"}, {"lineNumber": 1186, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1187, "col_offset": 16, "nodeName": "h_tm1_h", "type": "Any"}, {"lineNumber": 1187, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1188, "col_offset": 16, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1190, "col_offset": 16, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1193, "col_offset": 17, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1196, "col_offset": 20, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1197, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1198, "col_offset": 23, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1198, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1198, "col_offset": 37, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 1199, "col_offset": 15, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1200, "col_offset": 16, "nodeName": "matrix_x", "type": "Any"}, {"lineNumber": 1201, "col_offset": 20, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 1202, "col_offset": 16, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1203, "col_offset": 27, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1203, "col_offset": 33, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1206, "col_offset": 18, "nodeName": "matrix_x", "type": "Any"}, {"lineNumber": 1207, "col_offset": 18, "nodeName": "matrix_x", "type": "Any"}, {"lineNumber": 1208, "col_offset": 26, "nodeName": "matrix_inner", "type": "Any"}, {"lineNumber": 1209, "col_offset": 26, "nodeName": "matrix_inner", "type": "Any"}, {"lineNumber": 1211, "col_offset": 16, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1212, "col_offset": 16, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1214, "col_offset": 18, "nodeName": "matrix_x", "type": "Any"}, {"lineNumber": 1215, "col_offset": 26, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1217, "col_offset": 17, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1218, "col_offset": 12, "nodeName": "z", "type": "Any"}, {"lineNumber": 1218, "col_offset": 16, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1218, "col_offset": 34, "nodeName": "hh", "type": "Any"}, {"lineNumber": 1219, "col_offset": 15, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1219, "col_offset": 30, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 1220, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 1221, "col_offset": 16, "nodeName": "_uses_learning_phase", "type": "bool"}, {"lineNumber": 1222, "col_offset": 19, "nodeName": "h", "type": "Any"}, {"lineNumber": 1300, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1303, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 1311, "col_offset": 16, "nodeName": "dropout", "type": "float"}, {"lineNumber": 1312, "col_offset": 16, "nodeName": "recurrent_dropout", "type": "float"}, {"lineNumber": 1315, "col_offset": 34, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1316, "col_offset": 44, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1317, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1318, "col_offset": 42, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1319, "col_offset": 45, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1320, "col_offset": 40, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1321, "col_offset": 42, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1322, "col_offset": 45, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1323, "col_offset": 40, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1324, "col_offset": 41, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1325, "col_offset": 44, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1326, "col_offset": 39, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1327, "col_offset": 31, "nodeName": "dropout", "type": "Union[Any, float]"}, {"lineNumber": 1328, "col_offset": 41, "nodeName": "recurrent_dropout", "type": "Union[Any, float]"}, {"lineNumber": 1329, "col_offset": 38, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1330, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1331, "col_offset": 36, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1334, "col_offset": 58, "nodeName": "training", "type": "Any"}, {"lineNumber": 1335, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1335, "col_offset": 68, "nodeName": "training", "type": "Any"}, {"lineNumber": 1337, "col_offset": 42, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1338, "col_offset": 46, "nodeName": "training", "type": "Any"}, {"lineNumber": 1339, "col_offset": 51, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1347, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1351, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1355, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1359, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1363, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1367, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1371, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1375, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1379, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1383, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1387, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1391, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1395, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1399, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1403, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1406, "col_offset": 27, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1407, "col_offset": 32, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1407, "col_offset": 54, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1408, "col_offset": 42, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1408, "col_offset": 64, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1409, "col_offset": 30, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1410, "col_offset": 40, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1410, "col_offset": 63, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1411, "col_offset": 43, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1411, "col_offset": 66, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1412, "col_offset": 38, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1412, "col_offset": 61, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1413, "col_offset": 40, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1413, "col_offset": 63, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1414, "col_offset": 43, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1414, "col_offset": 66, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1415, "col_offset": 38, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1415, "col_offset": 61, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1416, "col_offset": 42, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1416, "col_offset": 65, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 1417, "col_offset": 39, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1417, "col_offset": 61, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1418, "col_offset": 42, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1418, "col_offset": 64, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1419, "col_offset": 37, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1419, "col_offset": 59, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1420, "col_offset": 29, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1421, "col_offset": 39, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1422, "col_offset": 36, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1429, "col_offset": 31, "nodeName": "config", "type": "Any"}, {"lineNumber": 1430, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 1431, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 1506, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1508, "col_offset": 26, "nodeName": "activations", "type": "Any"}, {"lineNumber": 1509, "col_offset": 36, "nodeName": "activations", "type": "Any"}, {"lineNumber": 1512, "col_offset": 34, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1513, "col_offset": 37, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1514, "col_offset": 32, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1517, "col_offset": 34, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1518, "col_offset": 37, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1519, "col_offset": 32, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1521, "col_offset": 33, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1522, "col_offset": 36, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1523, "col_offset": 31, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1525, "col_offset": 31, "nodeName": "max", "type": "Callable"}, {"lineNumber": 1525, "col_offset": 39, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1526, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 1526, "col_offset": 49, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 1528, "col_offset": 27, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1528, "col_offset": 39, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1534, "col_offset": 22, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1536, "col_offset": 50, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1537, "col_offset": 50, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1538, "col_offset": 49, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1542, "col_offset": 24, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1543, "col_offset": 24, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1544, "col_offset": 23, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1547, "col_offset": 15, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1555, "col_offset": 16, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1555, "col_offset": 35, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1556, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1556, "col_offset": 24, "nodeName": "add_weight", "type": "Any"}, {"lineNumber": 1562, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1564, "col_offset": 24, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1565, "col_offset": 24, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1566, "col_offset": 24, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1567, "col_offset": 24, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1569, "col_offset": 34, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1570, "col_offset": 34, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1571, "col_offset": 34, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1572, "col_offset": 34, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1575, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1575, "col_offset": 26, "nodeName": "bias", "type": "Any"}, {"lineNumber": 1576, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1576, "col_offset": 26, "nodeName": "bias", "type": "Any"}, {"lineNumber": 1577, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1577, "col_offset": 26, "nodeName": "bias", "type": "Any"}, {"lineNumber": 1578, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1578, "col_offset": 26, "nodeName": "bias", "type": "Any"}, {"lineNumber": 1580, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1581, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1582, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1583, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1587, "col_offset": 15, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1588, "col_offset": 19, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 1599, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1602, "col_offset": 15, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1603, "col_offset": 19, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 1604, "col_offset": 19, "nodeName": "tile", "type": "Any"}, {"lineNumber": 1604, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1615, "col_offset": 12, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1626, "col_offset": 11, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1627, "col_offset": 19, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1628, "col_offset": 16, "nodeName": "inputs_i", "type": "Any"}, {"lineNumber": 1629, "col_offset": 16, "nodeName": "inputs_f", "type": "Any"}, {"lineNumber": 1630, "col_offset": 16, "nodeName": "inputs_c", "type": "Any"}, {"lineNumber": 1631, "col_offset": 16, "nodeName": "inputs_o", "type": "Any"}, {"lineNumber": 1633, "col_offset": 16, "nodeName": "inputs_i", "type": "Any"}, {"lineNumber": 1633, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1634, "col_offset": 16, "nodeName": "inputs_f", "type": "Any"}, {"lineNumber": 1634, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1635, "col_offset": 16, "nodeName": "inputs_c", "type": "Any"}, {"lineNumber": 1635, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1636, "col_offset": 16, "nodeName": "inputs_o", "type": "Any"}, {"lineNumber": 1636, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1637, "col_offset": 51, "nodeName": "bias_i", "type": "Any"}, {"lineNumber": 1638, "col_offset": 51, "nodeName": "bias_f", "type": "Any"}, {"lineNumber": 1639, "col_offset": 51, "nodeName": "bias_c", "type": "Any"}, {"lineNumber": 1640, "col_offset": 51, "nodeName": "bias_o", "type": "Any"}, {"lineNumber": 1642, "col_offset": 19, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 1643, "col_offset": 16, "nodeName": "h_tm1_i", "type": "Any"}, {"lineNumber": 1644, "col_offset": 16, "nodeName": "h_tm1_f", "type": "Any"}, {"lineNumber": 1645, "col_offset": 16, "nodeName": "h_tm1_c", "type": "Any"}, {"lineNumber": 1646, "col_offset": 16, "nodeName": "h_tm1_o", "type": "Any"}, {"lineNumber": 1648, "col_offset": 16, "nodeName": "h_tm1_i", "type": "Any"}, {"lineNumber": 1648, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1649, "col_offset": 16, "nodeName": "h_tm1_f", "type": "Any"}, {"lineNumber": 1649, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1650, "col_offset": 16, "nodeName": "h_tm1_c", "type": "Any"}, {"lineNumber": 1650, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1651, "col_offset": 16, "nodeName": "h_tm1_o", "type": "Any"}, {"lineNumber": 1651, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1652, "col_offset": 16, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1654, "col_offset": 16, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1658, "col_offset": 16, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1661, "col_offset": 20, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1662, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1663, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1663, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1663, "col_offset": 30, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 1664, "col_offset": 20, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 1665, "col_offset": 16, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1666, "col_offset": 17, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1666, "col_offset": 23, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1666, "col_offset": 30, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 1667, "col_offset": 15, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1668, "col_offset": 16, "nodeName": "z", "type": "Any"}, {"lineNumber": 1670, "col_offset": 17, "nodeName": "z", "type": "Any"}, {"lineNumber": 1671, "col_offset": 17, "nodeName": "z", "type": "Any"}, {"lineNumber": 1672, "col_offset": 17, "nodeName": "z", "type": "Any"}, {"lineNumber": 1673, "col_offset": 17, "nodeName": "z", "type": "Any"}, {"lineNumber": 1675, "col_offset": 16, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1675, "col_offset": 42, "nodeName": "z0", "type": "Any"}, {"lineNumber": 1676, "col_offset": 16, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1676, "col_offset": 42, "nodeName": "z1", "type": "Any"}, {"lineNumber": 1678, "col_offset": 16, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1678, "col_offset": 42, "nodeName": "z3", "type": "Any"}, {"lineNumber": 1680, "col_offset": 16, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1680, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 1681, "col_offset": 15, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1681, "col_offset": 30, "nodeName": "recurrent_dropout", "type": "Union[float, Any]"}, {"lineNumber": 1682, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 1683, "col_offset": 16, "nodeName": "_uses_learning_phase", "type": "bool"}, {"lineNumber": 1684, "col_offset": 19, "nodeName": "h", "type": "Any"}, {"lineNumber": 1684, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 1768, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1771, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 1779, "col_offset": 16, "nodeName": "dropout", "type": "float"}, {"lineNumber": 1780, "col_offset": 16, "nodeName": "recurrent_dropout", "type": "float"}, {"lineNumber": 1783, "col_offset": 35, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1784, "col_offset": 45, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1785, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1786, "col_offset": 43, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1787, "col_offset": 46, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1788, "col_offset": 41, "nodeName": "unit_forget_bias", "type": "Any"}, {"lineNumber": 1789, "col_offset": 41, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1790, "col_offset": 43, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1791, "col_offset": 46, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1792, "col_offset": 41, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1793, "col_offset": 42, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1794, "col_offset": 45, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1795, "col_offset": 40, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1796, "col_offset": 32, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1797, "col_offset": 42, "nodeName": "recurrent_dropout", "type": "Union[Any, float]"}, {"lineNumber": 1798, "col_offset": 39, "nodeName": "implementation", "type": "Any"}, {"lineNumber": 1799, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1800, "col_offset": 36, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1803, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1803, "col_offset": 58, "nodeName": "training", "type": "Any"}, {"lineNumber": 1804, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 1804, "col_offset": 68, "nodeName": "training", "type": "Any"}, {"lineNumber": 1806, "col_offset": 43, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1807, "col_offset": 47, "nodeName": "training", "type": "Any"}, {"lineNumber": 1808, "col_offset": 52, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1812, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1816, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1820, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1824, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1828, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1832, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1836, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1840, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1844, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1848, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1852, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1856, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1860, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1864, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1868, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1872, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1876, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 1879, "col_offset": 27, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1880, "col_offset": 32, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1880, "col_offset": 54, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1881, "col_offset": 42, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1881, "col_offset": 64, "nodeName": "recurrent_activation", "type": "Any"}, {"lineNumber": 1882, "col_offset": 30, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1883, "col_offset": 40, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1883, "col_offset": 63, "nodeName": "kernel_initializer", "type": "Any"}, {"lineNumber": 1884, "col_offset": 43, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1884, "col_offset": 66, "nodeName": "recurrent_initializer", "type": "Any"}, {"lineNumber": 1885, "col_offset": 38, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1885, "col_offset": 61, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1886, "col_offset": 38, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1887, "col_offset": 40, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1887, "col_offset": 63, "nodeName": "kernel_regularizer", "type": "Any"}, {"lineNumber": 1888, "col_offset": 43, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1888, "col_offset": 66, "nodeName": "recurrent_regularizer", "type": "Any"}, {"lineNumber": 1889, "col_offset": 38, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1889, "col_offset": 61, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1890, "col_offset": 42, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1890, "col_offset": 65, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 1891, "col_offset": 39, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1891, "col_offset": 61, "nodeName": "kernel_constraint", "type": "Any"}, {"lineNumber": 1892, "col_offset": 42, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1892, "col_offset": 64, "nodeName": "recurrent_constraint", "type": "Any"}, {"lineNumber": 1893, "col_offset": 37, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 1893, "col_offset": 59, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1894, "col_offset": 29, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1895, "col_offset": 39, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1896, "col_offset": 36, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1903, "col_offset": 31, "nodeName": "config", "type": "Any"}, {"lineNumber": 1904, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 1905, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "cell", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 32, "col_offset": 52, "nodeName": "cells", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "cell", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "cells", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "StackedRNNCells", "type": "Type[StackedRNNCells]"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "cell", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "cell", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "states", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "states", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "new_nested_states", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "build", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "cell", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "cells", "type": "List[Dict[str, Any]]"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "StackedRNNCells", "type": "Type[StackedRNNCells]"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "self", "type": "StackedRNNCells"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "cells", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "deserialize_layer", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "cell_config", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "cell", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "cell", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "trainable_weights", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "trainable_weights", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "cell", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "weights", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "weights", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "sw", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "w", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "weights", "type": "Any"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "weights", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "weights", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 177, "col_offset": 50, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 340, "col_offset": 14, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 340, "col_offset": 19, "nodeName": "self", "type": "RNN"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "self", "type": "RNN"}, {"lineNumber": 352, "col_offset": 35, "nodeName": "dim", "type": "Any"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "cell", "type": "Any"}, {"lineNumber": 363, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "_", "type": "int"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "self", "type": "RNN"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "self", "type": "RNN"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 381, "col_offset": 44, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 383, "col_offset": 28, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 386, "col_offset": 44, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 386, "col_offset": 60, "nodeName": "_", "type": "Any"}, {"lineNumber": 386, "col_offset": 65, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "output_shape", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 396, "col_offset": 35, "nodeName": "_", "type": "Any"}, {"lineNumber": 396, "col_offset": 40, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 397, "col_offset": 20, "nodeName": "output_mask", "type": "Optional[Any]"}, {"lineNumber": 407, "col_offset": 46, "nodeName": "batch_size", "type": "Optional[Any]"}, {"lineNumber": 407, "col_offset": 64, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 413, "col_offset": 51, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "self", "type": "GRU"}, {"lineNumber": 423, "col_offset": 24, "nodeName": "dim", "type": "Any"}, {"lineNumber": 423, "col_offset": 31, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "tile", "type": "Any"}, {"lineNumber": 425, "col_offset": 27, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 431, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 431, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 431, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 431, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 440, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Union[Any, List[Any]]]"}, {"lineNumber": 442, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 442, "col_offset": 48, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 447, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 447, "col_offset": 23, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 448, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 456, "col_offset": 30, "nodeName": "input_spec", "type": "List[Any]"}, {"lineNumber": 456, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 458, "col_offset": 30, "nodeName": "state_spec", "type": "Any"}, {"lineNumber": 458, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 459, "col_offset": 30, "nodeName": "state_spec", "type": "Any"}, {"lineNumber": 463, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 463, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 463, "col_offset": 37, "nodeName": "initial_state", "type": "Union[Any, List[Any]]"}, {"lineNumber": 466, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Union[Any, List[Any]]]"}, {"lineNumber": 473, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Union[Any, List[Any]]]"}, {"lineNumber": 484, "col_offset": 13, "nodeName": "self", "type": "GRU"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 485, "col_offset": 28, "nodeName": "states", "type": "Any"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 492, "col_offset": 37, "nodeName": "self", "type": "GRU"}, {"lineNumber": 512, "col_offset": 19, "nodeName": "self", "type": "GRU"}, {"lineNumber": 513, "col_offset": 19, "nodeName": "functools", "type": "module"}, {"lineNumber": 513, "col_offset": 37, "nodeName": "cell", "type": "Any"}, {"lineNumber": 513, "col_offset": 62, "nodeName": "training", "type": "Any"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "self", "type": "GRU"}, {"lineNumber": 519, "col_offset": 58, "nodeName": "self", "type": "GRU"}, {"lineNumber": 521, "col_offset": 52, "nodeName": "self", "type": "GRU"}, {"lineNumber": 525, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 525, "col_offset": 31, "nodeName": "states", "type": "Any"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "self", "type": "GRU"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 539, "col_offset": 30, "nodeName": "states", "type": "Any"}, {"lineNumber": 540, "col_offset": 26, "nodeName": "states", "type": "Any"}, {"lineNumber": 542, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 542, "col_offset": 30, "nodeName": "states", "type": "Any"}, {"lineNumber": 543, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 550, "col_offset": 21, "nodeName": "input_spec", "type": "List[Any]"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "self", "type": "RNN"}, {"lineNumber": 564, "col_offset": 23, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 568, "col_offset": 16, "nodeName": "self", "type": "RNN"}, {"lineNumber": 570, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 570, "col_offset": 23, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 578, "col_offset": 16, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 585, "col_offset": 16, "nodeName": "index", "type": "int"}, {"lineNumber": 585, "col_offset": 41, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 605, "col_offset": 22, "nodeName": "self", "type": "GRU"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "cell", "type": "Any"}, {"lineNumber": 608, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 608, "col_offset": 28, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 608, "col_offset": 33, "nodeName": "self", "type": "GRU"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 609, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 614, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 621, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 627, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 633, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 638, "col_offset": 26, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 639, "col_offset": 33, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 639, "col_offset": 65, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 640, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 640, "col_offset": 21, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 640, "col_offset": 26, "nodeName": "self", "type": "RNN"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 704, "col_offset": 14, "nodeName": "SimpleRNNCell", "type": "Type[SimpleRNNCell]"}, {"lineNumber": 704, "col_offset": 29, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 728, "col_offset": 62, "nodeName": "units", "type": "Any"}, {"lineNumber": 730, "col_offset": 50, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 731, "col_offset": 50, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 732, "col_offset": 49, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 734, "col_offset": 19, "nodeName": "units", "type": "Any"}, {"lineNumber": 734, "col_offset": 31, "nodeName": "units", "type": "Any"}, {"lineNumber": 736, "col_offset": 24, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 738, "col_offset": 23, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 740, "col_offset": 24, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 742, "col_offset": 52, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 743, "col_offset": 52, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 744, "col_offset": 51, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 751, "col_offset": 31, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 754, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 754, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 754, "col_offset": 39, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 756, "col_offset": 33, "nodeName": "K", "type": "Any"}, {"lineNumber": 759, "col_offset": 25, "nodeName": "training", "type": "Any"}, {"lineNumber": 765, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 765, "col_offset": 31, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 766, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 766, "col_offset": 36, "nodeName": "units", "type": "Any"}, {"lineNumber": 769, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 769, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 769, "col_offset": 39, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 771, "col_offset": 43, "nodeName": "K", "type": "Any"}, {"lineNumber": 774, "col_offset": 25, "nodeName": "training", "type": "Any"}, {"lineNumber": 784, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 784, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 784, "col_offset": 31, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 784, "col_offset": 40, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 786, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 786, "col_offset": 30, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 788, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 788, "col_offset": 30, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 792, "col_offset": 21, "nodeName": "K", "type": "Any"}, {"lineNumber": 792, "col_offset": 40, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 794, "col_offset": 21, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 797, "col_offset": 15, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 797, "col_offset": 30, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 799, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 871, "col_offset": 11, "nodeName": "K", "type": "Any"}, {"lineNumber": 873, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 896, "col_offset": 14, "nodeName": "SimpleRNN", "type": "Type[SimpleRNN]"}, {"lineNumber": 896, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 900, "col_offset": 8, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 902, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 902, "col_offset": 21, "nodeName": "SimpleRNN", "type": "Type[SimpleRNN]"}, {"lineNumber": 902, "col_offset": 32, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 965, "col_offset": 32, "nodeName": "activations", "type": "Any"}, {"lineNumber": 965, "col_offset": 54, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 967, "col_offset": 40, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 967, "col_offset": 63, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 968, "col_offset": 43, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 968, "col_offset": 66, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 969, "col_offset": 38, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 969, "col_offset": 61, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 970, "col_offset": 40, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 970, "col_offset": 63, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 971, "col_offset": 43, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 971, "col_offset": 66, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 972, "col_offset": 38, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 972, "col_offset": 61, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 973, "col_offset": 42, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 973, "col_offset": 65, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 974, "col_offset": 39, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 974, "col_offset": 61, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 975, "col_offset": 42, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 975, "col_offset": 64, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 976, "col_offset": 37, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 976, "col_offset": 59, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 979, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 979, "col_offset": 28, "nodeName": "SimpleRNN", "type": "Type[SimpleRNN]"}, {"lineNumber": 979, "col_offset": 39, "nodeName": "self", "type": "SimpleRNN"}, {"lineNumber": 981, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 981, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 986, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1057, "col_offset": 14, "nodeName": "GRUCell", "type": "Type[GRUCell]"}, {"lineNumber": 1057, "col_offset": 23, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1084, "col_offset": 45, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 1086, "col_offset": 50, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1087, "col_offset": 50, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1088, "col_offset": 49, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1090, "col_offset": 19, "nodeName": "units", "type": "Any"}, {"lineNumber": 1092, "col_offset": 24, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1093, "col_offset": 24, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1094, "col_offset": 23, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1097, "col_offset": 24, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1099, "col_offset": 52, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1100, "col_offset": 52, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1101, "col_offset": 51, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1105, "col_offset": 40, "nodeName": "units", "type": "Any"}, {"lineNumber": 1106, "col_offset": 60, "nodeName": "units", "type": "Any"}, {"lineNumber": 1107, "col_offset": 39, "nodeName": "units", "type": "Any"}, {"lineNumber": 1109, "col_offset": 56, "nodeName": "units", "type": "Any"}, {"lineNumber": 1115, "col_offset": 26, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1115, "col_offset": 37, "nodeName": "units", "type": "Any"}, {"lineNumber": 1116, "col_offset": 26, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1116, "col_offset": 36, "nodeName": "units", "type": "Any"}, {"lineNumber": 1117, "col_offset": 26, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1126, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 1126, "col_offset": 31, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 1129, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1129, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1129, "col_offset": 39, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1135, "col_offset": 20, "nodeName": "_", "type": "int"}, {"lineNumber": 1141, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 1141, "col_offset": 31, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1142, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 1142, "col_offset": 36, "nodeName": "units", "type": "Any"}, {"lineNumber": 1145, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1145, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1145, "col_offset": 39, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1151, "col_offset": 20, "nodeName": "_", "type": "int"}, {"lineNumber": 1164, "col_offset": 20, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1165, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1166, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1167, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1172, "col_offset": 18, "nodeName": "K", "type": "Any"}, {"lineNumber": 1172, "col_offset": 34, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1173, "col_offset": 18, "nodeName": "K", "type": "Any"}, {"lineNumber": 1173, "col_offset": 34, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1174, "col_offset": 18, "nodeName": "K", "type": "Any"}, {"lineNumber": 1174, "col_offset": 34, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1176, "col_offset": 22, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 1176, "col_offset": 33, "nodeName": "x_z", "type": "Any"}, {"lineNumber": 1176, "col_offset": 38, "nodeName": "bias_z", "type": "Any"}, {"lineNumber": 1177, "col_offset": 22, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 1177, "col_offset": 33, "nodeName": "x_r", "type": "Any"}, {"lineNumber": 1177, "col_offset": 38, "nodeName": "bias_r", "type": "Any"}, {"lineNumber": 1178, "col_offset": 22, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 1178, "col_offset": 33, "nodeName": "x_h", "type": "Any"}, {"lineNumber": 1178, "col_offset": 38, "nodeName": "bias_h", "type": "Any"}, {"lineNumber": 1180, "col_offset": 20, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1181, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1182, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1183, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1188, "col_offset": 16, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1188, "col_offset": 42, "nodeName": "x_z", "type": "Any"}, {"lineNumber": 1190, "col_offset": 16, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1190, "col_offset": 42, "nodeName": "x_r", "type": "Any"}, {"lineNumber": 1193, "col_offset": 17, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1193, "col_offset": 33, "nodeName": "x_h", "type": "Any"}, {"lineNumber": 1196, "col_offset": 20, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1197, "col_offset": 26, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1198, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 1198, "col_offset": 37, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1200, "col_offset": 27, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 1200, "col_offset": 38, "nodeName": "matrix_x", "type": "Any"}, {"lineNumber": 1200, "col_offset": 48, "nodeName": "bias", "type": "Any"}, {"lineNumber": 1201, "col_offset": 20, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1202, "col_offset": 25, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1203, "col_offset": 27, "nodeName": "K", "type": "Any"}, {"lineNumber": 1204, "col_offset": 33, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 1211, "col_offset": 16, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1211, "col_offset": 42, "nodeName": "x_z", "type": "Any"}, {"lineNumber": 1211, "col_offset": 48, "nodeName": "recurrent_z", "type": "Any"}, {"lineNumber": 1212, "col_offset": 16, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1212, "col_offset": 42, "nodeName": "x_r", "type": "Any"}, {"lineNumber": 1212, "col_offset": 48, "nodeName": "recurrent_r", "type": "Any"}, {"lineNumber": 1215, "col_offset": 26, "nodeName": "K", "type": "Any"}, {"lineNumber": 1215, "col_offset": 32, "nodeName": "r", "type": "Any"}, {"lineNumber": 1215, "col_offset": 36, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1216, "col_offset": 32, "nodeName": "recurrent_kernel", "type": "Any"}, {"lineNumber": 1217, "col_offset": 17, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1217, "col_offset": 33, "nodeName": "x_h", "type": "Any"}, {"lineNumber": 1217, "col_offset": 39, "nodeName": "recurrent_h", "type": "Any"}, {"lineNumber": 1218, "col_offset": 29, "nodeName": "z", "type": "Any"}, {"lineNumber": 1219, "col_offset": 15, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1219, "col_offset": 30, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1221, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 1300, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1303, "col_offset": 11, "nodeName": "K", "type": "Any"}, {"lineNumber": 1305, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1330, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1330, "col_offset": 14, "nodeName": "GRU", "type": "Type[GRU]"}, {"lineNumber": 1330, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1335, "col_offset": 8, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1336, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1336, "col_offset": 21, "nodeName": "GRU", "type": "Type[GRU]"}, {"lineNumber": 1336, "col_offset": 26, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1407, "col_offset": 32, "nodeName": "activations", "type": "Any"}, {"lineNumber": 1407, "col_offset": 54, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1408, "col_offset": 42, "nodeName": "activations", "type": "Any"}, {"lineNumber": 1408, "col_offset": 64, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1410, "col_offset": 40, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1410, "col_offset": 63, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1411, "col_offset": 43, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1411, "col_offset": 66, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1412, "col_offset": 38, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1412, "col_offset": 61, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1413, "col_offset": 40, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1413, "col_offset": 63, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1414, "col_offset": 43, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1414, "col_offset": 66, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1415, "col_offset": 38, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1415, "col_offset": 61, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1416, "col_offset": 42, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1416, "col_offset": 65, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1417, "col_offset": 39, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1417, "col_offset": 61, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1418, "col_offset": 42, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1418, "col_offset": 64, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1419, "col_offset": 37, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1419, "col_offset": 59, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1423, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1423, "col_offset": 28, "nodeName": "GRU", "type": "Type[GRU]"}, {"lineNumber": 1423, "col_offset": 33, "nodeName": "self", "type": "GRU"}, {"lineNumber": 1425, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1425, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1429, "col_offset": 42, "nodeName": "config", "type": "Any"}, {"lineNumber": 1506, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1506, "col_offset": 14, "nodeName": "LSTMCell", "type": "Type[LSTMCell]"}, {"lineNumber": 1506, "col_offset": 24, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1534, "col_offset": 45, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 1536, "col_offset": 50, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1537, "col_offset": 50, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1538, "col_offset": 49, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1540, "col_offset": 19, "nodeName": "units", "type": "Any"}, {"lineNumber": 1542, "col_offset": 24, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1543, "col_offset": 24, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1544, "col_offset": 23, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1555, "col_offset": 35, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1556, "col_offset": 24, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1558, "col_offset": 52, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1559, "col_offset": 52, "nodeName": "bias_regularizer", "type": "Any"}, {"lineNumber": 1560, "col_offset": 51, "nodeName": "bias_constraint", "type": "Any"}, {"lineNumber": 1564, "col_offset": 40, "nodeName": "units", "type": "Any"}, {"lineNumber": 1565, "col_offset": 39, "nodeName": "units", "type": "Any"}, {"lineNumber": 1569, "col_offset": 60, "nodeName": "units", "type": "Any"}, {"lineNumber": 1570, "col_offset": 59, "nodeName": "units", "type": "Any"}, {"lineNumber": 1575, "col_offset": 26, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1575, "col_offset": 37, "nodeName": "units", "type": "Any"}, {"lineNumber": 1576, "col_offset": 26, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1576, "col_offset": 36, "nodeName": "units", "type": "Any"}, {"lineNumber": 1577, "col_offset": 26, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1578, "col_offset": 26, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1588, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 1588, "col_offset": 31, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 1591, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1591, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1591, "col_offset": 39, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1597, "col_offset": 20, "nodeName": "_", "type": "int"}, {"lineNumber": 1603, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 1603, "col_offset": 31, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1604, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 1604, "col_offset": 36, "nodeName": "units", "type": "Any"}, {"lineNumber": 1607, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1607, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1607, "col_offset": 39, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 1613, "col_offset": 20, "nodeName": "_", "type": "int"}, {"lineNumber": 1627, "col_offset": 19, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1628, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1629, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1630, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1631, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1637, "col_offset": 18, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1637, "col_offset": 24, "nodeName": "inputs_i", "type": "Any"}, {"lineNumber": 1637, "col_offset": 34, "nodeName": "kernel_i", "type": "Any"}, {"lineNumber": 1637, "col_offset": 51, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1638, "col_offset": 18, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1638, "col_offset": 24, "nodeName": "inputs_f", "type": "Any"}, {"lineNumber": 1638, "col_offset": 34, "nodeName": "kernel_f", "type": "Any"}, {"lineNumber": 1638, "col_offset": 51, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1639, "col_offset": 18, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1639, "col_offset": 24, "nodeName": "inputs_c", "type": "Any"}, {"lineNumber": 1639, "col_offset": 34, "nodeName": "kernel_c", "type": "Any"}, {"lineNumber": 1639, "col_offset": 51, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1640, "col_offset": 18, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1640, "col_offset": 24, "nodeName": "inputs_o", "type": "Any"}, {"lineNumber": 1640, "col_offset": 34, "nodeName": "kernel_o", "type": "Any"}, {"lineNumber": 1640, "col_offset": 51, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1642, "col_offset": 19, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1643, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1644, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1645, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1646, "col_offset": 26, "nodeName": "h_tm1", "type": "Any"}, {"lineNumber": 1652, "col_offset": 16, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1652, "col_offset": 42, "nodeName": "x_i", "type": "Any"}, {"lineNumber": 1654, "col_offset": 16, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1654, "col_offset": 42, "nodeName": "x_f", "type": "Any"}, {"lineNumber": 1656, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 1656, "col_offset": 20, "nodeName": "c_tm1", "type": "Any"}, {"lineNumber": 1656, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 1658, "col_offset": 16, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1658, "col_offset": 42, "nodeName": "x_o", "type": "Any"}, {"lineNumber": 1661, "col_offset": 20, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1662, "col_offset": 26, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1663, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 1663, "col_offset": 30, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1664, "col_offset": 20, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1665, "col_offset": 25, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1666, "col_offset": 17, "nodeName": "K", "type": "Any"}, {"lineNumber": 1666, "col_offset": 30, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1668, "col_offset": 20, "nodeName": "bias_add", "type": "Any"}, {"lineNumber": 1668, "col_offset": 31, "nodeName": "z", "type": "Any"}, {"lineNumber": 1668, "col_offset": 34, "nodeName": "bias", "type": "Any"}, {"lineNumber": 1675, "col_offset": 16, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1676, "col_offset": 16, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1677, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 1677, "col_offset": 20, "nodeName": "c_tm1", "type": "Any"}, {"lineNumber": 1677, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 1678, "col_offset": 16, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1680, "col_offset": 16, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1681, "col_offset": 15, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1681, "col_offset": 30, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1683, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 1768, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1771, "col_offset": 11, "nodeName": "K", "type": "Any"}, {"lineNumber": 1773, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1799, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1799, "col_offset": 14, "nodeName": "LSTM", "type": "Type[LSTM]"}, {"lineNumber": 1799, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 1803, "col_offset": 8, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1804, "col_offset": 8, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1805, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1805, "col_offset": 21, "nodeName": "LSTM", "type": "Type[LSTM]"}, {"lineNumber": 1805, "col_offset": 27, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1880, "col_offset": 32, "nodeName": "activations", "type": "Any"}, {"lineNumber": 1880, "col_offset": 54, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1881, "col_offset": 42, "nodeName": "activations", "type": "Any"}, {"lineNumber": 1881, "col_offset": 64, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1883, "col_offset": 40, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1883, "col_offset": 63, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1884, "col_offset": 43, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1884, "col_offset": 66, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1885, "col_offset": 38, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1885, "col_offset": 61, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1887, "col_offset": 40, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1887, "col_offset": 63, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1888, "col_offset": 43, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1888, "col_offset": 66, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1889, "col_offset": 38, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1889, "col_offset": 61, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1890, "col_offset": 42, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 1890, "col_offset": 65, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1891, "col_offset": 39, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1891, "col_offset": 61, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1892, "col_offset": 42, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1892, "col_offset": 64, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1893, "col_offset": 37, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 1893, "col_offset": 59, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1897, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1897, "col_offset": 28, "nodeName": "LSTM", "type": "Type[LSTM]"}, {"lineNumber": 1897, "col_offset": 34, "nodeName": "self", "type": "LSTM"}, {"lineNumber": 1899, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1899, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1903, "col_offset": 42, "nodeName": "config", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "cell", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "state_size", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "cell", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "nested_states", "type": "List[Union[Any, List[Any]]]"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "states", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "nested_states", "type": "List[Union[Any, List[Any]]]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "cell", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 108, "col_offset": 58, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "cell", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "cell", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "num_param", "type": "int"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "cell", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "num_param", "type": "int"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 354, "col_offset": 53, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "cell", "type": "Any"}, {"lineNumber": 364, "col_offset": 34, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 364, "col_offset": 40, "nodeName": "num_states", "type": "int"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "self", "type": "RNN"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 386, "col_offset": 65, "nodeName": "self", "type": "RNN"}, {"lineNumber": 396, "col_offset": 40, "nodeName": "self", "type": "RNN"}, {"lineNumber": 413, "col_offset": 32, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "self", "type": "RNN"}, {"lineNumber": 423, "col_offset": 31, "nodeName": "cell", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "K", "type": "Any"}, {"lineNumber": 425, "col_offset": 46, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 440, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 440, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 466, "col_offset": 21, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 466, "col_offset": 27, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 466, "col_offset": 32, "nodeName": "self", "type": "RNN"}, {"lineNumber": 473, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 473, "col_offset": 30, "nodeName": "self", "type": "RNN"}, {"lineNumber": 485, "col_offset": 28, "nodeName": "self", "type": "GRU"}, {"lineNumber": 487, "col_offset": 28, "nodeName": "get_initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 487, "col_offset": 51, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 513, "col_offset": 37, "nodeName": "self", "type": "GRU"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "updates", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 539, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 539, "col_offset": 45, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 550, "col_offset": 21, "nodeName": "self", "type": "RNN"}, {"lineNumber": 564, "col_offset": 23, "nodeName": "self", "type": "RNN"}, {"lineNumber": 566, "col_offset": 35, "nodeName": "dim", "type": "Any"}, {"lineNumber": 566, "col_offset": 42, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 568, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 570, "col_offset": 23, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 571, "col_offset": 27, "nodeName": "dim", "type": "Any"}, {"lineNumber": 571, "col_offset": 34, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 571, "col_offset": 38, "nodeName": "states", "type": "Any"}, {"lineNumber": 571, "col_offset": 51, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "set_value", "type": "Any"}, {"lineNumber": 577, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 577, "col_offset": 30, "nodeName": "states", "type": "Any"}, {"lineNumber": 578, "col_offset": 26, "nodeName": "states", "type": "Any"}, {"lineNumber": 579, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 579, "col_offset": 19, "nodeName": "states", "type": "Union[Any, List[Any]]"}, {"lineNumber": 579, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 579, "col_offset": 34, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 580, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 585, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 585, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 585, "col_offset": 51, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 585, "col_offset": 55, "nodeName": "states", "type": "Union[Any, List[Any]]"}, {"lineNumber": 585, "col_offset": 63, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 586, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 586, "col_offset": 27, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 587, "col_offset": 20, "nodeName": "dim", "type": "Any"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "dim", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 589, "col_offset": 26, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 590, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "set_value", "type": "Any"}, {"lineNumber": 597, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 597, "col_offset": 35, "nodeName": "value", "type": "Any"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "self", "type": "GRU"}, {"lineNumber": 609, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 609, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 638, "col_offset": 26, "nodeName": "self", "type": "RNN"}, {"lineNumber": 728, "col_offset": 45, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 734, "col_offset": 19, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 734, "col_offset": 31, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 740, "col_offset": 47, "nodeName": "units", "type": "Any"}, {"lineNumber": 742, "col_offset": 52, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 743, "col_offset": 52, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 744, "col_offset": 51, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 751, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 751, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 754, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 754, "col_offset": 39, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 765, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 765, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 766, "col_offset": 36, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 769, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 769, "col_offset": 39, "nodeName": "self", "type": "SimpleRNNCell"}, {"lineNumber": 872, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 872, "col_offset": 45, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 872, "col_offset": 60, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 873, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 981, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 981, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 1084, "col_offset": 56, "nodeName": "units", "type": "Any"}, {"lineNumber": 1090, "col_offset": 19, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1090, "col_offset": 31, "nodeName": "units", "type": "Any"}, {"lineNumber": 1099, "col_offset": 52, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1100, "col_offset": 52, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1101, "col_offset": 51, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1105, "col_offset": 40, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1106, "col_offset": 60, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1107, "col_offset": 39, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1107, "col_offset": 51, "nodeName": "units", "type": "Any"}, {"lineNumber": 1109, "col_offset": 56, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1110, "col_offset": 56, "nodeName": "units", "type": "Any"}, {"lineNumber": 1111, "col_offset": 39, "nodeName": "units", "type": "Any"}, {"lineNumber": 1112, "col_offset": 59, "nodeName": "units", "type": "Any"}, {"lineNumber": 1115, "col_offset": 37, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1116, "col_offset": 36, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1116, "col_offset": 48, "nodeName": "units", "type": "Any"}, {"lineNumber": 1117, "col_offset": 36, "nodeName": "units", "type": "Any"}, {"lineNumber": 1126, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 1126, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1129, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 1129, "col_offset": 39, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1135, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1141, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 1141, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1142, "col_offset": 36, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1145, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 1145, "col_offset": 39, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1151, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1165, "col_offset": 36, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1166, "col_offset": 36, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1167, "col_offset": 36, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1176, "col_offset": 22, "nodeName": "K", "type": "Any"}, {"lineNumber": 1176, "col_offset": 38, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1177, "col_offset": 22, "nodeName": "K", "type": "Any"}, {"lineNumber": 1177, "col_offset": 38, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1178, "col_offset": 22, "nodeName": "K", "type": "Any"}, {"lineNumber": 1178, "col_offset": 38, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1181, "col_offset": 34, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1182, "col_offset": 34, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1183, "col_offset": 34, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1188, "col_offset": 48, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1188, "col_offset": 54, "nodeName": "h_tm1_z", "type": "Any"}, {"lineNumber": 1189, "col_offset": 54, "nodeName": "recurrent_kernel_z", "type": "Any"}, {"lineNumber": 1190, "col_offset": 48, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1190, "col_offset": 54, "nodeName": "h_tm1_r", "type": "Any"}, {"lineNumber": 1191, "col_offset": 54, "nodeName": "recurrent_kernel_r", "type": "Any"}, {"lineNumber": 1193, "col_offset": 39, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1194, "col_offset": 45, "nodeName": "recurrent_kernel_h", "type": "Any"}, {"lineNumber": 1200, "col_offset": 27, "nodeName": "K", "type": "Any"}, {"lineNumber": 1200, "col_offset": 48, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1204, "col_offset": 33, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1206, "col_offset": 31, "nodeName": "units", "type": "Any"}, {"lineNumber": 1207, "col_offset": 30, "nodeName": "units", "type": "Any"}, {"lineNumber": 1208, "col_offset": 43, "nodeName": "units", "type": "Any"}, {"lineNumber": 1209, "col_offset": 42, "nodeName": "units", "type": "Any"}, {"lineNumber": 1216, "col_offset": 32, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1304, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 1304, "col_offset": 45, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1304, "col_offset": 60, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 1305, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1425, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 1425, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 1534, "col_offset": 56, "nodeName": "units", "type": "Any"}, {"lineNumber": 1540, "col_offset": 19, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1540, "col_offset": 31, "nodeName": "units", "type": "Any"}, {"lineNumber": 1549, "col_offset": 27, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 1559, "col_offset": 52, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1560, "col_offset": 51, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1564, "col_offset": 40, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1565, "col_offset": 39, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1565, "col_offset": 51, "nodeName": "units", "type": "Any"}, {"lineNumber": 1566, "col_offset": 39, "nodeName": "units", "type": "Any"}, {"lineNumber": 1566, "col_offset": 55, "nodeName": "units", "type": "Any"}, {"lineNumber": 1567, "col_offset": 39, "nodeName": "units", "type": "Any"}, {"lineNumber": 1569, "col_offset": 60, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1570, "col_offset": 59, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1570, "col_offset": 71, "nodeName": "units", "type": "Any"}, {"lineNumber": 1571, "col_offset": 59, "nodeName": "units", "type": "Any"}, {"lineNumber": 1571, "col_offset": 75, "nodeName": "units", "type": "Any"}, {"lineNumber": 1572, "col_offset": 59, "nodeName": "units", "type": "Any"}, {"lineNumber": 1575, "col_offset": 37, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1576, "col_offset": 36, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1576, "col_offset": 48, "nodeName": "units", "type": "Any"}, {"lineNumber": 1577, "col_offset": 36, "nodeName": "units", "type": "Any"}, {"lineNumber": 1577, "col_offset": 52, "nodeName": "units", "type": "Any"}, {"lineNumber": 1578, "col_offset": 36, "nodeName": "units", "type": "Any"}, {"lineNumber": 1588, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 1588, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1591, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 1591, "col_offset": 39, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1597, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1603, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 1603, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1604, "col_offset": 36, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1607, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 1607, "col_offset": 39, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1613, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1628, "col_offset": 36, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1629, "col_offset": 36, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1630, "col_offset": 36, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1631, "col_offset": 36, "nodeName": "dp_mask", "type": "Any"}, {"lineNumber": 1637, "col_offset": 18, "nodeName": "K", "type": "Any"}, {"lineNumber": 1637, "col_offset": 34, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1638, "col_offset": 18, "nodeName": "K", "type": "Any"}, {"lineNumber": 1638, "col_offset": 34, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1639, "col_offset": 18, "nodeName": "K", "type": "Any"}, {"lineNumber": 1639, "col_offset": 34, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1640, "col_offset": 18, "nodeName": "K", "type": "Any"}, {"lineNumber": 1640, "col_offset": 34, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1643, "col_offset": 34, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1644, "col_offset": 34, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1645, "col_offset": 34, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1646, "col_offset": 34, "nodeName": "rec_dp_mask", "type": "Any"}, {"lineNumber": 1652, "col_offset": 48, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1652, "col_offset": 54, "nodeName": "h_tm1_i", "type": "Any"}, {"lineNumber": 1653, "col_offset": 54, "nodeName": "recurrent_kernel_i", "type": "Any"}, {"lineNumber": 1654, "col_offset": 48, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1654, "col_offset": 54, "nodeName": "h_tm1_f", "type": "Any"}, {"lineNumber": 1655, "col_offset": 54, "nodeName": "recurrent_kernel_f", "type": "Any"}, {"lineNumber": 1656, "col_offset": 32, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1658, "col_offset": 48, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1658, "col_offset": 54, "nodeName": "h_tm1_o", "type": "Any"}, {"lineNumber": 1659, "col_offset": 54, "nodeName": "recurrent_kernel_o", "type": "Any"}, {"lineNumber": 1668, "col_offset": 20, "nodeName": "K", "type": "Any"}, {"lineNumber": 1668, "col_offset": 34, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1670, "col_offset": 23, "nodeName": "units", "type": "Any"}, {"lineNumber": 1671, "col_offset": 22, "nodeName": "units", "type": "Any"}, {"lineNumber": 1677, "col_offset": 32, "nodeName": "activation", "type": "Any"}, {"lineNumber": 1677, "col_offset": 48, "nodeName": "z2", "type": "Any"}, {"lineNumber": 1772, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 1772, "col_offset": 45, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 1772, "col_offset": 60, "nodeName": "recurrent_dropout", "type": "Any"}, {"lineNumber": 1773, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1899, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 1899, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "states", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "cell", "type": "Any"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "cell", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "config", "type": "Dict[str, List[Dict[str, Any]]]"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "tuples", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "sw", "type": "Any"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "w", "type": "Any"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "self", "type": "RNN"}, {"lineNumber": 354, "col_offset": 53, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 423, "col_offset": 31, "nodeName": "self", "type": "GRU"}, {"lineNumber": 425, "col_offset": 46, "nodeName": "cell", "type": "Any"}, {"lineNumber": 487, "col_offset": 28, "nodeName": "self", "type": "GRU"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 526, "col_offset": 32, "nodeName": "states", "type": "Any"}, {"lineNumber": 526, "col_offset": 48, "nodeName": "states", "type": "Any"}, {"lineNumber": 566, "col_offset": 42, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 568, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 568, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 568, "col_offset": 52, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 570, "col_offset": 23, "nodeName": "self", "type": "RNN"}, {"lineNumber": 571, "col_offset": 38, "nodeName": "self", "type": "RNN"}, {"lineNumber": 571, "col_offset": 51, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 572, "col_offset": 20, "nodeName": "set_value", "type": "Any"}, {"lineNumber": 572, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 574, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 574, "col_offset": 28, "nodeName": "states", "type": "Any"}, {"lineNumber": 575, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 577, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 577, "col_offset": 45, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 579, "col_offset": 34, "nodeName": "self", "type": "RNN"}, {"lineNumber": 585, "col_offset": 63, "nodeName": "self", "type": "RNN"}, {"lineNumber": 586, "col_offset": 27, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 587, "col_offset": 26, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 589, "col_offset": 26, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 590, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 590, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 590, "col_offset": 47, "nodeName": "dim", "type": "Any"}, {"lineNumber": 591, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 609, "col_offset": 25, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 609, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 639, "col_offset": 33, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 639, "col_offset": 39, "nodeName": "RNN", "type": "Type[RNN]"}, {"lineNumber": 639, "col_offset": 44, "nodeName": "self", "type": "RNN"}, {"lineNumber": 872, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 981, "col_offset": 25, "nodeName": "base_config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 981, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 1090, "col_offset": 31, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1097, "col_offset": 47, "nodeName": "units", "type": "Any"}, {"lineNumber": 1107, "col_offset": 51, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1110, "col_offset": 56, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1111, "col_offset": 39, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1112, "col_offset": 59, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1116, "col_offset": 48, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1117, "col_offset": 36, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1188, "col_offset": 48, "nodeName": "K", "type": "Any"}, {"lineNumber": 1189, "col_offset": 54, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1190, "col_offset": 48, "nodeName": "K", "type": "Any"}, {"lineNumber": 1191, "col_offset": 54, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1193, "col_offset": 39, "nodeName": "K", "type": "Any"}, {"lineNumber": 1193, "col_offset": 45, "nodeName": "r", "type": "Any"}, {"lineNumber": 1193, "col_offset": 49, "nodeName": "h_tm1_h", "type": "Any"}, {"lineNumber": 1194, "col_offset": 45, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1206, "col_offset": 31, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1207, "col_offset": 30, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1207, "col_offset": 46, "nodeName": "units", "type": "Any"}, {"lineNumber": 1208, "col_offset": 43, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1209, "col_offset": 42, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1209, "col_offset": 58, "nodeName": "units", "type": "Any"}, {"lineNumber": 1214, "col_offset": 34, "nodeName": "units", "type": "Any"}, {"lineNumber": 1304, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1425, "col_offset": 25, "nodeName": "base_config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 1425, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 1540, "col_offset": 31, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1549, "col_offset": 27, "nodeName": "K", "type": "Any"}, {"lineNumber": 1556, "col_offset": 47, "nodeName": "units", "type": "Any"}, {"lineNumber": 1565, "col_offset": 51, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1566, "col_offset": 39, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1566, "col_offset": 55, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1567, "col_offset": 39, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1570, "col_offset": 71, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1571, "col_offset": 59, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1571, "col_offset": 75, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1572, "col_offset": 59, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1576, "col_offset": 48, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1577, "col_offset": 36, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1577, "col_offset": 52, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1578, "col_offset": 36, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1652, "col_offset": 48, "nodeName": "K", "type": "Any"}, {"lineNumber": 1653, "col_offset": 54, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1654, "col_offset": 48, "nodeName": "K", "type": "Any"}, {"lineNumber": 1655, "col_offset": 54, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1656, "col_offset": 32, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1656, "col_offset": 48, "nodeName": "x_c", "type": "Any"}, {"lineNumber": 1658, "col_offset": 48, "nodeName": "K", "type": "Any"}, {"lineNumber": 1659, "col_offset": 54, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1670, "col_offset": 23, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1671, "col_offset": 22, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1671, "col_offset": 38, "nodeName": "units", "type": "Any"}, {"lineNumber": 1672, "col_offset": 26, "nodeName": "units", "type": "Any"}, {"lineNumber": 1672, "col_offset": 42, "nodeName": "units", "type": "Any"}, {"lineNumber": 1673, "col_offset": 26, "nodeName": "units", "type": "Any"}, {"lineNumber": 1677, "col_offset": 32, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1772, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1899, "col_offset": 25, "nodeName": "base_config", "type": "Dict[str, Any]"}, {"lineNumber": 1899, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 49, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "cell", "type": "Any"}, {"lineNumber": 354, "col_offset": 53, "nodeName": "self", "type": "RNN"}, {"lineNumber": 425, "col_offset": 46, "nodeName": "self", "type": "GRU"}, {"lineNumber": 495, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 495, "col_offset": 37, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 526, "col_offset": 32, "nodeName": "self", "type": "GRU"}, {"lineNumber": 526, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 526, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 566, "col_offset": 42, "nodeName": "self", "type": "RNN"}, {"lineNumber": 568, "col_offset": 52, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 571, "col_offset": 51, "nodeName": "self", "type": "RNN"}, {"lineNumber": 572, "col_offset": 20, "nodeName": "K", "type": "Any"}, {"lineNumber": 572, "col_offset": 39, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 574, "col_offset": 28, "nodeName": "self", "type": "RNN"}, {"lineNumber": 575, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 575, "col_offset": 38, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 575, "col_offset": 50, "nodeName": "state_size", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 584, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 584, "col_offset": 37, "nodeName": "states", "type": "Union[Any, List[Any]]"}, {"lineNumber": 586, "col_offset": 27, "nodeName": "self", "type": "RNN"}, {"lineNumber": 587, "col_offset": 26, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 587, "col_offset": 47, "nodeName": "index", "type": "int"}, {"lineNumber": 589, "col_offset": 26, "nodeName": "self", "type": "RNN"}, {"lineNumber": 1204, "col_offset": 63, "nodeName": "units", "type": "Any"}, {"lineNumber": 1207, "col_offset": 46, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1209, "col_offset": 58, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1214, "col_offset": 34, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1216, "col_offset": 61, "nodeName": "units", "type": "Any"}, {"lineNumber": 1550, "col_offset": 24, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1552, "col_offset": 24, "nodeName": "bias_initializer", "type": "Any"}, {"lineNumber": 1656, "col_offset": 54, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1656, "col_offset": 60, "nodeName": "h_tm1_c", "type": "Any"}, {"lineNumber": 1657, "col_offset": 60, "nodeName": "recurrent_kernel_c", "type": "Any"}, {"lineNumber": 1671, "col_offset": 38, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1672, "col_offset": 26, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1672, "col_offset": 42, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1673, "col_offset": 26, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 62, "col_offset": 49, "nodeName": "cell", "type": "Any"}, {"lineNumber": 568, "col_offset": 52, "nodeName": "self", "type": "RNN"}, {"lineNumber": 572, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 572, "col_offset": 49, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 572, "col_offset": 61, "nodeName": "dim", "type": "Any"}, {"lineNumber": 575, "col_offset": 50, "nodeName": "cell", "type": "Union[StackedRNNCells, Any]"}, {"lineNumber": 587, "col_offset": 26, "nodeName": "self", "type": "RNN"}, {"lineNumber": 595, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 595, "col_offset": 60, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1204, "col_offset": 63, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1216, "col_offset": 61, "nodeName": "self", "type": "GRUCell"}, {"lineNumber": 1550, "col_offset": 24, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1550, "col_offset": 47, "nodeName": "units", "type": "Any"}, {"lineNumber": 1550, "col_offset": 62, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1550, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1551, "col_offset": 24, "nodeName": "Ones", "type": "Any"}, {"lineNumber": 1551, "col_offset": 45, "nodeName": "units", "type": "Any"}, {"lineNumber": 1551, "col_offset": 60, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1551, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1552, "col_offset": 24, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1552, "col_offset": 66, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 1552, "col_offset": 74, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1656, "col_offset": 54, "nodeName": "K", "type": "Any"}, {"lineNumber": 1657, "col_offset": 60, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 575, "col_offset": 50, "nodeName": "self", "type": "RNN"}, {"lineNumber": 595, "col_offset": 60, "nodeName": "value", "type": "Any"}, {"lineNumber": 1550, "col_offset": 47, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1551, "col_offset": 24, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 1551, "col_offset": 45, "nodeName": "self", "type": "LSTMCell"}, {"lineNumber": 1552, "col_offset": 47, "nodeName": "units", "type": "Any"}, {"lineNumber": 1552, "col_offset": 47, "nodeName": "self", "type": "LSTMCell"}]