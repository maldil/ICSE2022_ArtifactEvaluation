[{"lineNumber": 26, "col_offset": 0, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "test_supported", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 2, "nodeName": "test_unsupported", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 2, "nodeName": "test_mix_of_supported_and_unsupported", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 2, "nodeName": "details", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 5, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 30, "col_offset": 5, "nodeName": "compute_capability", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "details", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 140, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "device_name", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "compute_capability", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "should_warn", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "details_list", "type": "List[Dict[str, Union[str, Tuple[int, int]]]]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "details_list", "type": "List[nothing]"}, {"lineNumber": 141, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "details", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "details", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 71, "nodeName": "mock_warn", "type": "Any"}, {"lineNumber": 41, "col_offset": 68, "nodeName": "mock_info", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "_test_compat_check", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "details_list", "type": "List[Dict[str, Union[str, Tuple[int, int]]]]"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "_test_compat_check", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "details_list", "type": "List[Dict[str, Union[str, Tuple[int, int]]]]"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "_test_compat_check", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "details_list", "type": "List[Dict[str, Union[str, Tuple[int, int]]]]"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "_test_compat_check", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "details_list", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "_test_compat_check", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "details_list", "type": "List[Dict[str, Union[str, Tuple[int, int]]]]"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "_test_compat_check", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "details_list", "type": "List[Dict[str, Union[str, Tuple[int, int]]]]"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "_test_compat_check", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "details_list", "type": "List[nothing]"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "_test_compat_check", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "details_list", "type": "List[Dict[str, Union[str, Tuple[int, int]]]]"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "regex", "type": "Pattern[str]"}, {"lineNumber": 141, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "object", "type": "Any"}, {"lineNumber": 40, "col_offset": 45, "nodeName": "tf_logging", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "object", "type": "Any"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "tf_logging", "type": "Any"}, {"lineNumber": 42, "col_offset": 6, "nodeName": "_log_device_compatibility_check", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "policy_name", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "device_attr_list", "type": "Any"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "assertRegex", "type": "Any"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "expected_regex", "type": "Any"}, {"lineNumber": 46, "col_offset": 6, "nodeName": "assert_not_called", "type": "Any"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "assertRegex", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "expected_regex", "type": "Any"}, {"lineNumber": 49, "col_offset": 6, "nodeName": "assert_not_called", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 68, "col_offset": 67, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "device_details", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "patch", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "patch", "type": "Any"}, {"lineNumber": 42, "col_offset": 6, "nodeName": "device_compatibility_check", "type": "module"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 6, "nodeName": "mock_info", "type": "Any"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 6, "nodeName": "mock_warn", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "re", "type": "module"}, {"lineNumber": 68, "col_offset": 67, "nodeName": "re", "type": "module"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "re", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "re", "type": "module"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "re", "type": "module"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "re", "type": "module"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "re", "type": "module"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "re", "type": "module"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "mock", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "mock", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "test", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "test", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "mock_warn", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "mock_info", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "v1", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "v1", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "compat", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "compat", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "tf", "type": "Any"}]