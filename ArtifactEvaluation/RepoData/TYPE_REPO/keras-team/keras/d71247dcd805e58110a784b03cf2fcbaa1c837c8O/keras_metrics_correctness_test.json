[{"lineNumber": 34, "col_offset": 0, "nodeName": "get_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "custom_generator_multi_io", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 73, "col_offset": 2, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 2, "nodeName": "test_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 2, "nodeName": "test_fit_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 2, "nodeName": "test_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 2, "nodeName": "test_eval_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 2, "nodeName": "test_train_on_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 2, "nodeName": "test_train_on_batch_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 2, "nodeName": "test_test_on_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 2, "nodeName": "test_test_on_batch_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 2, "nodeName": "test_fit_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 2, "nodeName": "test_fit_generator_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 2, "nodeName": "test_eval_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 2, "nodeName": "test_eval_generator_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 350, "col_offset": 2, "nodeName": "_get_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 365, "col_offset": 2, "nodeName": "_custom_generator", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 434, "col_offset": 2, "nodeName": "test_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 446, "col_offset": 2, "nodeName": "test_fit_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 458, "col_offset": 2, "nodeName": "test_fit_with_class_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 470, "col_offset": 2, "nodeName": "test_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 475, "col_offset": 2, "nodeName": "test_eval_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 490, "col_offset": 2, "nodeName": "test_train_on_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 495, "col_offset": 2, "nodeName": "test_train_on_batch_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 501, "col_offset": 2, "nodeName": "test_train_on_batch_with_class_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 507, "col_offset": 2, "nodeName": "test_test_on_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 512, "col_offset": 2, "nodeName": "test_test_on_batch_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 518, "col_offset": 2, "nodeName": "test_fit_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 525, "col_offset": 2, "nodeName": "test_fit_generator_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 534, "col_offset": 2, "nodeName": "test_fit_generator_with_class_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 544, "col_offset": 2, "nodeName": "test_eval_generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 549, "col_offset": 2, "nodeName": "test_eval_generator_with_sample_weight", "type": "Callable[[Any], Any]"}, {"lineNumber": 564, "col_offset": 28, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 566, "col_offset": 2, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 574, "col_offset": 2, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 643, "col_offset": 2, "nodeName": "test_fit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 657, "col_offset": 2, "nodeName": "test_eval", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 668, "col_offset": 2, "nodeName": "test_train_on_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 682, "col_offset": 2, "nodeName": "test_test_on_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 695, "col_offset": 2, "nodeName": "test_fit_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 706, "col_offset": 2, "nodeName": "test_eval_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 2, "nodeName": "inp_1", "type": "Any"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "inp_2", "type": "Any"}, {"lineNumber": 37, "col_offset": 2, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "branch_a", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 2, "nodeName": "branch_b", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 2, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 50, "col_offset": 2, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "inputs", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "targets_1", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "targets_2", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "start", "type": "int"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 564, "col_offset": 28, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 716, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "Input", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "Input", "type": "Any"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "inp_1", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "out_1", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "inp_2", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "out_2", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "get_multi_io_model", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "branch_a", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "branch_b", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "end", "type": "int"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "x", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "y", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "sample_weights", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "end", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "wmse", "type": "str"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "expected_batch_result_with_weights", "type": "List[int]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "expected_batch_result", "type": "List[int]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "mse1", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 363, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "sample_weight", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "class_weight", "type": "Dict[int, int]"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "wmse", "type": "str"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "expected_batch_result_with_weights", "type": "List[float]"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "expected_batch_result", "type": "List[float]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "mse1", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "mse2", "type": "Any"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 572, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "expected_single_batch_result", "type": "List[int]"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "expected_values", "type": "List[int]"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "expected_values", "type": "List[int]"}, {"lineNumber": 717, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "layers", "type": "module"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "layers", "type": "module"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "layers", "type": "module"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "layers", "type": "module"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "layers", "type": "module"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "start", "type": "int"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "start", "type": "int"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "sw", "type": "Any"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "sw", "type": "None"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "get_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "fit", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "fit", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "fit", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 214, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "expected_batch_result", "type": "List[int]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "expected_batch_result_with_weights", "type": "List[int]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "expected_batch_result_with_weights_output_2", "type": "List[int]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "mse1", "type": "Any"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "mse2", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 256, "col_offset": 32, "nodeName": "expected_batch_result", "type": "List[int]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "expected_batch_result_with_weights", "type": "List[int]"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "expected_batch_result_with_weights_output_2", "type": "List[int]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "test_on_batch", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "expected_batch_result", "type": "List[int]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "test_on_batch", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "expected_batch_result_with_weights", "type": "List[int]"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "test_on_batch", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "expected_batch_result_with_weights_output_2", "type": "List[int]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "fit_generator", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 306, "col_offset": 14, "nodeName": "fit_generator", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 315, "col_offset": 14, "nodeName": "fit_generator", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 325, "col_offset": 18, "nodeName": "evaluate_generator", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "expected_batch_result", "type": "List[int]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "evaluate_generator", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 334, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 334, "col_offset": 37, "nodeName": "expected_batch_result_with_weights", "type": "List[int]"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "evaluate_generator", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "expected_batch_result_with_weights_output_2", "type": "List[int]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 352, "col_offset": 10, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "get_model_from_layers", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 374, "col_offset": 6, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 375, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 376, "col_offset": 6, "nodeName": "start", "type": "int"}, {"lineNumber": 376, "col_offset": 14, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 377, "col_offset": 6, "nodeName": "end", "type": "int"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 382, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 383, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "wmse", "type": "str"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "wmse", "type": "str"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "fit", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 443, "col_offset": 13, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 448, "col_offset": 14, "nodeName": "fit", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 460, "col_offset": 14, "nodeName": "fit", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 467, "col_offset": 13, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 467, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 472, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 472, "col_offset": 33, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 472, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 473, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 473, "col_offset": 37, "nodeName": "expected_batch_result", "type": "List[float]"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 477, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 478, "col_offset": 16, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 479, "col_offset": 37, "nodeName": "expected_batch_result_with_weights", "type": "List[float]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "mse1", "type": "Any"}, {"lineNumber": 488, "col_offset": 30, "nodeName": "mse2", "type": "Any"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 492, "col_offset": 34, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 492, "col_offset": 42, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 493, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 493, "col_offset": 32, "nodeName": "expected_batch_result", "type": "List[float]"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 497, "col_offset": 13, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 499, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "expected_batch_result_with_weights", "type": "List[float]"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 503, "col_offset": 13, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 504, "col_offset": 16, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 505, "col_offset": 32, "nodeName": "expected_batch_result_with_weights", "type": "List[float]"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 509, "col_offset": 13, "nodeName": "test_on_batch", "type": "Any"}, {"lineNumber": 509, "col_offset": 33, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 509, "col_offset": 41, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 510, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 510, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 510, "col_offset": 32, "nodeName": "expected_batch_result", "type": "List[float]"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 514, "col_offset": 13, "nodeName": "test_on_batch", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 515, "col_offset": 16, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 516, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 516, "col_offset": 32, "nodeName": "expected_batch_result_with_weights", "type": "List[float]"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 520, "col_offset": 14, "nodeName": "fit_generator", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 522, "col_offset": 13, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 522, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 527, "col_offset": 14, "nodeName": "fit_generator", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 531, "col_offset": 13, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 531, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 536, "col_offset": 14, "nodeName": "fit_generator", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 541, "col_offset": 13, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 541, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 546, "col_offset": 18, "nodeName": "evaluate_generator", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 547, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 547, "col_offset": 37, "nodeName": "expected_batch_result", "type": "List[float]"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "_get_model", "type": "Callable[[], Any]"}, {"lineNumber": 551, "col_offset": 18, "nodeName": "evaluate_generator", "type": "Any"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 553, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 553, "col_offset": 37, "nodeName": "expected_batch_result_with_weights", "type": "List[float]"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "get_multi_io_model", "type": "Callable[[], Any]"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "compile", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 576, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 577, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 578, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 579, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 580, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "sum_over_batch_size_fit_result", "type": "Dict[str, List[int]]"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "sum_over_batch_size_fit_result", "type": "Dict[str, List[int]]"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "sum_over_batch_size_fit_result", "type": "Dict[str, List[int]]"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "NONE", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "SUM", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "AUTO", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "SUM_OVER_BATCH_SIZE", "type": "Any"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 646, "col_offset": 14, "nodeName": "fit", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 654, "col_offset": 13, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 654, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 660, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 666, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 671, "col_offset": 13, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 677, "col_offset": 22, "nodeName": "expected_batch_result", "type": "Dict[Any, List[int]]"}, {"lineNumber": 678, "col_offset": 7, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 678, "col_offset": 20, "nodeName": "SUM", "type": "Any"}, {"lineNumber": 679, "col_offset": 6, "nodeName": "expected_values", "type": "List[int]"}, {"lineNumber": 679, "col_offset": 24, "nodeName": "expected_single_batch_result", "type": "List[int]"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 680, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 680, "col_offset": 32, "nodeName": "expected_values", "type": "List[int]"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 685, "col_offset": 13, "nodeName": "test_on_batch", "type": "Any"}, {"lineNumber": 690, "col_offset": 22, "nodeName": "expected_batch_result", "type": "Dict[Any, List[int]]"}, {"lineNumber": 691, "col_offset": 7, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 691, "col_offset": 20, "nodeName": "SUM", "type": "Any"}, {"lineNumber": 692, "col_offset": 6, "nodeName": "expected_values", "type": "List[int]"}, {"lineNumber": 692, "col_offset": 24, "nodeName": "expected_single_batch_result", "type": "List[int]"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 693, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 693, "col_offset": 32, "nodeName": "expected_values", "type": "List[int]"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 698, "col_offset": 14, "nodeName": "fit_generator", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 703, "col_offset": 13, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 703, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "_get_compiled_multi_io_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 709, "col_offset": 18, "nodeName": "evaluate_generator", "type": "Any"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 713, "col_offset": 24, "nodeName": "eval_result", "type": "Any"}, {"lineNumber": 717, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "inputs", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "inputs", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "targets_1", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "targets_2", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 62, "col_offset": 57, "nodeName": "sample_weights", "type": "Any"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "x", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "y", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "sw", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "wmse", "type": "str"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "wmse", "type": "str"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "wmse", "type": "str"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "wmse", "type": "str"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "wmse", "type": "str"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "wmse", "type": "str"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 43, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 52, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "expected_fit_result", "type": "Dict[str, List[int]]"}, {"lineNumber": 192, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 192, "col_offset": 48, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 52, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "expected_fit_result_with_weights", "type": "Dict[str, List[int]]"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 205, "col_offset": 48, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 52, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 22, "nodeName": "expected_fit_result_with_weights_output_2", "type": "Dict[str, List[int]]"}, {"lineNumber": 215, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 219, "col_offset": 34, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 42, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 52, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 61, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 52, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 61, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 52, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 61, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 43, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 53, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 62, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 53, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 62, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 43, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 53, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 62, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 42, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 52, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 61, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 282, "col_offset": 34, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 42, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 52, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 61, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 52, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 61, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "custom_generator_multi_io", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "expected_fit_result", "type": "Dict[str, List[int]]"}, {"lineNumber": 302, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 302, "col_offset": 48, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "custom_generator_multi_io", "type": "Callable[..., Any]"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "expected_fit_result_with_weights", "type": "Dict[str, List[int]]"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 312, "col_offset": 48, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 315, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "custom_generator_multi_io", "type": "Callable[..., Any]"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "expected_fit_result_with_weights_output_2", "type": "Dict[str, List[int]]"}, {"lineNumber": 321, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 321, "col_offset": 48, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 325, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 325, "col_offset": 43, "nodeName": "custom_generator_multi_io", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "custom_generator_multi_io", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "custom_generator_multi_io", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "layers", "type": "module"}, {"lineNumber": 352, "col_offset": 10, "nodeName": "layers", "type": "module"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 354, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 354, "col_offset": 52, "nodeName": "out", "type": "Any"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 377, "col_offset": 20, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 382, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 383, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "class_weight", "type": "Dict[int, int]"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "expected_fit_result", "type": "Dict[str, List[float]]"}, {"lineNumber": 444, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 444, "col_offset": 48, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 448, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "expected_fit_result_with_weights", "type": "Dict[str, List[float]]"}, {"lineNumber": 456, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 456, "col_offset": 48, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 460, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 463, "col_offset": 21, "nodeName": "class_weight", "type": "Dict[int, int]"}, {"lineNumber": 467, "col_offset": 22, "nodeName": "expected_fit_result_with_weights", "type": "Dict[str, List[float]]"}, {"lineNumber": 468, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 468, "col_offset": 48, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 472, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 472, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 472, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 477, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 52, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 479, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 486, "col_offset": 11, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 486, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 486, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 487, "col_offset": 11, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 487, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 487, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 492, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 492, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 493, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 497, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 498, "col_offset": 38, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 503, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 504, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 504, "col_offset": 37, "nodeName": "class_weight", "type": "Dict[int, int]"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 505, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 509, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 509, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 509, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 510, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 510, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 514, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 515, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 515, "col_offset": 38, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 516, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 520, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "_custom_generator", "type": "Callable[..., Any]"}, {"lineNumber": 522, "col_offset": 22, "nodeName": "expected_fit_result", "type": "Dict[str, List[float]]"}, {"lineNumber": 523, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 523, "col_offset": 48, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 527, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "_custom_generator", "type": "Callable[..., Any]"}, {"lineNumber": 531, "col_offset": 22, "nodeName": "expected_fit_result_with_weights", "type": "Dict[str, List[float]]"}, {"lineNumber": 532, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 532, "col_offset": 48, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 536, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "_custom_generator", "type": "Callable[..., Any]"}, {"lineNumber": 540, "col_offset": 21, "nodeName": "class_weight", "type": "Dict[int, int]"}, {"lineNumber": 541, "col_offset": 22, "nodeName": "expected_fit_result_with_weights", "type": "Dict[str, List[float]]"}, {"lineNumber": 542, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 542, "col_offset": 48, "nodeName": "value", "type": "List[float]"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 546, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 546, "col_offset": 43, "nodeName": "_custom_generator", "type": "Callable[..., Any]"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 547, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 551, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "_custom_generator", "type": "Callable[..., Any]"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 553, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 570, "col_offset": 13, "nodeName": "loss", "type": "Any"}, {"lineNumber": 576, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 577, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 578, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 579, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 580, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "ReductionV2", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "ReductionV2", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "ReductionV2", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "ReductionV2", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 646, "col_offset": 25, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 646, "col_offset": 33, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 646, "col_offset": 43, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 646, "col_offset": 52, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 655, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 655, "col_offset": 48, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 660, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 660, "col_offset": 34, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 660, "col_offset": 42, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 660, "col_offset": 52, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 660, "col_offset": 61, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 666, "col_offset": 37, "nodeName": "expected_batch_result", "type": "Dict[Any, List[int]]"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 671, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 671, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 671, "col_offset": 43, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 671, "col_offset": 53, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 671, "col_offset": 62, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 677, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 677, "col_offset": 49, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 678, "col_offset": 20, "nodeName": "ReductionV2", "type": "Any"}, {"lineNumber": 679, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 685, "col_offset": 34, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 685, "col_offset": 42, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 685, "col_offset": 52, "nodeName": "y1", "type": "numpy.ndarray"}, {"lineNumber": 685, "col_offset": 61, "nodeName": "y2", "type": "numpy.ndarray"}, {"lineNumber": 690, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 690, "col_offset": 49, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 691, "col_offset": 20, "nodeName": "ReductionV2", "type": "Any"}, {"lineNumber": 692, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 698, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "custom_generator_multi_io", "type": "Callable[..., Any]"}, {"lineNumber": 704, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 704, "col_offset": 48, "nodeName": "value", "type": "List[int]"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 709, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "custom_generator_multi_io", "type": "Callable[..., Any]"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 713, "col_offset": 37, "nodeName": "expected_batch_result", "type": "Dict[Any, List[int]]"}, {"lineNumber": 717, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "start", "type": "int"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "end", "type": "int"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "start", "type": "int"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "end", "type": "int"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "start", "type": "int"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "end", "type": "int"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "start", "type": "int"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "end", "type": "int"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "nest", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "TestMetricsCorrectnessMultiIO", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 219, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 248, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 248, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 248, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 50, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 263, "col_offset": 50, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 50, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 49, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 285, "col_offset": 49, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 292, "col_offset": 49, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 381, "col_offset": 10, "nodeName": "TestMetricsCorrectnessSingleIO", "type": "Any"}, {"lineNumber": 381, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 39, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 444, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 444, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 463, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 467, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 468, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 468, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 478, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 486, "col_offset": 46, "nodeName": "w", "type": "Any"}, {"lineNumber": 487, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 487, "col_offset": 46, "nodeName": "w", "type": "Any"}, {"lineNumber": 498, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 504, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 515, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 522, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 523, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 523, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 528, "col_offset": 45, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 531, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 532, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 532, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 540, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 541, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 542, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 542, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 546, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 552, "col_offset": 45, "nodeName": "sample_weight", "type": "numpy.ndarray"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 575, "col_offset": 10, "nodeName": "TestOutputLossMetrics", "type": "Any"}, {"lineNumber": 575, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "losses_utils", "type": "module"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "losses_utils", "type": "module"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "losses_utils", "type": "module"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "losses_utils", "type": "module"}, {"lineNumber": 645, "col_offset": 13, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 646, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 648, "col_offset": 40, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 649, "col_offset": 40, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 654, "col_offset": 22, "nodeName": "expected_fit_result", "type": "Dict[Any, Dict[str, List[int]]]"}, {"lineNumber": 655, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 655, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 659, "col_offset": 13, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 660, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 660, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 660, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 660, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 663, "col_offset": 49, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 664, "col_offset": 49, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 666, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 666, "col_offset": 64, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 670, "col_offset": 13, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 671, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 671, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 671, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 671, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 673, "col_offset": 50, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 674, "col_offset": 50, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 678, "col_offset": 20, "nodeName": "losses_utils", "type": "module"}, {"lineNumber": 684, "col_offset": 13, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 685, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 687, "col_offset": 49, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 688, "col_offset": 49, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 691, "col_offset": 20, "nodeName": "losses_utils", "type": "module"}, {"lineNumber": 697, "col_offset": 13, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 703, "col_offset": 22, "nodeName": "expected_fit_result", "type": "Dict[Any, Dict[str, List[int]]]"}, {"lineNumber": 704, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 704, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 708, "col_offset": 13, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 713, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 713, "col_offset": 64, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "w", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 192, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 57, "nodeName": "w", "type": "Any"}, {"lineNumber": 248, "col_offset": 60, "nodeName": "w", "type": "Any"}, {"lineNumber": 249, "col_offset": 57, "nodeName": "w", "type": "Any"}, {"lineNumber": 249, "col_offset": 60, "nodeName": "w", "type": "Any"}, {"lineNumber": 262, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 292, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 302, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 308, "col_offset": 50, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 312, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 317, "col_offset": 40, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 321, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 332, "col_offset": 28, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 50, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "MeanSquaredError", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 26, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 444, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 444, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 456, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 456, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 468, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 468, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 523, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 523, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 528, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 532, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 532, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 542, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 542, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 552, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 645, "col_offset": 13, "nodeName": "losses", "type": "module"}, {"lineNumber": 645, "col_offset": 47, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 648, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 649, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 654, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 654, "col_offset": 47, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 655, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 655, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 659, "col_offset": 13, "nodeName": "losses", "type": "module"}, {"lineNumber": 659, "col_offset": 47, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 663, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 664, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 670, "col_offset": 13, "nodeName": "losses", "type": "module"}, {"lineNumber": 670, "col_offset": 47, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 673, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 674, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 684, "col_offset": 13, "nodeName": "losses", "type": "module"}, {"lineNumber": 684, "col_offset": 47, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 687, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 688, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 697, "col_offset": 13, "nodeName": "losses", "type": "module"}, {"lineNumber": 697, "col_offset": 47, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 700, "col_offset": 28, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 700, "col_offset": 50, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 703, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 703, "col_offset": 47, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 704, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 704, "col_offset": 42, "nodeName": "key", "type": "str"}, {"lineNumber": 708, "col_offset": 13, "nodeName": "losses", "type": "module"}, {"lineNumber": 708, "col_offset": 47, "nodeName": "reduction", "type": "Any"}, {"lineNumber": 711, "col_offset": 28, "nodeName": "sample_weight_1", "type": "numpy.ndarray"}, {"lineNumber": 711, "col_offset": 50, "nodeName": "sample_weight_2", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "start", "type": "int"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "end", "type": "int"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "metrics", "type": "module"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 317, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "metrics", "type": "module"}, {"lineNumber": 378, "col_offset": 14, "nodeName": "start", "type": "int"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "end", "type": "int"}, {"lineNumber": 378, "col_offset": 28, "nodeName": "start", "type": "int"}, {"lineNumber": 378, "col_offset": 34, "nodeName": "end", "type": "int"}, {"lineNumber": 378, "col_offset": 48, "nodeName": "w", "type": "Any"}, {"lineNumber": 378, "col_offset": 63, "nodeName": "w", "type": "Any"}, {"lineNumber": 700, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 700, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 711, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 711, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 65, "nodeName": "start", "type": "int"}, {"lineNumber": 378, "col_offset": 71, "nodeName": "end", "type": "int"}]