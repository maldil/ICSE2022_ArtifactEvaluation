[{"lineNumber": 34, "col_offset": 0, "nodeName": "_get_layer_computation_test_cases", "type": "Callable[[], Any]"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "PreprocessingLayerTest", "type": "Type[keras.layers.preprocessing.preprocessing_test_utils.PreprocessingLayerTest]"}, {"lineNumber": 104, "col_offset": 2, "nodeName": "test_layer_computation", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 2, "nodeName": "crossed_test_cases", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "use_dataset", "type": "bool"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "crossed_test_cases", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "preprocessing_test_utils", "type": "module"}, {"lineNumber": 127, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "case", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "test_cases", "type": "Tuple[Dict[str, Union[numpy.ndarray, int, str]], Dict[str, Optional[Union[numpy.ndarray, str]]], Dict[str, Optional[Union[numpy.ndarray, str]]], Dict[str, Union[numpy.ndarray, int, str]], Dict[str, Union[numpy.ndarray, Tuple[int, int], str]]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[None, ...]"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "use_dataset", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 128, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "case", "type": "Any"}, {"lineNumber": 91, "col_offset": 9, "nodeName": "use_dataset", "type": "bool"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "use_dataset", "type": "bool"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "get_tpu_strategy", "type": "Any"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 119, "col_offset": 6, "nodeName": "layer", "type": "Any"}, {"lineNumber": 121, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "model", "type": "Any"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "output_data", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "output_data", "type": "Any"}, {"lineNumber": 128, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "float32", "type": "Any"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "float32", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "float32", "type": "Any"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "case", "type": "Any"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "case", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "batch", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "tpu_strategy_test_utils", "type": "module"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "scope", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "Input", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "Normalization", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "adapt_data", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "Model", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "predict", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "case", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "case", "type": "Any"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "crossed_test_cases", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "_", "type": "int"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "keras", "type": "module"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "input_shape", "type": "Tuple[None, ...]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "normalization", "type": "module"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "axis", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "layer", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "keras", "type": "module"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 36, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "case", "type": "Any"}, {"lineNumber": 107, "col_offset": 39, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "adapt_data", "type": "Any"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "from_tensor_slices", "type": "Any"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "tf", "type": "Any"}]