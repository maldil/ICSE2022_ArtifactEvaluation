[{"lineNumber": 27, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 32, "col_offset": 2, "nodeName": "assertAllCloseOrEqual", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "assert_extracted_output_equal", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "validate_accumulator_computation", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 2, "nodeName": "validate_accumulator_extract", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 2, "nodeName": "validate_accumulator_extract_and_restore", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 2, "nodeName": "validate_accumulator_serialize_and_deserialize", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 2, "nodeName": "validate_accumulator_uniqueness", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "assertAllCloseOrEqual", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "data_1", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "data_2", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "data_0", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "data_1", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "data_2", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "single_compute", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "acc", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "extracted_data", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "acc", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "extracted_data", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "restored_acc", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "acc", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "serialized_data", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "deserialized_data", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "acc", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "acc2", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "extract", "type": "Any"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "acc1", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "extract", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "acc2", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assertAllCloseOrEqual", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "data_1", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "data_2", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "compute", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "merge", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "single_compute", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "all_merge", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "merge", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "all_merge", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "unordered_all_merge", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "merge", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "all_merge", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "hierarchical_merge", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "compute", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "data_0", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "all_merge", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "nested_compute", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "merge", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "all_merge", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "mixed_compute", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "merge", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "all_merge", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "single_merge", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "all_merge", "type": "Any"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "compute", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "extract", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "acc", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "assertAllCloseOrEqual", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "extracted_data", "type": "Any"}, {"lineNumber": 144, "col_offset": 10, "nodeName": "compute", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "extract", "type": "Any"}, {"lineNumber": 145, "col_offset": 38, "nodeName": "acc", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "restore", "type": "Any"}, {"lineNumber": 146, "col_offset": 36, "nodeName": "extracted_data", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "assert_extracted_output_equal", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 147, "col_offset": 49, "nodeName": "acc", "type": "Any"}, {"lineNumber": 147, "col_offset": 54, "nodeName": "restored_acc", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "assertAllCloseOrEqual", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 153, "col_offset": 10, "nodeName": "compute", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "acc", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "deserialize", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "serialized_data", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "acc", "type": "Any"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "deserialized_data", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "deserialized_data", "type": "Any"}, {"lineNumber": 161, "col_offset": 10, "nodeName": "compute", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "compute", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "acc", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "acc2", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "compare_accumulators", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "acc", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "acc2", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "a", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "msg", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "compute", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "data_1", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 144, "col_offset": 10, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "extract", "type": "Any"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "restored_acc", "type": "Any"}, {"lineNumber": 153, "col_offset": 10, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 161, "col_offset": 10, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "msg", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "a_value", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "b_value", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "a", "type": "Any"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "data_0", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "data_1", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "data_2", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "data_1", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "data_2", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "data_0", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "data_1", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "merge", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "compute", "type": "Any"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "data_2", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "data_0", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "data_1", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "merge", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "compute", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "data_1", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertAllCloseOrEqual", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "a_value", "type": "Any"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "b_value", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "collections_abc", "type": "Any"}, {"lineNumber": 41, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "key", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "a_value", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "b_value", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "error_message", "type": "Optional[str]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "compute", "type": "Any"}, {"lineNumber": 112, "col_offset": 50, "nodeName": "data_2", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "compute", "type": "Any"}, {"lineNumber": 122, "col_offset": 50, "nodeName": "data_2", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "msg", "type": "Any"}, {"lineNumber": 41, "col_offset": 6, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 44, "col_offset": 54, "nodeName": "msg", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertAllCloseOrEqual", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "a_value", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "b_value", "type": "Any"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "error_message", "type": "Optional[str]"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "compute", "type": "Any"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "data_2", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "compute", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "data_0", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "compute", "type": "Any"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "data_0", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "msg", "type": "Any"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "key", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "issubdtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "number", "type": "Any"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "msg", "type": "Any"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "self", "type": "PreprocessingLayerTest"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "msg", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "combiner", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "a", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "np", "type": "module"}]