[{"lineNumber": 32, "col_offset": 20, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 2, "nodeName": "call", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 2, "nodeName": "get_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 2, "nodeName": "compute_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 110, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 2, "nodeName": "call", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 2, "nodeName": "get_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 2, "nodeName": "compute_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 169, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 2, "nodeName": "_get_noise_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 2, "nodeName": "call", "type": "Callable[..., Any]"}, {"lineNumber": 205, "col_offset": 2, "nodeName": "get_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 2, "nodeName": "compute_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "rate", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "rate", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "rate", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "rate", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "seed", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "noised", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "rate", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "rate", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "rate", "type": "Any"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "rate", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "K", "type": "module"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "training", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "noised", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 177, "col_offset": 72, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "_get_noise_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "rate", "type": "Any"}, {"lineNumber": 183, "col_offset": 61, "nodeName": "seed", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "scale", "type": "float"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "in_train_phase", "type": "Any"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "dropped_inputs", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 46, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "GaussianNoise", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "GaussianNoise", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "GaussianDropout", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "K", "type": "module"}, {"lineNumber": 126, "col_offset": 55, "nodeName": "training", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "GaussianDropout", "type": "Any"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "AlphaDropout", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "v1", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "scale", "type": "float"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 189, "col_offset": 54, "nodeName": "rate", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "cast", "type": "Any"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "rate", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "K", "type": "module"}, {"lineNumber": 202, "col_offset": 63, "nodeName": "training", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "AlphaDropout", "type": "Any"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "K", "type": "module"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "rate", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "compat", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "alpha", "type": "float"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "noise_shape", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 197, "col_offset": 32, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 208, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "rate", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "K", "type": "module"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "K", "type": "module"}, {"lineNumber": 189, "col_offset": 47, "nodeName": "seed", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "rate", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "a", "type": "Any"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "kept_idx", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 208, "col_offset": 49, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "v1", "type": "Any"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "rate", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "compat", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "v1", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "alpha_p", "type": "float"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "compat", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "tf", "type": "Any"}]