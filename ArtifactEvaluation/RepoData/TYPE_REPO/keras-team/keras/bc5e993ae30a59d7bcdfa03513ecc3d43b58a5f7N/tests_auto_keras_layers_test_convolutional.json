[{"lineNumber": 9, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 172, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "filter_length", "type": "int"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "weight", "type": "Optional[List[Any]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "stride", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "weights_in", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "weight", "type": "Optional[List[Any]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "pool_size", "type": "Tuple[int, int]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "train", "type": "bool"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "config", "type": "Dict[str, str]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "length", "type": "int"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "length_row", "type": "int"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "weights_in", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "train", "type": "bool"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "config", "type": "Dict[str, str]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "weights_in", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "train", "type": "bool"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "config", "type": "Dict[str, str]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "input", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, str]]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "layer", "type": "keras.layers.convolutional.UpSample1D"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "train", "type": "bool"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "config", "type": "Dict[str, str]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "length_col", "type": "int"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "config", "type": "Dict[str, str]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 20, "col_offset": 47, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "MaxPooling1D", "type": "Type[keras.layers.convolutional.MaxPooling1D]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "layer", "type": "keras.layers.convolutional.MaxPooling1D"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "input", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "get_config", "type": "Callable[[], Dict[str, str]]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 73, "col_offset": 72, "nodeName": "ones", "type": "Any"}, {"lineNumber": 73, "col_offset": 80, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 75, "col_offset": 63, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 109, "col_offset": 63, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "MaxPooling2D", "type": "Type[keras.layers.convolutional.MaxPooling2D]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "layer", "type": "keras.layers.convolutional.MaxPooling2D"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "input", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "get_config", "type": "Callable[[], Dict[str, str]]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 126, "col_offset": 49, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 126, "col_offset": 63, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "K", "type": "module"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 143, "col_offset": 47, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "UpSample1D", "type": "Type[keras.layers.convolutional.UpSample1D]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "layer", "type": "keras.layers.convolutional.UpSample1D"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "input", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "get_config", "type": "Callable[[], Dict[str, str]]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 159, "col_offset": 63, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "layer", "type": "keras.layers.convolutional.UpSample2D"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "train", "type": "bool"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "get_config", "type": "Callable[[], Dict[str, str]]"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 31, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 17, "col_offset": 42, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 17, "col_offset": 53, "nodeName": "filter_length", "type": "int"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "W_regularizer", "type": "Optional[str]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 55, "col_offset": 54, "nodeName": "stride", "type": "int"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "K", "type": "module"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "layer", "type": "keras.layers.convolutional.MaxPooling1D"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 73, "col_offset": 62, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 73, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "W_regularizer", "type": "Optional[str]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 111, "col_offset": 55, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 113, "col_offset": 57, "nodeName": "pool_size", "type": "Tuple[int, int]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "K", "type": "module"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "layer", "type": "keras.layers.convolutional.MaxPooling2D"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "K", "type": "module"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "get_output", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "train", "type": "bool"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 145, "col_offset": 52, "nodeName": "length", "type": "int"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "K", "type": "module"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "layer", "type": "keras.layers.convolutional.UpSample1D"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "UpSample2D", "type": "Type[keras.layers.convolutional.UpSample2D]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "layer", "type": "keras.layers.convolutional.UpSample2D"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "input", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "layer", "type": "keras.layers.convolutional.UpSample2D"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "b_regularizer", "type": "Optional[str]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "get_output", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "train", "type": "bool"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "b_regularizer", "type": "Optional[str]"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "get_output", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "train", "type": "bool"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "K", "type": "module"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "get_output", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 46, "nodeName": "train", "type": "bool"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "length", "type": "int"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "nb_steps", "type": "int"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "K", "type": "module"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 24, "col_offset": 49, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "act_regularizer", "type": "Optional[str]"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "train", "type": "bool"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "config", "type": "Dict[str, None]"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "layer", "type": "keras.layers.convolutional.MaxPooling1D"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "act_regularizer", "type": "Optional[str]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "layer", "type": "keras.layers.convolutional.MaxPooling2D"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "layer", "type": "keras.layers.convolutional.UpSample1D"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 163, "col_offset": 55, "nodeName": "length_row", "type": "int"}, {"lineNumber": 163, "col_offset": 67, "nodeName": "length_col", "type": "int"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "K", "type": "module"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "get_output", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 50, "nodeName": "train", "type": "bool"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "length_row", "type": "int"}, {"lineNumber": 167, "col_offset": 56, "nodeName": "input_nb_row", "type": "int"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "length_col", "type": "int"}, {"lineNumber": 168, "col_offset": 56, "nodeName": "input_nb_col", "type": "int"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "layer", "type": "keras.layers.convolutional.Convolution1D"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 53, "nodeName": "input", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "get_config", "type": "Callable[[], Dict[str, None]]"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "input", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "train", "type": "bool"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "config", "type": "Dict[str, Tuple[Any, ...]]"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "offset", "type": "int"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "offset", "type": "int"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "layer", "type": "keras.layers.convolutional.UpSample2D"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "out", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "out", "type": "Any"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "Convolution1D", "type": "Type[keras.layers.convolutional.Convolution1D]"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "filter_length", "type": "int"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "K", "type": "module"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "layer", "type": "keras.layers.convolutional.Convolution1D"}, {"lineNumber": 84, "col_offset": 40, "nodeName": "Convolution2D", "type": "Type[keras.layers.convolutional.Convolution2D]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "nb_filter", "type": "int"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "nb_row", "type": "int"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "nb_col", "type": "int"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "layer", "type": "keras.layers.convolutional.Convolution2D"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "input", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "get_config", "type": "Callable[[], Dict[str, Tuple[Any, ...]]]"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "weight", "type": "Optional[List[Any]]"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "W_regularizer", "type": "Any"}, {"lineNumber": 34, "col_offset": 50, "nodeName": "b_regularizer", "type": "Any"}, {"lineNumber": 35, "col_offset": 57, "nodeName": "act_regularizer", "type": "Any"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "K", "type": "module"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "get_output", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "train", "type": "bool"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "subsample_length", "type": "int"}, {"lineNumber": 84, "col_offset": 40, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "weight", "type": "Optional[List[Any]]"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "W_regularizer", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "b_regularizer", "type": "Any"}, {"lineNumber": 90, "col_offset": 57, "nodeName": "act_regularizer", "type": "Any"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "K", "type": "module"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "layer", "type": "keras.layers.convolutional.Convolution2D"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "layer", "type": "keras.layers.convolutional.Convolution1D"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "input", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "out", "type": "Any"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "K", "type": "module"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "get_output", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 66, "nodeName": "train", "type": "bool"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "border_mode", "type": "str"}, {"lineNumber": 97, "col_offset": 65, "nodeName": "subsample", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "input", "type": "Any"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "out", "type": "Any"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "layer", "type": "keras.layers.convolutional.Convolution2D"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 98, "col_offset": 64, "nodeName": "shape", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 98, "col_offset": 64, "nodeName": "input", "type": "Any"}]