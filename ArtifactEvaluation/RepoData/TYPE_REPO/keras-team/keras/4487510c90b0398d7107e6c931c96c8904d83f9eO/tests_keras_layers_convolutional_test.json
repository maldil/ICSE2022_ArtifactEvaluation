[{"lineNumber": 19, "col_offset": 0, "nodeName": "test_conv_1d", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "test_maxpooling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "test_averagepooling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_convolution_2d", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "test_conv2d_transpose", "type": "Callable[[], Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "test_globalpooling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "test_globalpooling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 220, "col_offset": 0, "nodeName": "test_globalpooling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 0, "nodeName": "test_maxpooling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 0, "nodeName": "test_averagepooling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 0, "nodeName": "test_convolution_3d", "type": "Callable[[], Any]"}, {"lineNumber": 307, "col_offset": 0, "nodeName": "test_maxpooling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 324, "col_offset": 0, "nodeName": "test_averagepooling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 341, "col_offset": 0, "nodeName": "test_zero_padding_1d", "type": "Callable[[], Any]"}, {"lineNumber": 378, "col_offset": 0, "nodeName": "test_zero_padding_2d", "type": "Callable[[], Any]"}, {"lineNumber": 440, "col_offset": 0, "nodeName": "test_zero_padding_3d", "type": "Callable[[], Any]"}, {"lineNumber": 468, "col_offset": 0, "nodeName": "test_upsampling_1d", "type": "Callable[[], Any]"}, {"lineNumber": 475, "col_offset": 0, "nodeName": "test_upsampling_2d", "type": "Callable[[], Any]"}, {"lineNumber": 521, "col_offset": 0, "nodeName": "test_upsampling_3d", "type": "Callable[[], Any]"}, {"lineNumber": 574, "col_offset": 0, "nodeName": "test_cropping_1d", "type": "Callable[[], Any]"}, {"lineNumber": 586, "col_offset": 0, "nodeName": "test_cropping_2d", "type": "Callable[[], Any]"}, {"lineNumber": 644, "col_offset": 0, "nodeName": "test_cropping_3d", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "steps", "type": "int"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "stride", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "num_row", "type": "int"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "num_col", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "num_row", "type": "int"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "num_col", "type": "int"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "batch_size", "type": "Optional[int]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "num_row", "type": "int"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "num_col", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "pool_size", "type": "Tuple[int, int]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "filters", "type": "int"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "padding", "type": "str"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "input", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 525, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "time_length", "type": "int"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 704, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 3, "nodeName": "backend", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "strides", "type": "int"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "Conv1D", "type": "Type[keras.layers.convolutional.Conv1D]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "stride", "type": "int"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "Conv2D", "type": "Type[keras.layers.convolutional.Conv2D]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "padding", "type": "str"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "_convolution_paddings", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "GlobalMaxPooling1D", "type": "Type[keras.layers.pooling.GlobalMaxPooling1D]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "GlobalAveragePooling1D", "type": "Type[keras.layers.pooling.GlobalAveragePooling1D]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "GlobalMaxPooling2D", "type": "Type[keras.layers.pooling.GlobalMaxPooling2D]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "GlobalMaxPooling2D", "type": "Type[keras.layers.pooling.GlobalMaxPooling2D]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "GlobalAveragePooling2D", "type": "Type[keras.layers.pooling.GlobalAveragePooling2D]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "GlobalAveragePooling2D", "type": "Type[keras.layers.pooling.GlobalAveragePooling2D]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "GlobalMaxPooling3D", "type": "Type[keras.layers.pooling.GlobalMaxPooling3D]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "GlobalMaxPooling3D", "type": "Type[keras.layers.pooling.GlobalMaxPooling3D]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "GlobalAveragePooling3D", "type": "Type[keras.layers.pooling.GlobalAveragePooling3D]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "GlobalAveragePooling3D", "type": "Type[keras.layers.pooling.GlobalAveragePooling3D]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "AveragePooling2D", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "AveragePooling2D", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "AveragePooling2D", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "MaxPooling3D", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "MaxPooling3D", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "AveragePooling3D", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "AveragePooling3D", "type": "Any"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 346, "col_offset": 26, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 346, "col_offset": 37, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 360, "col_offset": 13, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "ZeroPadding1D", "type": "Type[keras.layers.convolutional.ZeroPadding1D]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 368, "col_offset": 13, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 369, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "get_config", "type": "Callable[[], Dict[str, Tuple[Any, ...]]]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 447, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "ZeroPadding3D", "type": "Type[keras.layers.convolutional.ZeroPadding3D]"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "ZeroPadding3D", "type": "Type[keras.layers.convolutional.ZeroPadding3D]"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 459, "col_offset": 13, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 460, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "UpSampling1D", "type": "Type[keras.layers.convolutional.UpSampling1D]"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "length_row", "type": "int"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 579, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 579, "col_offset": 28, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 579, "col_offset": 41, "nodeName": "time_length", "type": "int"}, {"lineNumber": 579, "col_offset": 54, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "Cropping1D", "type": "Type[keras.layers.convolutional.Cropping1D]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 13, "col_offset": 3, "nodeName": "K", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "AveragePooling1D", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "multiplier", "type": "int"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "pooling", "type": "module"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding1D"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 386, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 19, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 400, "col_offset": 17, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 402, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "ZeroPadding2D", "type": "Type[keras.layers.convolutional.ZeroPadding2D]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 417, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 418, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 425, "col_offset": 16, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 447, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 447, "col_offset": 22, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 448, "col_offset": 21, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 448, "col_offset": 37, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 448, "col_offset": 53, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 454, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding3D"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 459, "col_offset": 19, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 459, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 460, "col_offset": 16, "nodeName": "K", "type": "module"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 465, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 483, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 491, "col_offset": 19, "nodeName": "UpSampling2D", "type": "Type[keras.layers.convolutional.UpSampling2D]"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "length_col", "type": "int"}, {"lineNumber": 529, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "UpSampling3D", "type": "Type[keras.layers.convolutional.UpSampling3D]"}, {"lineNumber": 544, "col_offset": 16, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 579, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 583, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 594, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "Cropping2D", "type": "Type[keras.layers.convolutional.Cropping2D]"}, {"lineNumber": 607, "col_offset": 16, "nodeName": "Cropping2D", "type": "Type[keras.layers.convolutional.Cropping2D]"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 610, "col_offset": 17, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 611, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 611, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 613, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 623, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 623, "col_offset": 35, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 626, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 635, "col_offset": 16, "nodeName": "Cropping2D", "type": "Type[keras.layers.convolutional.Cropping2D]"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 637, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 638, "col_offset": 17, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 639, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 639, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 641, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 641, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 653, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 661, "col_offset": 19, "nodeName": "Cropping3D", "type": "Type[keras.layers.convolutional.Cropping3D]"}, {"lineNumber": 666, "col_offset": 16, "nodeName": "Cropping3D", "type": "Type[keras.layers.convolutional.Cropping3D]"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 669, "col_offset": 17, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 670, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 670, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 672, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 684, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 684, "col_offset": 35, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 687, "col_offset": 11, "nodeName": "data_format", "type": "str"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "Cropping3D", "type": "Type[keras.layers.convolutional.Cropping3D]"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 698, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 699, "col_offset": 17, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 700, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 702, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 702, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 705, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "Conv1D", "type": "Type[keras.layers.convolutional.Conv1D]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "Conv1D", "type": "Type[keras.layers.convolutional.Conv1D]"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "filters", "type": "int"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "padding", "type": "str"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "steps", "type": "int"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "MaxPooling1D", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "Conv2D", "type": "Type[keras.layers.convolutional.Conv2D]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "Conv2D", "type": "Type[keras.layers.convolutional.Conv2D]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "filters", "type": "int"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "padding", "type": "str"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "num_row", "type": "int"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "num_col", "type": "int"}, {"lineNumber": 118, "col_offset": 59, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "Convolution3D", "type": "Type[keras.layers.convolutional.Conv3D]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "Convolution3D", "type": "Type[keras.layers.convolutional.Conv3D]"}, {"lineNumber": 314, "col_offset": 36, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 320, "col_offset": 36, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 331, "col_offset": 36, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 337, "col_offset": 36, "nodeName": "pool_size", "type": "Tuple[int, int, int]"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 363, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 371, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 26, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 385, "col_offset": 39, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 385, "col_offset": 54, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 385, "col_offset": 69, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 386, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 386, "col_offset": 26, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 386, "col_offset": 39, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 386, "col_offset": 51, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 386, "col_offset": 66, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 392, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 398, "col_offset": 56, "nodeName": "data_format", "type": "str"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 400, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "data_format", "type": "str"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 414, "col_offset": 56, "nodeName": "data_format", "type": "str"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.ZeroPadding2D"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 428, "col_offset": 13, "nodeName": "data_format", "type": "str"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 454, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 459, "col_offset": 19, "nodeName": "K", "type": "module"}, {"lineNumber": 462, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 464, "col_offset": 24, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 484, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 484, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 484, "col_offset": 61, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 485, "col_offset": 36, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 487, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 487, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 487, "col_offset": 49, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 487, "col_offset": 64, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 488, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 491, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 493, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 501, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 530, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 531, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 532, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 532, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 532, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 534, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 535, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 535, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 535, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 536, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 541, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 545, "col_offset": 20, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 579, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 583, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 595, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 595, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 595, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 596, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 596, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 598, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 598, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 599, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 599, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 600, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 605, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 607, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 607, "col_offset": 50, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 608, "col_offset": 53, "nodeName": "data_format", "type": "str"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 610, "col_offset": 23, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 610, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 611, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 614, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 619, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 627, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 627, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 627, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 628, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 628, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 630, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 631, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 631, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 632, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 635, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 635, "col_offset": 50, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 636, "col_offset": 53, "nodeName": "data_format", "type": "str"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping2D"}, {"lineNumber": 637, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 638, "col_offset": 23, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 638, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 639, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 654, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 654, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 655, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 655, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 655, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 657, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 657, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 658, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 658, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 659, "col_offset": 36, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 659, "col_offset": 52, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 661, "col_offset": 19, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 664, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 666, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 666, "col_offset": 50, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 667, "col_offset": 53, "nodeName": "data_format", "type": "str"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 669, "col_offset": 23, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 669, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 670, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 673, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 679, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 688, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 688, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 688, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 689, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 689, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 689, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 691, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 691, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 692, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 692, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 693, "col_offset": 36, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 693, "col_offset": 52, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 696, "col_offset": 50, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 697, "col_offset": 53, "nodeName": "data_format", "type": "str"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "layer", "type": "keras.layers.convolutional.Cropping3D"}, {"lineNumber": 698, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 699, "col_offset": 23, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 699, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "K", "type": "module"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "padding", "type": "str"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "strides", "type": "int"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "stride", "type": "int"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "padding", "type": "str"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "Deconvolution2D", "type": "Type[keras.layers.convolutional.Conv2DTranspose]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "Deconvolution2D", "type": "Type[keras.layers.convolutional.Conv2DTranspose]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "SeparableConv2D", "type": "Type[keras.layers.convolutional.SeparableConv2D]"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "layer_test", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "SeparableConv2D", "type": "Type[keras.layers.convolutional.SeparableConv2D]"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "pool_size", "type": "Tuple[int, int]"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "padding", "type": "str"}, {"lineNumber": 280, "col_offset": 37, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 390, "col_offset": 61, "nodeName": "data_format", "type": "str"}, {"lineNumber": 391, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 393, "col_offset": 71, "nodeName": "data_format", "type": "str"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "K", "type": "module"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "K", "type": "module"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 427, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 487, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 492, "col_offset": 58, "nodeName": "data_format", "type": "str"}, {"lineNumber": 493, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 497, "col_offset": 24, "nodeName": "UpSampling2D", "type": "Type[keras.layers.convolutional.UpSampling2D]"}, {"lineNumber": 500, "col_offset": 16, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 501, "col_offset": 25, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling2D"}, {"lineNumber": 502, "col_offset": 28, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 502, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 503, "col_offset": 19, "nodeName": "data_format", "type": "str"}, {"lineNumber": 511, "col_offset": 19, "nodeName": "data_format", "type": "str"}, {"lineNumber": 512, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 513, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 515, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 516, "col_offset": 20, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 518, "col_offset": 43, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 540, "col_offset": 61, "nodeName": "data_format", "type": "str"}, {"lineNumber": 541, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 550, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 551, "col_offset": 20, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 595, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 598, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 603, "col_offset": 39, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 604, "col_offset": 42, "nodeName": "data_format", "type": "str"}, {"lineNumber": 605, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 610, "col_offset": 23, "nodeName": "K", "type": "module"}, {"lineNumber": 627, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 638, "col_offset": 23, "nodeName": "K", "type": "module"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 657, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 662, "col_offset": 39, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 663, "col_offset": 42, "nodeName": "data_format", "type": "str"}, {"lineNumber": 664, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 669, "col_offset": 23, "nodeName": "K", "type": "module"}, {"lineNumber": 688, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 691, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 699, "col_offset": 23, "nodeName": "K", "type": "module"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 33, "col_offset": 46, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "strides", "type": "int"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "steps", "type": "int"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "strides", "type": "int"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "steps", "type": "int"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "stride", "type": "int"}, {"lineNumber": 65, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 98, "col_offset": 61, "nodeName": "num_row", "type": "int"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "num_col", "type": "int"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "num_row", "type": "int"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "num_col", "type": "int"}, {"lineNumber": 110, "col_offset": 67, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "padding", "type": "str"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "padding", "type": "str"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 286, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 287, "col_offset": 42, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 288, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 289, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 289, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 289, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 290, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "filters", "type": "int"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "padding", "type": "str"}, {"lineNumber": 301, "col_offset": 42, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 302, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 303, "col_offset": 36, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 303, "col_offset": 52, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 303, "col_offset": 68, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 304, "col_offset": 36, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "offset", "type": "int"}, {"lineNumber": 371, "col_offset": 37, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 373, "col_offset": 37, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 404, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 405, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 420, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 422, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 424, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 432, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 437, "col_offset": 28, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 462, "col_offset": 37, "nodeName": "offset", "type": "int"}, {"lineNumber": 463, "col_offset": 40, "nodeName": "offset", "type": "int"}, {"lineNumber": 464, "col_offset": 43, "nodeName": "offset", "type": "int"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 487, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 24, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "data_format", "type": "str"}, {"lineNumber": 500, "col_offset": 16, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling2D"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 501, "col_offset": 31, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 501, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 502, "col_offset": 28, "nodeName": "K", "type": "module"}, {"lineNumber": 512, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 512, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 512, "col_offset": 53, "nodeName": "length_row", "type": "int"}, {"lineNumber": 513, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 513, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 513, "col_offset": 59, "nodeName": "length_col", "type": "int"}, {"lineNumber": 515, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 515, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 515, "col_offset": 53, "nodeName": "length_row", "type": "int"}, {"lineNumber": 516, "col_offset": 35, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 516, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 516, "col_offset": 59, "nodeName": "length_col", "type": "int"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 28, "nodeName": "UpSampling3D", "type": "Type[keras.layers.convolutional.UpSampling3D]"}, {"lineNumber": 549, "col_offset": 20, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 549, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 550, "col_offset": 29, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling3D"}, {"lineNumber": 551, "col_offset": 32, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 551, "col_offset": 39, "nodeName": "output", "type": "Any"}, {"lineNumber": 552, "col_offset": 23, "nodeName": "data_format", "type": "str"}, {"lineNumber": 562, "col_offset": 23, "nodeName": "data_format", "type": "str"}, {"lineNumber": 563, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 564, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 565, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 567, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 568, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 569, "col_offset": 24, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 571, "col_offset": 36, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 571, "col_offset": 47, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 595, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 598, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 627, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 657, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 688, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 691, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "filters", "type": "int"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "padding", "type": "str"}, {"lineNumber": 138, "col_offset": 46, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "num_row", "type": "int"}, {"lineNumber": 140, "col_offset": 62, "nodeName": "num_col", "type": "int"}, {"lineNumber": 140, "col_offset": 71, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "filters", "type": "int"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "padding", "type": "str"}, {"lineNumber": 153, "col_offset": 46, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 154, "col_offset": 53, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 154, "col_offset": 65, "nodeName": "num_row", "type": "int"}, {"lineNumber": 154, "col_offset": 74, "nodeName": "num_col", "type": "int"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "filters", "type": "int"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "padding", "type": "str"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 178, "col_offset": 55, "nodeName": "multiplier", "type": "int"}, {"lineNumber": 179, "col_offset": 40, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 179, "col_offset": 53, "nodeName": "num_row", "type": "int"}, {"lineNumber": 179, "col_offset": 62, "nodeName": "num_col", "type": "int"}, {"lineNumber": 179, "col_offset": 71, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "filters", "type": "int"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "padding", "type": "str"}, {"lineNumber": 191, "col_offset": 46, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 192, "col_offset": 55, "nodeName": "multiplier", "type": "int"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 193, "col_offset": 53, "nodeName": "num_row", "type": "int"}, {"lineNumber": 193, "col_offset": 62, "nodeName": "num_col", "type": "int"}, {"lineNumber": 193, "col_offset": 71, "nodeName": "stack_size", "type": "int"}, {"lineNumber": 409, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 410, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 430, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 432, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 434, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 436, "col_offset": 32, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 498, "col_offset": 26, "nodeName": "length_row", "type": "int"}, {"lineNumber": 498, "col_offset": 38, "nodeName": "length_col", "type": "int"}, {"lineNumber": 501, "col_offset": 31, "nodeName": "K", "type": "module"}, {"lineNumber": 504, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 504, "col_offset": 49, "nodeName": "length_row", "type": "int"}, {"lineNumber": 504, "col_offset": 62, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 505, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 505, "col_offset": 49, "nodeName": "length_col", "type": "int"}, {"lineNumber": 505, "col_offset": 62, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 507, "col_offset": 49, "nodeName": "length_row", "type": "int"}, {"lineNumber": 507, "col_offset": 62, "nodeName": "input_num_row", "type": "int"}, {"lineNumber": 508, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 508, "col_offset": 49, "nodeName": "length_col", "type": "int"}, {"lineNumber": 508, "col_offset": 62, "nodeName": "input_num_col", "type": "int"}, {"lineNumber": 512, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 513, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 515, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 516, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 28, "nodeName": "convolutional", "type": "module"}, {"lineNumber": 548, "col_offset": 36, "nodeName": "data_format", "type": "str"}, {"lineNumber": 549, "col_offset": 20, "nodeName": "layer", "type": "keras.layers.convolutional.UpSampling3D"}, {"lineNumber": 549, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 550, "col_offset": 35, "nodeName": "variable", "type": "Callable[..., Any]"}, {"lineNumber": 550, "col_offset": 46, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 551, "col_offset": 32, "nodeName": "K", "type": "module"}, {"lineNumber": 563, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 563, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 563, "col_offset": 57, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 564, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 564, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 564, "col_offset": 63, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 565, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 565, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 565, "col_offset": 63, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 567, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 567, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 567, "col_offset": 57, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 568, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 568, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 568, "col_offset": 63, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 569, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 569, "col_offset": 49, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 569, "col_offset": 63, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 404, "col_offset": 45, "nodeName": "offset", "type": "int"}, {"lineNumber": 405, "col_offset": 48, "nodeName": "offset", "type": "int"}, {"lineNumber": 420, "col_offset": 45, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 422, "col_offset": 45, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 424, "col_offset": 48, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 426, "col_offset": 48, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 504, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 505, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 508, "col_offset": 27, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 547, "col_offset": 30, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 547, "col_offset": 43, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 547, "col_offset": 56, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 550, "col_offset": 35, "nodeName": "K", "type": "module"}, {"lineNumber": 553, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 553, "col_offset": 53, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 553, "col_offset": 67, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 554, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 554, "col_offset": 53, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 554, "col_offset": 67, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 555, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 555, "col_offset": 53, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 555, "col_offset": 67, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 557, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 557, "col_offset": 53, "nodeName": "length_dim1", "type": "int"}, {"lineNumber": 557, "col_offset": 67, "nodeName": "input_len_dim1", "type": "int"}, {"lineNumber": 558, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 558, "col_offset": 53, "nodeName": "length_dim2", "type": "int"}, {"lineNumber": 558, "col_offset": 67, "nodeName": "input_len_dim2", "type": "int"}, {"lineNumber": 559, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 559, "col_offset": 53, "nodeName": "length_dim3", "type": "int"}, {"lineNumber": 559, "col_offset": 67, "nodeName": "input_len_dim3", "type": "int"}, {"lineNumber": 563, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 564, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 565, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 567, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 569, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 616, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 617, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 620, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 621, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 675, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 676, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 677, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 680, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 681, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 682, "col_offset": 34, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 409, "col_offset": 48, "nodeName": "offset", "type": "int"}, {"lineNumber": 410, "col_offset": 51, "nodeName": "offset", "type": "int"}, {"lineNumber": 430, "col_offset": 48, "nodeName": "top_offset", "type": "int"}, {"lineNumber": 432, "col_offset": 48, "nodeName": "bottom_offset", "type": "int"}, {"lineNumber": 434, "col_offset": 51, "nodeName": "left_offset", "type": "int"}, {"lineNumber": 436, "col_offset": 51, "nodeName": "right_offset", "type": "int"}, {"lineNumber": 553, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 554, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 555, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 557, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 558, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 559, "col_offset": 31, "nodeName": "np_output", "type": "Any"}, {"lineNumber": 616, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 617, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 620, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 621, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 675, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 676, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 677, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 680, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 681, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 682, "col_offset": 51, "nodeName": "cropping", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}]