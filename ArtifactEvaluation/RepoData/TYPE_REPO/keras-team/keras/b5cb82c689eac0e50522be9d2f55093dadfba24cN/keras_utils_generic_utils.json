[{"lineNumber": 14, "col_offset": 0, "nodeName": "to_list", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "unpack_singleton", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "object_list_uid", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "is_all_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "slice_arrays", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "transpose_shape", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 0, "nodeName": "check_for_unexpected_keys", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "has_arg", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "object_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "iterable", "type": "Union[Any, List[Any]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "element", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "iterable", "type": "Union[Any, List[Any]]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "unknown", "type": "Set[Any]"}, {"lineNumber": 158, "col_offset": 7, "nodeName": "unknown", "type": "Set[Any]"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "allow_tuple", "type": "bool"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "to_list", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "object_list", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "to_list", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "iterable_or_element", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "target_format", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "new_values", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "new_values", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "new_values", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "new_values", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "difference", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 178, "col_offset": 7, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "element", "type": "Any"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "target_format", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 178, "col_offset": 7, "nodeName": "sys", "type": "module"}, {"lineNumber": 183, "col_offset": 9, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "parameter", "type": "Optional[inspect.Parameter]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "object_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "start", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "start", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "new_values", "type": "Any"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 183, "col_offset": 9, "nodeName": "sys", "type": "module"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "fn", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "parameter", "type": "Optional[inspect.Parameter]"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "accept_all", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "kind", "type": "inspect._ParameterKind"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "start", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "start", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "start", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "spatial_axes", "type": "Any"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "spatial_axes", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "keys", "type": "Any"}, {"lineNumber": 160, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 160, "col_offset": 64, "nodeName": "unknown", "type": "Set[Any]"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "inspect", "type": "module"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "parameter", "type": "Optional[inspect.Parameter]"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "POSITIONAL_OR_KEYWORD", "type": "Any"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "KEYWORD_ONLY", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 93, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 66, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "start", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "target_format", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "input_dict", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "values", "type": "Callable"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "Parameter", "type": "Type[inspect.Parameter]"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "Parameter", "type": "Type[inspect.Parameter]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "start", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "start", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "start", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "stop", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "kind", "type": "inspect._ParameterKind"}, {"lineNumber": 195, "col_offset": 37, "nodeName": "VAR_KEYWORD", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "inspect", "type": "module"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "inspect", "type": "module"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "start", "type": "Any"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "start", "type": "Any"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "stop", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 195, "col_offset": 37, "nodeName": "Parameter", "type": "Type[inspect.Parameter]"}, {"lineNumber": 195, "col_offset": 37, "nodeName": "inspect", "type": "module"}]