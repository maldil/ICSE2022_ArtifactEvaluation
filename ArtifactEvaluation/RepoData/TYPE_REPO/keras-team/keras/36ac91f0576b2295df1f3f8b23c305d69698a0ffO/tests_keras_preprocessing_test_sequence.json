[{"lineNumber": 11, "col_offset": 0, "nodeName": "test_pad_sequences", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "test_pad_sequences_vector", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_make_sampling_table", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "test_skipgrams", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "couple", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "couples", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "couple", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "couples", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "l", "type": "Union[int, List[int]]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "labels", "type": "List[Union[int, List[int]]]"}, {"lineNumber": 85, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "pad_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "pad_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "pad_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "pad_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "pad_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "a", "type": "List[List[int]]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "pad_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "a", "type": "List[List[List[int]]]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pad_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "a", "type": "List[List[List[int]]]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "pad_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "a", "type": "List[List[List[int]]]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "pad_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "a", "type": "List[List[List[int]]]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "pad_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "a", "type": "List[List[List[int]]]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "make_sampling_table", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "couples", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "labels", "type": "List[Union[int, List[int]]]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "skipgrams", "type": "Callable[..., Tuple[List[Any], List[Union[int, List[int]]]]]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "skipgrams", "type": "Callable[..., Tuple[List[Any], List[Union[int, List[int]]]]]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "l", "type": "Union[int, List[int]]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "couple", "type": "Any"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "couple", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "couple", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "couple", "type": "Any"}]