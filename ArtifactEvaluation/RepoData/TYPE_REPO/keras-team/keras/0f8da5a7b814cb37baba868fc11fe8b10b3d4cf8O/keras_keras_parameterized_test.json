[{"lineNumber": 32, "col_offset": 29, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 551, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "model_types", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "l", "type": "List[Tuple[str, str, Any]]"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 434, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "TestCase", "type": "Type[keras.keras_parameterized.TestCase]"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 552, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "testBody_functional", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "testBody_subclass", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "testBody_sequential", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "_is_graph_network", "type": "nothing"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "_is_graph_network", "type": "nothing"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assertNotIsInstance", "type": "Any"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "assertNotIsInstance", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "testBody_0_functional", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "testBody_0_subclass", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "testBody_0_sequential", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "testBody_1_functional", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "testBody_1_subclass", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "testBody_1_sequential", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "model_types", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "model_types", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "_is_graph_network", "type": "nothing"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "_is_graph_network", "type": "nothing"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assertNotIsInstance", "type": "Any"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "assertNotIsInstance", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 116, "col_offset": 9, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "model_types", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 141, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "_is_graph_network", "type": "nothing"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "_is_graph_network", "type": "nothing"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "assertNotIsInstance", "type": "Any"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "assertNotIsInstance", "type": "Any"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 157, "col_offset": 10, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 178, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 180, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 182, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "_is_graph_network", "type": "nothing"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "assertNotIsInstance", "type": "Any"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "testBody_v2_eager", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "testBody_v2_function", "type": "Any"}, {"lineNumber": 228, "col_offset": 6, "nodeName": "ts", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 239, "col_offset": 6, "nodeName": "ts", "type": "Any"}, {"lineNumber": 240, "col_offset": 6, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "testBody_0_v2_eager", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "testBody_0_v2_function", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "testBody_1_v2_eager", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "testBody_1_v2_function", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, str, Any]]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "expected_combinations", "type": "Union[Set[Tuple[str, str, bool]], Set[Any]]"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 289, "col_offset": 10, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, str, Any]]"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 309, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 311, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 313, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "e", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "testBody_v2_eager_functional", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "testBody_v2_function_functional", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "testBody_v2_eager_sequential", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "testBody_v2_function_sequential", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "testBody_v2_eager_subclass", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "testBody_v2_function_subclass", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 370, "col_offset": 9, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 370, "col_offset": 28, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 371, "col_offset": 10, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 374, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "testBody_functional_v2_eager", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "testBody_functional_v2_function", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "testBody_sequential_v2_eager", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "testBody_sequential_v2_function", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "testBody_subclass_v2_eager", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "testBody_subclass_v2_function", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 421, "col_offset": 29, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 423, "col_offset": 9, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 423, "col_offset": 28, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 424, "col_offset": 10, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 427, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 434, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "ExampleTest", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "testBody_arg_v2_eager_functional", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "testBody_arg_v2_function_functional", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "testBody_arg_v2_eager_sequential", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "testBody_arg_v2_function_sequential", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "testBody_arg_v2_eager_subclass", "type": "Any"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "testBody_arg_v2_function_subclass", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 475, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 478, "col_offset": 9, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 478, "col_offset": 28, "nodeName": "ExampleTest", "type": "Any"}, {"lineNumber": 479, "col_offset": 10, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "keras_parameterized", "type": "module"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "ExampleTest", "type": "Any"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "testBody_arg_v2_eager_functional", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "testBody_arg_v2_function_functional", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "testBody_arg_v2_eager_sequential", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "testBody_arg_v2_function_sequential", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "testBody_arg_v2_eager_subclass", "type": "Any"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "testBody_arg_v2_function_subclass", "type": "Any"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 530, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 531, "col_offset": 29, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 533, "col_offset": 9, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 533, "col_offset": 28, "nodeName": "ExampleTest", "type": "Any"}, {"lineNumber": 534, "col_offset": 10, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 535, "col_offset": 11, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 537, "col_offset": 19, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 543, "col_offset": 21, "nodeName": "arg", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 549, "col_offset": 21, "nodeName": "arg", "type": "Any"}, {"lineNumber": 552, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "models", "type": "module"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "models", "type": "module"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "models", "type": "module"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "unittest", "type": "module"}, {"lineNumber": 68, "col_offset": 10, "nodeName": "unittest", "type": "module"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "with_brackets", "type": "str"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "models", "type": "module"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "models", "type": "module"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "models", "type": "module"}, {"lineNumber": 116, "col_offset": 9, "nodeName": "unittest", "type": "module"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "unittest", "type": "module"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "testBody_functional", "type": "Any"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "testBody_subclass", "type": "Any"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "testBody_sequential", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "models", "type": "module"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "models", "type": "module"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "unittest", "type": "module"}, {"lineNumber": 157, "col_offset": 10, "nodeName": "unittest", "type": "module"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "testBody_functional", "type": "Any"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "testBody_subclass", "type": "Any"}, {"lineNumber": 183, "col_offset": 6, "nodeName": "testBody_sequential", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "models", "type": "module"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "unittest", "type": "module"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "unittest", "type": "module"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "testBody_v1_session", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 222, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 233, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 233, "col_offset": 21, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "makeSuite", "type": "Any"}, {"lineNumber": 239, "col_offset": 30, "nodeName": "ExampleTest", "type": "Type[Any]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "TestResult", "type": "Type[unittest.result.TestResult]"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "res", "type": "unittest.result.TestResult"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "with_brackets", "type": "str"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 264, "col_offset": 6, "nodeName": "testBody_0_v1_session", "type": "Any"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "testBody_1_v1_session", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 280, "col_offset": 30, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 285, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 285, "col_offset": 26, "nodeName": "expected_combinations", "type": "Union[Set[Tuple[str, str, bool]], Set[Any]]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "l", "type": "List[Tuple[str, str, Any]]"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "unittest", "type": "module"}, {"lineNumber": 289, "col_offset": 10, "nodeName": "unittest", "type": "module"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "testBody_v1_session", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "testBody_v2_eager", "type": "Any"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "testBody_v2_function", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 347, "col_offset": 6, "nodeName": "testBody_v1_session_functional", "type": "Any"}, {"lineNumber": 348, "col_offset": 6, "nodeName": "testBody_v1_session_sequential", "type": "Any"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "testBody_v1_session_subclass", "type": "Any"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 361, "col_offset": 30, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 368, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 370, "col_offset": 9, "nodeName": "unittest", "type": "module"}, {"lineNumber": 371, "col_offset": 10, "nodeName": "unittest", "type": "module"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 400, "col_offset": 6, "nodeName": "testBody_functional_v1_session", "type": "Any"}, {"lineNumber": 401, "col_offset": 6, "nodeName": "testBody_sequential_v1_session", "type": "Any"}, {"lineNumber": 402, "col_offset": 6, "nodeName": "testBody_subclass_v1_session", "type": "Any"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 414, "col_offset": 30, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 420, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 420, "col_offset": 26, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 421, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 423, "col_offset": 9, "nodeName": "unittest", "type": "module"}, {"lineNumber": 424, "col_offset": 10, "nodeName": "unittest", "type": "module"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 455, "col_offset": 6, "nodeName": "testBody_arg_v1_session_functional", "type": "Any"}, {"lineNumber": 456, "col_offset": 6, "nodeName": "testBody_arg_v1_session_sequential", "type": "Any"}, {"lineNumber": 457, "col_offset": 6, "nodeName": "testBody_arg_v1_session_subclass", "type": "Any"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 469, "col_offset": 30, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 475, "col_offset": 26, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 476, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 478, "col_offset": 9, "nodeName": "unittest", "type": "module"}, {"lineNumber": 479, "col_offset": 10, "nodeName": "unittest", "type": "module"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 509, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 510, "col_offset": 6, "nodeName": "testBody_arg_v1_session_functional", "type": "Any"}, {"lineNumber": 511, "col_offset": 6, "nodeName": "testBody_arg_v1_session_sequential", "type": "Any"}, {"lineNumber": 512, "col_offset": 6, "nodeName": "testBody_arg_v1_session_subclass", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 524, "col_offset": 30, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 530, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 530, "col_offset": 26, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 531, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 531, "col_offset": 25, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 533, "col_offset": 9, "nodeName": "unittest", "type": "module"}, {"lineNumber": 534, "col_offset": 10, "nodeName": "unittest", "type": "module"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "ts", "type": "Any"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 552, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "keras", "type": "module"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "keras", "type": "module"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "keras", "type": "module"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "with_brackets", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "keras", "type": "module"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "keras", "type": "module"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "keras", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "keras", "type": "module"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "keras", "type": "module"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 183, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "keras", "type": "module"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 222, "col_offset": 6, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "unittest", "type": "module"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "ts", "type": "Any"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 233, "col_offset": 6, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "unittest", "type": "module"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "ts", "type": "Any"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "self", "type": "KerasParameterizedTest"}, {"lineNumber": 258, "col_offset": 43, "nodeName": "with_brackets", "type": "Any"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 264, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 280, "col_offset": 30, "nodeName": "expected_combinations", "type": "Set[Tuple[str, str, bool]]"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "expected_combinations", "type": "Union[Set[Tuple[str, str, bool]], Set[Any]]"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 347, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 348, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 361, "col_offset": 30, "nodeName": "expected_combinations", "type": "Set[Tuple[str, bool, str]]"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 374, "col_offset": 26, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 400, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 401, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 402, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 414, "col_offset": 30, "nodeName": "expected_combinations", "type": "Set[Tuple[str, bool, str]]"}, {"lineNumber": 427, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 427, "col_offset": 26, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 443, "col_offset": 29, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 455, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 456, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 457, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 469, "col_offset": 30, "nodeName": "expected_combinations", "type": "Set[Tuple[str, bool, str]]"}, {"lineNumber": 482, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 482, "col_offset": 26, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 498, "col_offset": 29, "nodeName": "should_run_eagerly", "type": "Callable[[], Any]"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 509, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 510, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 511, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 512, "col_offset": 6, "nodeName": "e", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "tf2", "type": "Any"}, {"lineNumber": 524, "col_offset": 30, "nodeName": "expected_combinations", "type": "Set[Tuple[str, bool, str]]"}, {"lineNumber": 537, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 537, "col_offset": 26, "nodeName": "expected_combinations", "type": "Union[Set[Any], Set[Tuple[str, bool, str]]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "get_small_mlp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "model_types", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "with_brackets", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "get_small_mlp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "get_small_mlp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "model_types", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "get_small_mlp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "mode", "type": "str"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 257, "col_offset": 26, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[str, str, Any]]"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "with_brackets", "type": "str"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "mode", "type": "str"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "mode", "type": "str"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 336, "col_offset": 18, "nodeName": "mode", "type": "str"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 387, "col_offset": 26, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "mode", "type": "str"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 442, "col_offset": 26, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 443, "col_offset": 29, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 444, "col_offset": 18, "nodeName": "mode", "type": "str"}, {"lineNumber": 444, "col_offset": 24, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 497, "col_offset": 26, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 498, "col_offset": 29, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "l", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 499, "col_offset": 18, "nodeName": "mode", "type": "str"}, {"lineNumber": 499, "col_offset": 24, "nodeName": "should_run_eagerly", "type": "Any"}, {"lineNumber": 509, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "__internal__", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 257, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 336, "col_offset": 44, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 387, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 389, "col_offset": 44, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 442, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 444, "col_offset": 44, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 497, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 499, "col_offset": 44, "nodeName": "get_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 509, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 336, "col_offset": 44, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 389, "col_offset": 44, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 444, "col_offset": 44, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 499, "col_offset": 44, "nodeName": "testing_utils", "type": "module"}]