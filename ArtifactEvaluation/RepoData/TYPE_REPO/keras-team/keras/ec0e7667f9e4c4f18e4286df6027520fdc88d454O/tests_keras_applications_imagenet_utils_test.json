[{"lineNumber": 8, "col_offset": 0, "nodeName": "test_preprocess_input", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "test_decode_predictions", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test_obtain_input_shape", "type": "Callable[[], Any]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "data_format", "type": "str"}, {"lineNumber": 111, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 10, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 10, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "preprocess_input", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "preprocess_input", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "out1", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "decode_predictions", "type": "Callable[..., List[Any]]"}, {"lineNumber": 21, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 10, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 13, "col_offset": 34, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 13, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 14, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "outs", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "decode_predictions", "type": "Callable[..., List[Any]]"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "_obtain_input_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "_obtain_input_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "_obtain_input_shape", "type": "Callable"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "_obtain_input_shape", "type": "Callable"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "_obtain_input_shape", "type": "Callable"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "_obtain_input_shape", "type": "Callable"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 10, "col_offset": 11, "nodeName": "preprocess_input", "type": "Callable[..., Any]"}, {"lineNumber": 10, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 13, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 14, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "out", "type": "Any"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "data_format", "type": "str"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 81, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "_obtain_input_shape", "type": "Callable"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "data_format", "type": "str"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 55, "col_offset": 81, "nodeName": "shape", "type": "Tuple[int]"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "_obtain_input_shape", "type": "Callable"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "data_format", "type": "str"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 66, "col_offset": 81, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "_obtain_input_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 10, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "data_format", "type": "str"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "data_format", "type": "str"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "data_format", "type": "str"}]