[{"lineNumber": 17, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "check_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "get_params", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "filter_sk_params", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "BaseWrapper", "type": "Type[BaseWrapper]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "predict_proba", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "BaseWrapper", "type": "Type[BaseWrapper]"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "score", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "sk_params", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "sk_params", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "params_name", "type": "str"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "loss", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "fit_args", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "override", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "res", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "res", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "n_classes_", "type": "int"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "classes", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "probs", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "probs", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "loss", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "check_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "sk_params", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "fit", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "predict", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "predict_classes", "type": "Any"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "fn", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "legal_params_fns", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "sk_params", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "check_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "fit", "type": "Any"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "override", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "value", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "items", "type": "Callable"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "override", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 207, "col_offset": 51, "nodeName": "y", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "filter_sk_params", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "predict_classes", "type": "Any"}, {"lineNumber": 224, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "predict_classes", "type": "Any"}, {"lineNumber": 225, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "filter_sk_params", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 247, "col_offset": 65, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 248, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "probs", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "searchsorted", "type": "Any"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "filter_sk_params", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 39, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 278, "col_offset": 60, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 286, "col_offset": 18, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "output", "type": "Any"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 289, "col_offset": 32, "nodeName": "metrics_names", "type": "Any"}, {"lineNumber": 289, "col_offset": 58, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 292, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "filter_sk_params", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 39, "nodeName": "predict", "type": "Any"}, {"lineNumber": 315, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "filter_sk_params", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 39, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 334, "col_offset": 60, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 335, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "loss", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "copy", "type": "module"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "sk_params", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "to_categorical", "type": "Any"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "filter_sk_params", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 55, "nodeName": "fit", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "fit_args", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "fit_args", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "sk_params", "type": "Dict[str, Any]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "fn", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "res", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "arange", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 207, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 225, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "classes", "type": "Any"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 248, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 278, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 283, "col_offset": 11, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "to_categorical", "type": "Any"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 286, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 286, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 287, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 289, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "self", "type": "KerasRegressor"}, {"lineNumber": 315, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "predict", "type": "Any"}, {"lineNumber": 316, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "self", "type": "KerasRegressor"}, {"lineNumber": 334, "col_offset": 39, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 335, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "legal_params_fns", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "fn", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "params_name", "type": "str"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "params_name", "type": "str"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 145, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 148, "col_offset": 55, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "unique", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "searchsorted", "type": "Any"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "classes_", "type": "Any"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "KerasClassifier", "type": "Type[KerasClassifier]"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "probs", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 42, "nodeName": "probs", "type": "Any"}, {"lineNumber": 283, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 283, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 286, "col_offset": 18, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 289, "col_offset": 32, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 316, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "self", "type": "KerasRegressor"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "loss", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "FunctionType", "type": "Type[Callable[..., Any]]"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "MethodType", "type": "Type[types.UnboundMethodType]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "legal_params_fns", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "legal_params_fns", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "filter_sk_params", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 63, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "FunctionType", "type": "Type[Callable[..., Any]]"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "MethodType", "type": "Type[types.UnboundMethodType]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 145, "col_offset": 59, "nodeName": "y", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "res", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 56, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 201, "col_offset": 60, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "self", "type": "KerasClassifier"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "probs", "type": "Any"}, {"lineNumber": 283, "col_offset": 59, "nodeName": "y", "type": "Any"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "self", "type": "KerasRegressor"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "types", "type": "module"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "types", "type": "module"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 89, "col_offset": 61, "nodeName": "params_name", "type": "str"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 134, "col_offset": 63, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "types", "type": "module"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "types", "type": "module"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "filter_sk_params", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "filter_sk_params", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 63, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 201, "col_offset": 60, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 205, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 205, "col_offset": 59, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "build_fn", "type": "Any"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 140, "col_offset": 63, "nodeName": "self", "type": "BaseWrapper"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 205, "col_offset": 59, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "self", "type": "BaseWrapper"}]