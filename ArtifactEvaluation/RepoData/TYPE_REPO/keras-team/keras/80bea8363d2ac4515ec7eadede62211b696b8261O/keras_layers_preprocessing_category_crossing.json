[{"lineNumber": 31, "col_offset": 23, "nodeName": "PreprocessingLayer", "type": "Any"}, {"lineNumber": 109, "col_offset": 2, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 2, "nodeName": "partial_crossing", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 2, "nodeName": "_preprocess_input", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "call", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 2, "nodeName": "compute_output_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 2, "nodeName": "compute_output_signature", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 2, "nodeName": "get_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "base_preprocessing_layer", "type": "module"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "depth", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "depth", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "separator", "type": "Union[str, Any]"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "separator", "type": "Union[str, Any]"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "ragged_out", "type": "bool"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "inp", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "depth_tuple", "type": "Union[Any, Tuple[int, ...], Tuple[int]]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "ragged_out", "type": "bool"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "sparse_out", "type": "bool"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "depth", "type": "Union[Any, int]"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "depth_tuple", "type": "Union[Any, Tuple[int], Tuple[int, ...]]"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "sparse_out", "type": "bool"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "batch_size", "type": "None"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "inp_shape", "type": "Any"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "output_shape", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "input_shapes", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "separator", "type": "Any"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "separator", "type": "str"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "depth", "type": "Any"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "_depth_tuple", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "depth", "type": "Any"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "sparse_out", "type": "bool"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "inp", "type": "Any"}, {"lineNumber": 139, "col_offset": 6, "nodeName": "inp", "type": "Any"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "rank", "type": "Any"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "inp", "type": "Any"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "depth", "type": "Any"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "_depth_tuple", "type": "Union[Any, Tuple[int, ...]]"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "ragged_out", "type": "bool"}, {"lineNumber": 159, "col_offset": 10, "nodeName": "partial_inps", "type": "Sequence[Any]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "concat", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "inp_tensor_shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "output_shape", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "input_shapes", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 7, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "depth", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "separator", "type": "Union[str, Any]"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "depth", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "_depth_tuple", "type": "Tuple[int, ...]"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "separator", "type": "Union[str, Any]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "cross", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "partial_inputs", "type": "Sequence[Any]"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "inp", "type": "Any"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "inp", "type": "Any"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "_preprocess_input", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "inp", "type": "Any"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "inp", "type": "Any"}, {"lineNumber": 145, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "sparse_out", "type": "bool"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "depth", "type": "Union[int, Any]"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 57, "nodeName": "depth", "type": "Union[int, Any]"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "concat", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "batch_size", "type": "None"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 195, "col_offset": 51, "nodeName": "string", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "CategoryCrossing", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "get_cell", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "ragged", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "cross", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "partial_inputs", "type": "Sequence[Any]"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "to_dense", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "inp", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "v1", "type": "Any"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 146, "col_offset": 60, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "is_ragged", "type": "Callable[[Any], bool]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "inp", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "inp", "type": "Any"}, {"lineNumber": 148, "col_offset": 46, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "itertools", "type": "module"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "partial_crossing", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "partial_inps", "type": "Sequence[Any]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "ragged_out", "type": "bool"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "sparse_out", "type": "bool"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "partial_out", "type": "Any"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "inp_tensor_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "inp_tensor_shape", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "inp_spec", "type": "Any"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 189, "col_offset": 53, "nodeName": "string", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "SparseTensorSpec", "type": "Any"}, {"lineNumber": 195, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "CategoryCrossing", "type": "Any"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 203, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "keras_kpl_gauge", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "separator", "type": "Union[str, Any]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "separator", "type": "Union[str, Any]"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "cross", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "partial_inputs", "type": "Sequence[Any]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "compat", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "tf_utils", "type": "module"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "inp", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "SparseTensor", "type": "Any"}, {"lineNumber": 150, "col_offset": 50, "nodeName": "inp", "type": "Any"}, {"lineNumber": 150, "col_offset": 57, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 158, "col_offset": 47, "nodeName": "depth", "type": "Union[int, Any]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "inp_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 176, "col_offset": 64, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 189, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "inp_spec", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "string", "type": "Any"}, {"lineNumber": 203, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "base_preprocessing_layer", "type": "module"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "separator", "type": "Union[str, Any]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 21, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "config", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 53, "nodeName": "depth", "type": "Any"}]