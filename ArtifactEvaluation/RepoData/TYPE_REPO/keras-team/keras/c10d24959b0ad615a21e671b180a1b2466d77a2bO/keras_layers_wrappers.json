[{"lineNumber": 18, "col_offset": 14, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "layer", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "_input_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "trainable_weights", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "non_trainable_weights", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "inner_inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "updates", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "updates", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "updates", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "tensor_shape", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "int_shape", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "child_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "child_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "child_output_shape", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "timesteps", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "uses_learning_phase", "type": "bool"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "uses_learning_phase", "type": "Union[Any, bool]"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "inner_mask", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "mask", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "input_uid", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "inner_inputs", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 372, "col_offset": 26, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "weights", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 378, "col_offset": 32, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "supports_masking", "type": "bool"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "_trainable", "type": "bool"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "_num_constants", "type": "None"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "_trainable", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "_trainable", "type": "Any"}, {"lineNumber": 392, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 393, "col_offset": 39, "nodeName": "value", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 394, "col_offset": 40, "nodeName": "value", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "nw", "type": "int"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "output_shape", "type": "Union[List[Any], Any, Tuple[Any, ...]]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "additional_inputs", "type": "List[Any]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "additional_specs", "type": "List[Any]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "is_keras_tensor", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 464, "col_offset": 22, "nodeName": "additional_inputs", "type": "List[Any]"}, {"lineNumber": 472, "col_offset": 11, "nodeName": "is_keras_tensor", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 531, "col_offset": 11, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 556, "col_offset": 11, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 560, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 584, "col_offset": 11, "nodeName": "return_state", "type": "Any"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "output_mask", "type": "Optional[Union[List[None], Any, List[Any]]]"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "forward_updates", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "backward_updates", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "forward_losses", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "backward_losses", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "constraints", "type": "Dict[Any, Any]"}, {"lineNumber": 637, "col_offset": 15, "nodeName": "constraints", "type": "Dict[Any, Any]"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "base_config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "rnn_layer", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "num_constants", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "layer", "type": "Bidirectional"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "_num_constants", "type": "Any"}, {"lineNumber": 654, "col_offset": 31, "nodeName": "num_constants", "type": "Any"}, {"lineNumber": 655, "col_offset": 15, "nodeName": "layer", "type": "Bidirectional"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "updates", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "uid", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "get_updates_for", "type": "Any"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "inner_inputs", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "get_updates_for", "type": "Any"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "losses", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "losses", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 92, "col_offset": 51, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "weights", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "deserialize_layer", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "cls", "type": "Type[Wrapper]"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 46, "nodeName": "layer", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "int_shape", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "init_tuple", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "InputSpec", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "built", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "built", "type": "bool"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 205, "col_offset": 61, "nodeName": "child_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "training", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "inner_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "input_uid", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "output_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "output_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "regularization_loss", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "_uses_learning_phase", "type": "bool"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "inner_mask", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "inner_mask_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "inner_mask", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "object_list_uid", "type": "Any"}, {"lineNumber": 303, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "_input_map", "type": "Dict[Any, Any]"}, {"lineNumber": 305, "col_offset": 22, "nodeName": "compute_mask", "type": "Any"}, {"lineNumber": 305, "col_offset": 46, "nodeName": "inner_inputs", "type": "Any"}, {"lineNumber": 305, "col_offset": 60, "nodeName": "inner_mask", "type": "Any"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 311, "col_offset": 26, "nodeName": "mask", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "output_mask_int_shape", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "output_mask_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 362, "col_offset": 11, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 366, "col_offset": 29, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 366, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 367, "col_offset": 17, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 369, "col_offset": 58, "nodeName": "config", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 370, "col_offset": 47, "nodeName": "name", "type": "str"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 371, "col_offset": 49, "nodeName": "name", "type": "str"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "nw", "type": "int"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "initial_weights", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "initial_weights", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "layer", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 378, "col_offset": 32, "nodeName": "layer", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 44, "nodeName": "layer", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "layer", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 400, "col_offset": 17, "nodeName": "weights", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 405, "col_offset": 63, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "state_shape", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "output_shape", "type": "List[Any]"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "output_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "constants", "type": "Any"}, {"lineNumber": 424, "col_offset": 43, "nodeName": "_standardize_args", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 425, "col_offset": 35, "nodeName": "constants", "type": "Any"}, {"lineNumber": 425, "col_offset": 46, "nodeName": "_num_constants", "type": "Any"}, {"lineNumber": 433, "col_offset": 11, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "num_states", "type": "int"}, {"lineNumber": 443, "col_offset": 38, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "additional_inputs", "type": "List[Any]"}, {"lineNumber": 444, "col_offset": 33, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "state_specs", "type": "List[Any]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "state_spec", "type": "List[Any]"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "state_spec", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "additional_specs", "type": "List[Any]"}, {"lineNumber": 449, "col_offset": 32, "nodeName": "state_specs", "type": "List[Any]"}, {"lineNumber": 450, "col_offset": 11, "nodeName": "constants", "type": "Any"}, {"lineNumber": 451, "col_offset": 34, "nodeName": "constants", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "additional_inputs", "type": "List[Any]"}, {"lineNumber": 452, "col_offset": 33, "nodeName": "constants", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "constants_spec", "type": "List[Any]"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "constants_spec", "type": "List[Any]"}, {"lineNumber": 455, "col_offset": 48, "nodeName": "constants_spec", "type": "List[Any]"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "constants_spec", "type": "List[Any]"}, {"lineNumber": 456, "col_offset": 49, "nodeName": "constants_spec", "type": "List[Any]"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "additional_specs", "type": "List[Any]"}, {"lineNumber": 457, "col_offset": 32, "nodeName": "constants_spec", "type": "List[Any]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "_num_constants", "type": "int"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "_num_constants", "type": "int"}, {"lineNumber": 460, "col_offset": 48, "nodeName": "_num_constants", "type": "int"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "_num_constants", "type": "int"}, {"lineNumber": 461, "col_offset": 49, "nodeName": "_num_constants", "type": "int"}, {"lineNumber": 463, "col_offset": 26, "nodeName": "is_keras_tensor", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "full_input", "type": "List[Any]"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "full_input_spec", "type": "Any"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "original_input_spec", "type": "Any"}, {"lineNumber": 478, "col_offset": 34, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 479, "col_offset": 30, "nodeName": "full_input_spec", "type": "Any"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 481, "col_offset": 30, "nodeName": "original_input_spec", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 493, "col_offset": 11, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 494, "col_offset": 33, "nodeName": "training", "type": "Any"}, {"lineNumber": 495, "col_offset": 11, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "mask", "type": "Any"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "call", "type": "Any"}, {"lineNumber": 498, "col_offset": 34, "nodeName": "constants", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "forward_inputs", "type": "List[Any]"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "backward_inputs", "type": "List[Any]"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "pivot", "type": "int"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "forward_state", "type": "Any"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "forward_inputs", "type": "List[Any]"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "forward_state", "type": "Any"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 523, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 531, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 533, "col_offset": 11, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 556, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "reset_states", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "reset_states", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 574, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 574, "col_offset": 22, "nodeName": "mask", "type": "Any"}, {"lineNumber": 574, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "output_mask", "type": "Optional[List[None]]"}, {"lineNumber": 584, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "states", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "state_mask", "type": "List[None]"}, {"lineNumber": 595, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 595, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 602, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 609, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 614, "col_offset": 26, "nodeName": "get_updates_for", "type": "Any"}, {"lineNumber": 614, "col_offset": 61, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 615, "col_offset": 27, "nodeName": "get_updates_for", "type": "Any"}, {"lineNumber": 615, "col_offset": 63, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 617, "col_offset": 34, "nodeName": "backward_updates", "type": "Any"}, {"lineNumber": 621, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 621, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 626, "col_offset": 59, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 627, "col_offset": 26, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 627, "col_offset": 61, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 629, "col_offset": 33, "nodeName": "backward_losses", "type": "Any"}, {"lineNumber": 634, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 634, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 640, "col_offset": 32, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 641, "col_offset": 11, "nodeName": "_num_constants", "type": "Any"}, {"lineNumber": 642, "col_offset": 38, "nodeName": "_num_constants", "type": "Any"}, {"lineNumber": 644, "col_offset": 22, "nodeName": "get_config", "type": "Callable[[], Any]"}, {"lineNumber": 645, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 650, "col_offset": 20, "nodeName": "deserialize_layer", "type": "Any"}, {"lineNumber": 652, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "cls", "type": "Type[Bidirectional]"}, {"lineNumber": 653, "col_offset": 20, "nodeName": "rnn_layer", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "layer", "type": "Bidirectional"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "object_list_uid", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "uid", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "_input_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "inner_inputs", "type": "nothing"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "layer", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "losses", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "pop", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "init_tuple", "type": "Any"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "int_shape", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 197, "col_offset": 48, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "build", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "child_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "layer", "type": "Any"}, {"lineNumber": 207, "col_offset": 39, "nodeName": "timesteps", "type": "Any"}, {"lineNumber": 207, "col_offset": 52, "nodeName": "child_output_shape", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "K", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "_", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "_get_shape_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 61, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "object_list_uid", "type": "Any"}, {"lineNumber": 241, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "inner_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "_input_map", "type": "Dict[Any, Any]"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "inner_mask_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "uses_learning_phase", "type": "Any"}, {"lineNumber": 250, "col_offset": 38, "nodeName": "_uses_learning_phase", "type": "Any"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "_get_shape_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 255, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "output_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "activity_regularizer", "type": "Any"}, {"lineNumber": 260, "col_offset": 66, "nodeName": "y", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "add_loss", "type": "Any"}, {"lineNumber": 261, "col_offset": 26, "nodeName": "regularization_loss", "type": "Any"}, {"lineNumber": 261, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "K", "type": "Any"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "_get_shape_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 60, "nodeName": "mask", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 302, "col_offset": 35, "nodeName": "inner_mask", "type": "Any"}, {"lineNumber": 302, "col_offset": 47, "nodeName": "inner_mask_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "input_uid", "type": "Any"}, {"lineNumber": 305, "col_offset": 22, "nodeName": "layer", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 316, "col_offset": 27, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 317, "col_offset": 19, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 319, "col_offset": 36, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 319, "col_offset": 48, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 320, "col_offset": 15, "nodeName": "output_mask_int_shape", "type": "Any"}, {"lineNumber": 327, "col_offset": 32, "nodeName": "_get_shape_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 329, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 329, "col_offset": 36, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 329, "col_offset": 49, "nodeName": "output_mask_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 366, "col_offset": 29, "nodeName": "copy", "type": "module"}, {"lineNumber": 367, "col_offset": 17, "nodeName": "layer", "type": "Any"}, {"lineNumber": 368, "col_offset": 37, "nodeName": "config", "type": "Any"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 370, "col_offset": 47, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 371, "col_offset": 49, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "weights", "type": "Any"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 375, "col_offset": 49, "nodeName": "weights", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 376, "col_offset": 50, "nodeName": "weights", "type": "Any"}, {"lineNumber": 382, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 397, "col_offset": 50, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 401, "col_offset": 39, "nodeName": "weights", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 402, "col_offset": 40, "nodeName": "weights", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 408, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 411, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 411, "col_offset": 32, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "output_shape", "type": "List[Any]"}, {"lineNumber": 413, "col_offset": 27, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 413, "col_offset": 33, "nodeName": "output_shape", "type": "List[Any]"}, {"lineNumber": 414, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "output_shape", "type": "List[Any]"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 424, "col_offset": 43, "nodeName": "recurrent", "type": "Any"}, {"lineNumber": 425, "col_offset": 46, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 427, "col_offset": 11, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 427, "col_offset": 37, "nodeName": "constants", "type": "Any"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 428, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 435, "col_offset": 29, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 447, "col_offset": 44, "nodeName": "state_specs", "type": "List[Any]"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 448, "col_offset": 45, "nodeName": "state_specs", "type": "List[Any]"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 459, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 459, "col_offset": 38, "nodeName": "constants", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 460, "col_offset": 48, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 461, "col_offset": 49, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 463, "col_offset": 26, "nodeName": "K", "type": "Any"}, {"lineNumber": 463, "col_offset": 44, "nodeName": "additional_inputs", "type": "List[Any]"}, {"lineNumber": 465, "col_offset": 44, "nodeName": "is_keras_tensor", "type": "Any"}, {"lineNumber": 474, "col_offset": 36, "nodeName": "additional_inputs", "type": "List[Any]"}, {"lineNumber": 475, "col_offset": 30, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 475, "col_offset": 48, "nodeName": "additional_specs", "type": "List[Any]"}, {"lineNumber": 478, "col_offset": 34, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 480, "col_offset": 21, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 480, "col_offset": 57, "nodeName": "full_input", "type": "List[Any]"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 484, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "layer", "type": "Any"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 500, "col_offset": 11, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 500, "col_offset": 41, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 500, "col_offset": 49, "nodeName": "call", "type": "Any"}, {"lineNumber": 505, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "_num_constants", "type": "Any"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "backward_state", "type": "Any"}, {"lineNumber": 510, "col_offset": 16, "nodeName": "backward_inputs", "type": "List[Any]"}, {"lineNumber": 510, "col_offset": 35, "nodeName": "backward_state", "type": "Any"}, {"lineNumber": 513, "col_offset": 16, "nodeName": "backward_state", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "backward_inputs", "type": "List[Any]"}, {"lineNumber": 514, "col_offset": 35, "nodeName": "backward_state", "type": "Any"}, {"lineNumber": 516, "col_offset": 16, "nodeName": "forward_inputs", "type": "List[Any]"}, {"lineNumber": 517, "col_offset": 16, "nodeName": "backward_inputs", "type": "List[Any]"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 518, "col_offset": 40, "nodeName": "forward_inputs", "type": "List[Any]"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "call", "type": "Any"}, {"lineNumber": 520, "col_offset": 45, "nodeName": "backward_inputs", "type": "List[Any]"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 523, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 524, "col_offset": 20, "nodeName": "call", "type": "Any"}, {"lineNumber": 524, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 528, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "reverse", "type": "Any"}, {"lineNumber": 532, "col_offset": 30, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 533, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 535, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 548, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 549, "col_offset": 19, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 551, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 551, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "_uses_learning_phase", "type": "bool"}, {"lineNumber": 557, "col_offset": 15, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 559, "col_offset": 30, "nodeName": "states", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 567, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 567, "col_offset": 26, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "build", "type": "Any"}, {"lineNumber": 568, "col_offset": 37, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 569, "col_offset": 26, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "build", "type": "Any"}, {"lineNumber": 570, "col_offset": 38, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 575, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 577, "col_offset": 19, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 578, "col_offset": 16, "nodeName": "output_mask", "type": "List[Any]"}, {"lineNumber": 580, "col_offset": 16, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 580, "col_offset": 30, "nodeName": "mask", "type": "Any"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 587, "col_offset": 26, "nodeName": "output_mask", "type": "Optional[Union[List[None], Any, List[Any]]]"}, {"lineNumber": 587, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 595, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 596, "col_offset": 20, "nodeName": "trainable_weights", "type": "Any"}, {"lineNumber": 597, "col_offset": 20, "nodeName": "trainable_weights", "type": "Any"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 20, "nodeName": "non_trainable_weights", "type": "Any"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "non_trainable_weights", "type": "Any"}, {"lineNumber": 609, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 610, "col_offset": 19, "nodeName": "updates", "type": "Any"}, {"lineNumber": 610, "col_offset": 48, "nodeName": "updates", "type": "Any"}, {"lineNumber": 614, "col_offset": 26, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 615, "col_offset": 27, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 617, "col_offset": 16, "nodeName": "forward_updates", "type": "Any"}, {"lineNumber": 621, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "losses", "type": "Any"}, {"lineNumber": 622, "col_offset": 47, "nodeName": "losses", "type": "Any"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 627, "col_offset": 26, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 629, "col_offset": 16, "nodeName": "forward_losses", "type": "Any"}, {"lineNumber": 634, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 635, "col_offset": 31, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 636, "col_offset": 31, "nodeName": "constraints", "type": "Any"}, {"lineNumber": 640, "col_offset": 32, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 641, "col_offset": 11, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 642, "col_offset": 38, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 650, "col_offset": 38, "nodeName": "pop", "type": "Any"}, {"lineNumber": 651, "col_offset": 53, "nodeName": "custom_objects", "type": "Any"}, {"lineNumber": 652, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 653, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "_input_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "layer", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "get_losses_for", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "TimeDistributed", "type": "Type[TimeDistributed]"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 184, "col_offset": 36, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 184, "col_offset": 44, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "int_shape", "type": "List[Any]"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "tensor_shape", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "TimeDistributed", "type": "Type[TimeDistributed]"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "child_output_shape", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "call", "type": "Any"}, {"lineNumber": 220, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "uses_learning_phase", "type": "Any"}, {"lineNumber": 224, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "K", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "K", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "input_uid", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "has_arg", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "call", "type": "Any"}, {"lineNumber": 245, "col_offset": 52, "nodeName": "mask", "type": "Any"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "_get_shape_tuple", "type": "Callable[..., Any]"}, {"lineNumber": 246, "col_offset": 64, "nodeName": "mask", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 247, "col_offset": 43, "nodeName": "mask", "type": "Any"}, {"lineNumber": 247, "col_offset": 49, "nodeName": "inner_mask_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 250, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 254, "col_offset": 42, "nodeName": "output_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "layer", "type": "Any"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "layer", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "K", "type": "Any"}, {"lineNumber": 305, "col_offset": 22, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "any", "type": "Any"}, {"lineNumber": 313, "col_offset": 36, "nodeName": "output_mask", "type": "Any"}, {"lineNumber": 319, "col_offset": 36, "nodeName": "K", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "output_mask_int_shape", "type": "Any"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "output_mask_int_shape", "type": "Any"}, {"lineNumber": 327, "col_offset": 32, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 328, "col_offset": 52, "nodeName": "output_mask_int_shape", "type": "Any"}, {"lineNumber": 329, "col_offset": 26, "nodeName": "K", "type": "Any"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "layer", "type": "Any"}, {"lineNumber": 370, "col_offset": 47, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 371, "col_offset": 49, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 382, "col_offset": 14, "nodeName": "Bidirectional", "type": "Type[Bidirectional]"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 397, "col_offset": 50, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 414, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 415, "col_offset": 28, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 420, "col_offset": 36, "nodeName": "state_shape", "type": "Any"}, {"lineNumber": 420, "col_offset": 50, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 420, "col_offset": 60, "nodeName": "state_shape", "type": "Any"}, {"lineNumber": 428, "col_offset": 65, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "num_states", "type": "int"}, {"lineNumber": 437, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 446, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 446, "col_offset": 40, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 454, "col_offset": 34, "nodeName": "constant", "type": "Any"}, {"lineNumber": 454, "col_offset": 46, "nodeName": "constants", "type": "Any"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "is_keras_tensor", "type": "Any"}, {"lineNumber": 465, "col_offset": 33, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 474, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 475, "col_offset": 30, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 480, "col_offset": 71, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 484, "col_offset": 65, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 500, "col_offset": 49, "nodeName": "layer", "type": "Any"}, {"lineNumber": 501, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 502, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 505, "col_offset": 37, "nodeName": "pivot", "type": "int"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 509, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 513, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 516, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 517, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 519, "col_offset": 54, "nodeName": "forward_state", "type": "Any"}, {"lineNumber": 519, "col_offset": 71, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 521, "col_offset": 59, "nodeName": "backward_state", "type": "Any"}, {"lineNumber": 521, "col_offset": 77, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 523, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 524, "col_offset": 20, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 524, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 527, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 527, "col_offset": 29, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "K", "type": "Any"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "K", "type": "Any"}, {"lineNumber": 534, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 534, "col_offset": 39, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 535, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 536, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 536, "col_offset": 25, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 537, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "_uses_learning_phase", "type": "bool"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 557, "col_offset": 15, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 558, "col_offset": 32, "nodeName": "states", "type": "Any"}, {"lineNumber": 559, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 567, "col_offset": 13, "nodeName": "K", "type": "Any"}, {"lineNumber": 567, "col_offset": 26, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "K", "type": "Any"}, {"lineNumber": 569, "col_offset": 26, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 577, "col_offset": 19, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 578, "col_offset": 31, "nodeName": "mask", "type": "Any"}, {"lineNumber": 578, "col_offset": 37, "nodeName": "mask", "type": "Any"}, {"lineNumber": 582, "col_offset": 46, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 586, "col_offset": 35, "nodeName": "_", "type": "Any"}, {"lineNumber": 586, "col_offset": 40, "nodeName": "states", "type": "Any"}, {"lineNumber": 588, "col_offset": 23, "nodeName": "output_mask", "type": "Optional[Union[List[None], Any, List[Any]]]"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "output_mask", "type": "Optional[Union[List[None], Any, List[Any]]]"}, {"lineNumber": 589, "col_offset": 35, "nodeName": "state_mask", "type": "List[None]"}, {"lineNumber": 596, "col_offset": 20, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 597, "col_offset": 20, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 603, "col_offset": 20, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 610, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 610, "col_offset": 48, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 614, "col_offset": 26, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 615, "col_offset": 27, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 622, "col_offset": 47, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 627, "col_offset": 26, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "constraints", "type": "Dict[Any, Any]"}, {"lineNumber": 635, "col_offset": 31, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "constraints", "type": "Dict[Any, Any]"}, {"lineNumber": 636, "col_offset": 31, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 644, "col_offset": 22, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 644, "col_offset": 28, "nodeName": "Bidirectional", "type": "Type[Bidirectional]"}, {"lineNumber": 644, "col_offset": 43, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 645, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 645, "col_offset": 48, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 650, "col_offset": 38, "nodeName": "config", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "uid", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "layer", "type": "Any"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "layer", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "items", "type": "Any"}, {"lineNumber": 104, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "K", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 220, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "_uses_learning_phase", "type": "Any"}, {"lineNumber": 223, "col_offset": 43, "nodeName": "uses_learning_phase", "type": "Any"}, {"lineNumber": 228, "col_offset": 47, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "layer", "type": "Any"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "K", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 312, "col_offset": 34, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 312, "col_offset": 46, "nodeName": "mask", "type": "Any"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "K", "type": "Any"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 318, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 324, "col_offset": 44, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 324, "col_offset": 56, "nodeName": "mask", "type": "Any"}, {"lineNumber": 375, "col_offset": 58, "nodeName": "nw", "type": "int"}, {"lineNumber": 376, "col_offset": 58, "nodeName": "nw", "type": "int"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 397, "col_offset": 50, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 401, "col_offset": 48, "nodeName": "nw", "type": "int"}, {"lineNumber": 402, "col_offset": 48, "nodeName": "nw", "type": "int"}, {"lineNumber": 415, "col_offset": 42, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 415, "col_offset": 52, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 419, "col_offset": 23, "nodeName": "output_shape", "type": "Union[List[Any], Any, Tuple[Any, ...]]"}, {"lineNumber": 419, "col_offset": 38, "nodeName": "state_shape", "type": "Any"}, {"lineNumber": 419, "col_offset": 52, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 419, "col_offset": 62, "nodeName": "state_shape", "type": "Any"}, {"lineNumber": 420, "col_offset": 20, "nodeName": "output_shape", "type": "Union[List[Any], Any, Tuple[Any, ...]]"}, {"lineNumber": 420, "col_offset": 50, "nodeName": "copy", "type": "module"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 428, "col_offset": 25, "nodeName": "Bidirectional", "type": "Type[Bidirectional]"}, {"lineNumber": 428, "col_offset": 40, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 447, "col_offset": 57, "nodeName": "num_states", "type": "int"}, {"lineNumber": 448, "col_offset": 57, "nodeName": "num_states", "type": "int"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "K", "type": "Any"}, {"lineNumber": 480, "col_offset": 21, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "Bidirectional", "type": "Type[Bidirectional]"}, {"lineNumber": 480, "col_offset": 42, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 484, "col_offset": 25, "nodeName": "Bidirectional", "type": "Type[Bidirectional]"}, {"lineNumber": 484, "col_offset": 40, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 500, "col_offset": 49, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 503, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 503, "col_offset": 24, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 509, "col_offset": 40, "nodeName": "pivot", "type": "int"}, {"lineNumber": 513, "col_offset": 40, "nodeName": "pivot", "type": "int"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 524, "col_offset": 20, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 537, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 539, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 567, "col_offset": 26, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 569, "col_offset": 26, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 582, "col_offset": 46, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 588, "col_offset": 37, "nodeName": "state_mask", "type": "List[None]"}, {"lineNumber": 596, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 597, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 610, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 610, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 622, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 635, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 636, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 645, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 645, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "Wrapper", "type": "Type[Wrapper]"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "self", "type": "Wrapper"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "base_config", "type": "Any"}, {"lineNumber": 104, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 191, "col_offset": 44, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 191, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 312, "col_offset": 34, "nodeName": "K", "type": "Any"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "K", "type": "Any"}, {"lineNumber": 324, "col_offset": 44, "nodeName": "K", "type": "Any"}, {"lineNumber": 326, "col_offset": 44, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 326, "col_offset": 67, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 415, "col_offset": 42, "nodeName": "copy", "type": "module"}, {"lineNumber": 419, "col_offset": 52, "nodeName": "copy", "type": "module"}, {"lineNumber": 441, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 441, "col_offset": 36, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 513, "col_offset": 47, "nodeName": "_num_constants", "type": "Any"}, {"lineNumber": 516, "col_offset": 42, "nodeName": "_num_constants", "type": "Any"}, {"lineNumber": 517, "col_offset": 43, "nodeName": "_num_constants", "type": "Any"}, {"lineNumber": 538, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 538, "col_offset": 26, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 539, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 540, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 540, "col_offset": 25, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 541, "col_offset": 13, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 645, "col_offset": 25, "nodeName": "base_config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 645, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 326, "col_offset": 44, "nodeName": "K", "type": "Any"}, {"lineNumber": 513, "col_offset": 47, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 516, "col_offset": 42, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 517, "col_offset": 43, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 541, "col_offset": 13, "nodeName": "self", "type": "Bidirectional"}, {"lineNumber": 542, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 542, "col_offset": 25, "nodeName": "y_rev", "type": "Any"}, {"lineNumber": 544, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 545, "col_offset": 49, "nodeName": "merge_mode", "type": "Any"}, {"lineNumber": 545, "col_offset": 49, "nodeName": "self", "type": "Bidirectional"}]