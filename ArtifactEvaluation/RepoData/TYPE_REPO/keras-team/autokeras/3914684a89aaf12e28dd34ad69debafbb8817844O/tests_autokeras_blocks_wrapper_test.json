[{"lineNumber": 24, "col_offset": 0, "nodeName": "test_image_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test_image_block_xception_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "test_image_block_normalize_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "test_image_block_augment_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "test_image_deserialize_to_image", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "test_image_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "test_text_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "test_text_block_ngram_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "test_text_block_transformer_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "test_text_deserialize_to_text", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "test_text_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "test_structured_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "test_structured_deserialize_to_structured", "type": "Callable[[], Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "test_structured_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "test_timeseries_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "test_timeseries_deserialize_to_timeseries", "type": "Callable[[], Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "test_timeseries_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "column_types", "type": "Dict[str, str]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "column_types", "type": "Dict[str, str]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 140, "col_offset": 56, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "TimeseriesBlock", "type": "Type[autokeras.blocks.wrapper.TimeseriesBlock]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "TimeseriesBlock", "type": "Type[autokeras.blocks.wrapper.TimeseriesBlock]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "TimeseriesBlock", "type": "Type[autokeras.blocks.wrapper.TimeseriesBlock]"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 85, "col_offset": 68, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 134, "col_offset": 67, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "adapters", "type": "module"}, {"lineNumber": 140, "col_offset": 56, "nodeName": "adapters", "type": "module"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 151, "col_offset": 40, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "adapters", "type": "module"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "adapters", "type": "module"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "TimeseriesBlock", "type": "Type[autokeras.blocks.wrapper.TimeseriesBlock]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 68, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 92, "col_offset": 71, "nodeName": "string", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 103, "col_offset": 71, "nodeName": "string", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 114, "col_offset": 71, "nodeName": "string", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 67, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 143, "col_offset": 71, "nodeName": "string", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 151, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 174, "col_offset": 74, "nodeName": "float32", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 178, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 143, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 74, "nodeName": "tf", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "TimeseriesBlock", "type": "Type[autokeras.blocks.wrapper.TimeseriesBlock]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "blocks", "type": "module"}]