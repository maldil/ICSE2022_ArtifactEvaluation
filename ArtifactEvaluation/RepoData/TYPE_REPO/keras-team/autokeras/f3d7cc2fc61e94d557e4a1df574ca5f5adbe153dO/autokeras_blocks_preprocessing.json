[{"lineNumber": 27, "col_offset": 20, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "block_module", "type": "module"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "block_module", "type": "module"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "block_module", "type": "module"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "block_module", "type": "module"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "block_module", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "axis", "type": "int"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "axis", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "output_sequence_length", "type": "Optional[int]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "output_sequence_length", "type": "Optional[int]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "ngrams", "type": "Optional[Union[int, Tuple[int]]]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "ngrams", "type": "Optional[Union[int, Tuple[int]]]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "translation_factor", "type": "Optional[Union[Tuple[float, float], float]]"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "translation_factor", "type": "Optional[Union[Tuple[float, float], float]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "horizontal_flip", "type": "Optional[bool]"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "horizontal_flip", "type": "Optional[bool]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "vertical_flip", "type": "Optional[bool]"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "vertical_flip", "type": "Optional[bool]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "rotation_factor", "type": "Optional[float]"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "rotation_factor", "type": "Optional[float]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "zoom_factor", "type": "Optional[Union[Tuple[float, float], float]]"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "zoom_factor", "type": "Optional[Union[Tuple[float, float], float]]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "contrast_factor", "type": "Optional[Union[Tuple[float, float], float]]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "contrast_factor", "type": "Optional[Union[Tuple[float, float], float]]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "column_types", "type": "None"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "column_names", "type": "None"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "instance", "type": "CategoricalToNumerical"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 288, "col_offset": 32, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 289, "col_offset": 32, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "instance", "type": "CategoricalToNumerical"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Normalization"}, {"lineNumber": 43, "col_offset": 59, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 249, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "column_type", "type": "Any"}, {"lineNumber": 281, "col_offset": 60, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "cls", "type": "Type[CategoricalToNumerical]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "instance", "type": "CategoricalToNumerical"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "instance", "type": "CategoricalToNumerical"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "Normalization", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "axis", "type": "int"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "TextVectorization", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "Union", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "Int", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "TextVectorization", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 129, "col_offset": 64, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "_get_fraction_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 211, "col_offset": 39, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 220, "col_offset": 67, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 227, "col_offset": 72, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "height_factor", "type": "Any"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "width_factor", "type": "Any"}, {"lineNumber": 234, "col_offset": 42, "nodeName": "_get_fraction_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 67, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 244, "col_offset": 72, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 254, "col_offset": 33, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 267, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "column_type", "type": "Any"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "CATEGORICAL", "type": "str"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "MultiCategoryEncoding", "type": "Any"}, {"lineNumber": 281, "col_offset": 50, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 295, "col_offset": 64, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "axis", "type": "int"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "self", "type": "Normalization"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "hp", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 129, "col_offset": 64, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "hp", "type": "Any"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "RandomTranslation", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "height_factor", "type": "Any"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "width_factor", "type": "Any"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "hp", "type": "Any"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "hp", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "RandomFlip", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "hp", "type": "Any"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "RandomRotation", "type": "Any"}, {"lineNumber": 227, "col_offset": 55, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "hp", "type": "Any"}, {"lineNumber": 234, "col_offset": 42, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "hp", "type": "Any"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "RandomContrast", "type": "Any"}, {"lineNumber": 244, "col_offset": 55, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 249, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 254, "col_offset": 33, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 275, "col_offset": 44, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "adapters", "type": "module"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "INT", "type": "str"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "NONE", "type": "str"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "keras_layers", "type": "module"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 295, "col_offset": 64, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "self", "type": "Normalization"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "Union", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 217, "col_offset": 37, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 220, "col_offset": 56, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "keras_layers", "type": "module"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "keras_layers", "type": "module"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}]