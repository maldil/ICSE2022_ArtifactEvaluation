[{"lineNumber": 30, "col_offset": 21, "nodeName": "Pretrained", "type": "Type[autokeras.pretrained.base.Pretrained]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "ABC", "type": "Type[abc.ABC]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "TextClassifier", "type": "Type[TextClassifier]"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "TextClassifier", "type": "Type[TextClassifier]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tokenizer", "type": "Optional[autokeras.text.pretrained_bert.tokenization.BertTokenizer]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "model_state_dict", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "eval_sampler", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "eval_dataloader", "type": "Any"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "eval_dataloader", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "SENTIMENT_ANALYSIS_MODELS", "type": "List[autokeras.constant.`namedtuple-GoogleDriveFile-google_drive_id-local_name`]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "TOPIC_CLASSIFIER_MODELS", "type": "List[autokeras.constant.`namedtuple-GoogleDriveFile-google_drive_id-local_name`]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "from_pretrained", "type": "Callable[..., Optional[autokeras.text.pretrained_bert.tokenization.BertTokenizer]]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "load", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "from_pretrained", "type": "Callable[..., Optional[autokeras.text.pretrained_bert.modeling.PreTrainedBertModel]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "to", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "device", "type": "str"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "convert_examples_to_features", "type": "Callable[[Any, Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 59, "col_offset": 86, "nodeName": "tokenizer", "type": "Optional[autokeras.text.pretrained_bert.tokenization.BertTokenizer]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "TensorDataset", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "all_input_ids", "type": "Any"}, {"lineNumber": 62, "col_offset": 49, "nodeName": "all_input_mask", "type": "Any"}, {"lineNumber": 62, "col_offset": 65, "nodeName": "all_segment_ids", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "SequentialSampler", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "segment_ids", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "segment_ids", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "logits", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "logit", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "logits", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "Constant", "type": "Type[autokeras.constant.Constant]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "y_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "x_predict", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "round", "type": "Callable"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "Constant", "type": "Type[autokeras.constant.Constant]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "y_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "x_predict", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "BertTokenizer", "type": "Type[autokeras.text.pretrained_bert.tokenization.BertTokenizer]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "local_paths", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "BertForSequenceClassification", "type": "Type[autokeras.text.pretrained_bert.modeling.BertForSequenceClassification]"}, {"lineNumber": 45, "col_offset": 78, "nodeName": "model_state_dict", "type": "Any"}, {"lineNumber": 46, "col_offset": 78, "nodeName": "num_classes", "type": "None"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "model", "type": "Optional[autokeras.text.pretrained_bert.modeling.PreTrainedBertModel]"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 58, "col_offset": 87, "nodeName": "x_predict", "type": "Any"}, {"lineNumber": 59, "col_offset": 86, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "eval_sampler", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "to", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "device", "type": "str"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "to", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "device", "type": "str"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "to", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "device", "type": "str"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "logits", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "exp", "type": "Any"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "self", "type": "TopicClassifier"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 43, "col_offset": 93, "nodeName": "storage", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "segment_ids", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "segment_ids", "type": "Any"}, {"lineNumber": 74, "col_offset": 60, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "exp", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "logit", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "exp", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "self", "type": "SentimentAnalysis"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "exp", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "detach", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "logits", "type": "Any"}]