[{"lineNumber": 53, "col_offset": 0, "nodeName": "PRETRAINED", "type": "str"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 332, "col_offset": 29, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 411, "col_offset": 18, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 561, "col_offset": 28, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 626, "col_offset": 18, "nodeName": "KerasApplicationBlock", "type": "Type[KerasApplicationBlock]"}, {"lineNumber": 662, "col_offset": 20, "nodeName": "KerasApplicationBlock", "type": "Type[KerasApplicationBlock]"}, {"lineNumber": 690, "col_offset": 24, "nodeName": "KerasApplicationBlock", "type": "Type[KerasApplicationBlock]"}, {"lineNumber": 727, "col_offset": 16, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 807, "col_offset": 16, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "ResNet50", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "ResNet101", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "ResNet152", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "ResNet50V2", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "ResNet101V2", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "ResNet152V2", "type": "Any"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "EfficientNetB0", "type": "Any"}, {"lineNumber": 44, "col_offset": 10, "nodeName": "EfficientNetB1", "type": "Any"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "EfficientNetB2", "type": "Any"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "EfficientNetB3", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "EfficientNetB4", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "EfficientNetB5", "type": "Any"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "EfficientNetB6", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "EfficientNetB7", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "block_module", "type": "module"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "block_module", "type": "module"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "block_module", "type": "module"}, {"lineNumber": 332, "col_offset": 29, "nodeName": "block_module", "type": "module"}, {"lineNumber": 411, "col_offset": 18, "nodeName": "block_module", "type": "module"}, {"lineNumber": 561, "col_offset": 28, "nodeName": "block_module", "type": "module"}, {"lineNumber": 727, "col_offset": 16, "nodeName": "block_module", "type": "module"}, {"lineNumber": 807, "col_offset": 16, "nodeName": "block_module", "type": "module"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "applications", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "applications", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "applications", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "applications", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "applications", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "applications", "type": "Any"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "applications", "type": "Any"}, {"lineNumber": 44, "col_offset": 10, "nodeName": "applications", "type": "Any"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "applications", "type": "Any"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "applications", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "applications", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "applications", "type": "Any"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "applications", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "applications", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "use_batchnorm", "type": "Optional[bool]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "use_batchnorm", "type": "Optional[bool]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "bidirectional", "type": "Optional[bool]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "bidirectional", "type": "Optional[bool]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "layer_type", "type": "Optional[int]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "layer_type", "type": "Optional[int]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "rnn_layers", "type": "Dict[str, Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "num_blocks", "type": "Optional[int]"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "num_blocks", "type": "Optional[int]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "max_pooling", "type": "Optional[bool]"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "max_pooling", "type": "Optional[bool]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "separable", "type": "Optional[bool]"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "separable", "type": "Optional[bool]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "separable", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "separable", "type": "Any"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "separable", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "head_size", "type": "Optional[int]"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "head_size", "type": "Optional[int]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "num_heads", "type": "int"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "num_heads", "type": "int"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "num_heads", "type": "int"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "num_heads", "type": "int"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "projection_dim", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "query_dense", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "key_dense", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "value_dense", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "combine_heads", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "dim_key", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "scaled_score", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "max_features", "type": "int"}, {"lineNumber": 464, "col_offset": 28, "nodeName": "max_features", "type": "int"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "pretraining", "type": "Optional[str]"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "pretraining", "type": "Optional[str]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "embedding_dim", "type": "Optional[int]"}, {"lineNumber": 466, "col_offset": 29, "nodeName": "embedding_dim", "type": "Optional[int]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "num_heads", "type": "Optional[int]"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "num_heads", "type": "Optional[int]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "dense_dim", "type": "Optional[int]"}, {"lineNumber": 468, "col_offset": 25, "nodeName": "dense_dim", "type": "Optional[int]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "dropout", "type": "Optional[int]"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "dropout", "type": "Optional[int]"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "layernorm1", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "layernorm2", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "dropout1", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "dropout2", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "attn_output", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "add_inputs_1", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "out1", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "ffn_output", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "ffn_output", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "add_inputs_2", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "pos_ones", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "positions", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 566, "col_offset": 26, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "models", "type": "Any"}, {"lineNumber": 567, "col_offset": 22, "nodeName": "models", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 568, "col_offset": 24, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 578, "col_offset": 21, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 600, "col_offset": 19, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 615, "col_offset": 11, "nodeName": "pretrained", "type": "Union[Any, bool]"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 654, "col_offset": 23, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 659, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 724, "col_offset": 23, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "max_features", "type": "int"}, {"lineNumber": 753, "col_offset": 28, "nodeName": "max_features", "type": "int"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "pretraining", "type": "Optional[str]"}, {"lineNumber": 754, "col_offset": 27, "nodeName": "pretraining", "type": "Optional[str]"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "embedding_dim", "type": "Optional[int]"}, {"lineNumber": 755, "col_offset": 29, "nodeName": "embedding_dim", "type": "Optional[int]"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 756, "col_offset": 23, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 768, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 804, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 835, "col_offset": 8, "nodeName": "max_sequence_length", "type": "Optional[int]"}, {"lineNumber": 835, "col_offset": 35, "nodeName": "max_sequence_length", "type": "Optional[int]"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 840, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 843, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 852, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "bert_encoder", "type": "Any"}, {"lineNumber": 856, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 859, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "get_hyperparameter", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "deserialize", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "cls", "type": "Type[DenseBlock]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "hp", "type": "Any"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "units", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "GRU", "type": "Any"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "rnn_layers", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "get_hyperparameter", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 273, "col_offset": 32, "nodeName": "deserialize", "type": "Any"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "cls", "type": "Type[ConvBlock]"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 277, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 278, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "add_to_hp", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 38, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 282, "col_offset": 56, "nodeName": "hp", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "separable", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "separable", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 295, "col_offset": 11, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "get_max_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 300, "col_offset": 22, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 343, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 364, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "num_heads", "type": "int"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 374, "col_offset": 35, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 376, "col_offset": 35, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 377, "col_offset": 37, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "query_dense", "type": "Any"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 380, "col_offset": 14, "nodeName": "key_dense", "type": "Any"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "value_dense", "type": "Any"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "attention", "type": "Any"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "weights", "type": "Any"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "attention", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 386, "col_offset": 44, "nodeName": "query", "type": "Any"}, {"lineNumber": 386, "col_offset": 51, "nodeName": "key", "type": "Any"}, {"lineNumber": 386, "col_offset": 56, "nodeName": "value", "type": "Any"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "attention", "type": "Any"}, {"lineNumber": 390, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "attention", "type": "Any"}, {"lineNumber": 393, "col_offset": 17, "nodeName": "combine_heads", "type": "Any"}, {"lineNumber": 393, "col_offset": 31, "nodeName": "concat_attention", "type": "Any"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 398, "col_offset": 26, "nodeName": "query", "type": "Any"}, {"lineNumber": 398, "col_offset": 33, "nodeName": "key", "type": "Any"}, {"lineNumber": 399, "col_offset": 18, "nodeName": "cast", "type": "Any"}, {"lineNumber": 399, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "score", "type": "Any"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 401, "col_offset": 32, "nodeName": "scaled_score", "type": "Any"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "weights", "type": "Any"}, {"lineNumber": 402, "col_offset": 36, "nodeName": "value", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 403, "col_offset": 23, "nodeName": "weights", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 407, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 408, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 472, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 494, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 495, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 501, "col_offset": 24, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 504, "col_offset": 20, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 506, "col_offset": 20, "nodeName": "dense_dim", "type": "Any"}, {"lineNumber": 509, "col_offset": 18, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 511, "col_offset": 14, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "LayerNormalization", "type": "Any"}, {"lineNumber": 519, "col_offset": 21, "nodeName": "LayerNormalization", "type": "Any"}, {"lineNumber": 520, "col_offset": 19, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 520, "col_offset": 34, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 521, "col_offset": 19, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 521, "col_offset": 34, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 529, "col_offset": 16, "nodeName": "hp", "type": "Any"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 530, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "pos_array_funct", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 532, "col_offset": 41, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 532, "col_offset": 49, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "hp", "type": "Any"}, {"lineNumber": 538, "col_offset": 20, "nodeName": "positions", "type": "Any"}, {"lineNumber": 540, "col_offset": 22, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "hp", "type": "Any"}, {"lineNumber": 541, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "dropout1", "type": "Any"}, {"lineNumber": 543, "col_offset": 31, "nodeName": "attn_output", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "layernorm1", "type": "Any"}, {"lineNumber": 545, "col_offset": 26, "nodeName": "add_inputs_1", "type": "Any"}, {"lineNumber": 546, "col_offset": 21, "nodeName": "ffn", "type": "Any"}, {"lineNumber": 546, "col_offset": 25, "nodeName": "out1", "type": "Any"}, {"lineNumber": 547, "col_offset": 21, "nodeName": "dropout2", "type": "Any"}, {"lineNumber": 547, "col_offset": 30, "nodeName": "ffn_output", "type": "Any"}, {"lineNumber": 549, "col_offset": 17, "nodeName": "layernorm2", "type": "Any"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "add_inputs_2", "type": "Any"}, {"lineNumber": 554, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 555, "col_offset": 20, "nodeName": "range", "type": "Any"}, {"lineNumber": 556, "col_offset": 20, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 556, "col_offset": 35, "nodeName": "positions", "type": "Any"}, {"lineNumber": 557, "col_offset": 20, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 557, "col_offset": 30, "nodeName": "pos_ones", "type": "Any"}, {"lineNumber": 557, "col_offset": 40, "nodeName": "positions", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "self", "type": "EfficientNetBlock"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "self", "type": "EfficientNetBlock"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "self", "type": "EfficientNetBlock"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 578, "col_offset": 21, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 580, "col_offset": 15, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "pretrained", "type": "bool"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "pretrained", "type": "Union[Any, bool]"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 589, "col_offset": 15, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "pretrained", "type": "Union[Any, bool]"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "version", "type": "Any"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "version", "type": "Any"}, {"lineNumber": 600, "col_offset": 19, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 601, "col_offset": 11, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 602, "col_offset": 12, "nodeName": "min_size", "type": "int"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 617, "col_offset": 30, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 623, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 623, "col_offset": 21, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 642, "col_offset": 11, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 657, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Any]"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 707, "col_offset": 11, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 708, "col_offset": 21, "nodeName": "EFFICIENT_VERSIONS", "type": "Dict[str, Any]"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "self", "type": "EfficientNetBlock"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 759, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 774, "col_offset": 22, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 779, "col_offset": 24, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 782, "col_offset": 11, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 797, "col_offset": 22, "nodeName": "layer", "type": "Any"}, {"lineNumber": 797, "col_offset": 28, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 798, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 799, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 799, "col_offset": 22, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 801, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 802, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 803, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 835, "col_offset": 8, "nodeName": "self", "type": "BertBlock"}, {"lineNumber": 838, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 845, "col_offset": 30, "nodeName": "max_sequence_length", "type": "Any"}, {"lineNumber": 849, "col_offset": 26, "nodeName": "BertTokenizer", "type": "Any"}, {"lineNumber": 852, "col_offset": 22, "nodeName": "tokenizer_layer", "type": "Any"}, {"lineNumber": 852, "col_offset": 38, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 854, "col_offset": 23, "nodeName": "BertEncoder", "type": "Any"}, {"lineNumber": 856, "col_offset": 22, "nodeName": "bert_encoder", "type": "Any"}, {"lineNumber": 856, "col_offset": 35, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "load_pretrained_weights", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "config", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "add_to_hp", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "hp", "type": "Any"}, {"lineNumber": 126, "col_offset": 46, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 196, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "layers", "type": "Any"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "utils", "type": "module"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 263, "col_offset": 30, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "separable", "type": "Any"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 273, "col_offset": 32, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 273, "col_offset": 60, "nodeName": "config", "type": "Any"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "utils", "type": "module"}, {"lineNumber": 282, "col_offset": 38, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 283, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "get_sep_conv", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "get_conv", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 296, "col_offset": 26, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "layer_utils", "type": "module"}, {"lineNumber": 297, "col_offset": 43, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 300, "col_offset": 22, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 305, "col_offset": 27, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 345, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 351, "col_offset": 36, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 351, "col_offset": 65, "nodeName": "num_heads", "type": "int"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 370, "col_offset": 14, "nodeName": "num_heads", "type": "int"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "layers", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "layers", "type": "Any"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "layers", "type": "Any"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 378, "col_offset": 30, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 390, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 391, "col_offset": 60, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 399, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 399, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 400, "col_offset": 31, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 400, "col_offset": 44, "nodeName": "dim_key", "type": "Any"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 407, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 407, "col_offset": 43, "nodeName": "num_heads", "type": "int"}, {"lineNumber": 407, "col_offset": 54, "nodeName": "projection_dim", "type": "Any"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 463, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 475, "col_offset": 32, "nodeName": "max_features", "type": "int"}, {"lineNumber": 476, "col_offset": 31, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 477, "col_offset": 33, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 478, "col_offset": 29, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 479, "col_offset": 29, "nodeName": "dense_dim", "type": "Any"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 496, "col_offset": 42, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 501, "col_offset": 24, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 501, "col_offset": 46, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 504, "col_offset": 20, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 504, "col_offset": 38, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 506, "col_offset": 20, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 506, "col_offset": 38, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 509, "col_offset": 18, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 509, "col_offset": 34, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 511, "col_offset": 14, "nodeName": "keras", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "layers", "type": "Any"}, {"lineNumber": 519, "col_offset": 21, "nodeName": "layers", "type": "Any"}, {"lineNumber": 520, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 521, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 523, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 523, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 530, "col_offset": 17, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 531, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 531, "col_offset": 30, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 539, "col_offset": 22, "nodeName": "Add", "type": "Any"}, {"lineNumber": 539, "col_offset": 45, "nodeName": "token_embedding", "type": "Any"}, {"lineNumber": 539, "col_offset": 62, "nodeName": "position_embedding", "type": "Any"}, {"lineNumber": 544, "col_offset": 23, "nodeName": "Add", "type": "Any"}, {"lineNumber": 544, "col_offset": 46, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 544, "col_offset": 59, "nodeName": "attn_output", "type": "Any"}, {"lineNumber": 548, "col_offset": 23, "nodeName": "Add", "type": "Any"}, {"lineNumber": 548, "col_offset": 46, "nodeName": "out1", "type": "Any"}, {"lineNumber": 548, "col_offset": 52, "nodeName": "ffn_output", "type": "Any"}, {"lineNumber": 554, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 554, "col_offset": 28, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 554, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 555, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 555, "col_offset": 44, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 556, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 557, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 565, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[int, Dict[Optional[str], Any], Dict[str, Any], bool, Any]]]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 572, "col_offset": 37, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 576, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 576, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 580, "col_offset": 15, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 588, "col_offset": 25, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 588, "col_offset": 36, "nodeName": "PRETRAINED", "type": "str"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 595, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 595, "col_offset": 15, "nodeName": "models", "type": "Any"}, {"lineNumber": 596, "col_offset": 22, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 601, "col_offset": 11, "nodeName": "hp", "type": "Any"}, {"lineNumber": 603, "col_offset": 33, "nodeName": "min_size", "type": "Union[int, Any]"}, {"lineNumber": 603, "col_offset": 67, "nodeName": "min_size", "type": "Union[int, Any]"}, {"lineNumber": 607, "col_offset": 14, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 608, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 610, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 617, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 639, "col_offset": 20, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 643, "col_offset": 24, "nodeName": "RESNET_V1", "type": "Dict[str, Any]"}, {"lineNumber": 643, "col_offset": 37, "nodeName": "RESNET_V2", "type": "Dict[str, Any]"}, {"lineNumber": 644, "col_offset": 13, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 645, "col_offset": 21, "nodeName": "RESNET_V1", "type": "Dict[str, Any]"}, {"lineNumber": 653, "col_offset": 36, "nodeName": "pretrained", "type": "Optional[bool]"}, {"lineNumber": 653, "col_offset": 55, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 653, "col_offset": 78, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 658, "col_offset": 34, "nodeName": "version", "type": "Any"}, {"lineNumber": 681, "col_offset": 35, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 683, "col_offset": 23, "nodeName": "pretrained", "type": "Optional[bool]"}, {"lineNumber": 686, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 704, "col_offset": 20, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 709, "col_offset": 13, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "models", "type": "Dict[Optional[str], Any]"}, {"lineNumber": 719, "col_offset": 23, "nodeName": "pretrained", "type": "Optional[bool]"}, {"lineNumber": 720, "col_offset": 19, "nodeName": "models", "type": "Union[Dict[Optional[str], Any], Dict[str, Any]]"}, {"lineNumber": 722, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 749, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 752, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 762, "col_offset": 32, "nodeName": "max_features", "type": "int"}, {"lineNumber": 763, "col_offset": 31, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 764, "col_offset": 33, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 765, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 771, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 771, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 774, "col_offset": 22, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 774, "col_offset": 42, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 779, "col_offset": 24, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 779, "col_offset": 46, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 784, "col_offset": 20, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 792, "col_offset": 20, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 798, "col_offset": 11, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 799, "col_offset": 22, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 801, "col_offset": 22, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 803, "col_offset": 50, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 831, "col_offset": 29, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 834, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 839, "col_offset": 46, "nodeName": "max_sequence_length", "type": "Any"}, {"lineNumber": 843, "col_offset": 23, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 843, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 845, "col_offset": 30, "nodeName": "self", "type": "BertBlock"}, {"lineNumber": 845, "col_offset": 58, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 849, "col_offset": 26, "nodeName": "keras_layers", "type": "module"}, {"lineNumber": 850, "col_offset": 32, "nodeName": "max_sequence_length", "type": "Any"}, {"lineNumber": 854, "col_offset": 23, "nodeName": "keras_layers", "type": "module"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "bert_encoder", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "Flatten", "type": "Type[autokeras.blocks.reduction.Flatten]"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "hp", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "hp", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "utils", "type": "module"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 125, "col_offset": 56, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "units", "type": "Any"}, {"lineNumber": 128, "col_offset": 58, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 131, "col_offset": 54, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "hp", "type": "Any"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 196, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 261, "col_offset": 31, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 261, "col_offset": 57, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 263, "col_offset": 30, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 283, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "hp", "type": "Any"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "layer_utils", "type": "module"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "layer_utils", "type": "module"}, {"lineNumber": 292, "col_offset": 40, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 296, "col_offset": 26, "nodeName": "hp", "type": "Any"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "hp", "type": "Any"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 322, "col_offset": 54, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "length", "type": "Any"}, {"lineNumber": 327, "col_offset": 46, "nodeName": "length", "type": "Any"}, {"lineNumber": 343, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 351, "col_offset": 36, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 351, "col_offset": 65, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 369, "col_offset": 15, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 384, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 384, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 384, "col_offset": 36, "nodeName": "value", "type": "Any"}, {"lineNumber": 391, "col_offset": 60, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 399, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 400, "col_offset": 31, "nodeName": "math", "type": "Any"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 460, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 472, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 475, "col_offset": 32, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 476, "col_offset": 31, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 477, "col_offset": 33, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 478, "col_offset": 29, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 479, "col_offset": 29, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 496, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 501, "col_offset": 46, "nodeName": "hp", "type": "Any"}, {"lineNumber": 504, "col_offset": 38, "nodeName": "hp", "type": "Any"}, {"lineNumber": 506, "col_offset": 38, "nodeName": "hp", "type": "Any"}, {"lineNumber": 509, "col_offset": 34, "nodeName": "hp", "type": "Any"}, {"lineNumber": 511, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 513, "col_offset": 16, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 513, "col_offset": 29, "nodeName": "dense_dim", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 514, "col_offset": 29, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 523, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 524, "col_offset": 26, "nodeName": "Embedding", "type": "Type[Embedding]"}, {"lineNumber": 531, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 533, "col_offset": 29, "nodeName": "Embedding", "type": "Type[Embedding]"}, {"lineNumber": 539, "col_offset": 22, "nodeName": "layers", "type": "Any"}, {"lineNumber": 540, "col_offset": 22, "nodeName": "MultiHeadSelfAttention", "type": "Type[MultiHeadSelfAttention]"}, {"lineNumber": 540, "col_offset": 45, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 540, "col_offset": 60, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 544, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 548, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 554, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 572, "col_offset": 37, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 576, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 588, "col_offset": 25, "nodeName": "hp", "type": "Any"}, {"lineNumber": 591, "col_offset": 20, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 593, "col_offset": 24, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 595, "col_offset": 15, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 596, "col_offset": 22, "nodeName": "hp", "type": "Any"}, {"lineNumber": 596, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 598, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 603, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 604, "col_offset": 25, "nodeName": "Resizing", "type": "Any"}, {"lineNumber": 608, "col_offset": 11, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 609, "col_offset": 25, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 610, "col_offset": 11, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 611, "col_offset": 25, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 616, "col_offset": 20, "nodeName": "models", "type": "Any"}, {"lineNumber": 619, "col_offset": 20, "nodeName": "models", "type": "Any"}, {"lineNumber": 639, "col_offset": 29, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 646, "col_offset": 13, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 647, "col_offset": 21, "nodeName": "RESNET_V2", "type": "Dict[str, Any]"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 657, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 658, "col_offset": 34, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 681, "col_offset": 44, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 684, "col_offset": 32, "nodeName": "Xception", "type": "Any"}, {"lineNumber": 704, "col_offset": 29, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 709, "col_offset": 24, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 710, "col_offset": 22, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 712, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 749, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 759, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 762, "col_offset": 32, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 763, "col_offset": 31, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 764, "col_offset": 33, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 765, "col_offset": 27, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 771, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 774, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 779, "col_offset": 46, "nodeName": "hp", "type": "Any"}, {"lineNumber": 784, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 785, "col_offset": 26, "nodeName": "max_features", "type": "int"}, {"lineNumber": 786, "col_offset": 27, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 792, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 793, "col_offset": 26, "nodeName": "max_features", "type": "int"}, {"lineNumber": 793, "col_offset": 56, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 801, "col_offset": 22, "nodeName": "hp", "type": "Any"}, {"lineNumber": 803, "col_offset": 26, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 803, "col_offset": 41, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 831, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 838, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 839, "col_offset": 46, "nodeName": "self", "type": "BertBlock"}, {"lineNumber": 843, "col_offset": 23, "nodeName": "nest", "type": "Any"}, {"lineNumber": 845, "col_offset": 58, "nodeName": "hp", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "reduction", "type": "module"}, {"lineNumber": 125, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 184, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 204, "col_offset": 30, "nodeName": "Bidirectional", "type": "Any"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 261, "col_offset": 31, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 261, "col_offset": 57, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 306, "col_offset": 30, "nodeName": "conv", "type": "Any"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "pool", "type": "Any"}, {"lineNumber": 322, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 322, "col_offset": 45, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 327, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 369, "col_offset": 15, "nodeName": "hp", "type": "Any"}, {"lineNumber": 391, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 391, "col_offset": 45, "nodeName": "attention", "type": "Any"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 400, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 513, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 525, "col_offset": 25, "nodeName": "max_features", "type": "int"}, {"lineNumber": 526, "col_offset": 24, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 527, "col_offset": 26, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 534, "col_offset": 25, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 535, "col_offset": 24, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 536, "col_offset": 26, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 537, "col_offset": 20, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 539, "col_offset": 22, "nodeName": "keras", "type": "Any"}, {"lineNumber": 544, "col_offset": 23, "nodeName": "keras", "type": "Any"}, {"lineNumber": 548, "col_offset": 23, "nodeName": "keras", "type": "Any"}, {"lineNumber": 582, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 590, "col_offset": 21, "nodeName": "conditional_scope", "type": "Any"}, {"lineNumber": 590, "col_offset": 42, "nodeName": "PRETRAINED", "type": "str"}, {"lineNumber": 591, "col_offset": 32, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 593, "col_offset": 24, "nodeName": "hp", "type": "Any"}, {"lineNumber": 596, "col_offset": 48, "nodeName": "keys", "type": "Any"}, {"lineNumber": 598, "col_offset": 27, "nodeName": "keys", "type": "Any"}, {"lineNumber": 603, "col_offset": 11, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 603, "col_offset": 45, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 604, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 605, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 605, "col_offset": 20, "nodeName": "min_size", "type": "Union[int, Any]"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "min_size", "type": "Union[int, Any]"}, {"lineNumber": 609, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 609, "col_offset": 47, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 611, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 616, "col_offset": 20, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 616, "col_offset": 32, "nodeName": "version", "type": "Any"}, {"lineNumber": 619, "col_offset": 20, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 619, "col_offset": 32, "nodeName": "version", "type": "Any"}, {"lineNumber": 620, "col_offset": 61, "nodeName": "shape", "type": "Any"}, {"lineNumber": 649, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 684, "col_offset": 32, "nodeName": "applications", "type": "Any"}, {"lineNumber": 709, "col_offset": 24, "nodeName": "EFFICIENT_VERSIONS", "type": "Dict[str, Any]"}, {"lineNumber": 710, "col_offset": 31, "nodeName": "EFFICIENT_VERSIONS", "type": "Dict[str, Any]"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 785, "col_offset": 26, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 787, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 793, "col_offset": 26, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 803, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 184, "col_offset": 47, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 204, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 322, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 327, "col_offset": 56, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 391, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 525, "col_offset": 25, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 539, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 544, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 548, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 590, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 591, "col_offset": 32, "nodeName": "hp", "type": "Any"}, {"lineNumber": 596, "col_offset": 48, "nodeName": "models", "type": "Any"}, {"lineNumber": 598, "col_offset": 27, "nodeName": "models", "type": "Any"}, {"lineNumber": 604, "col_offset": 25, "nodeName": "experimental", "type": "Any"}, {"lineNumber": 605, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 606, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 620, "col_offset": 61, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 650, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 710, "col_offset": 50, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 715, "col_offset": 68, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 787, "col_offset": 29, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 205, "col_offset": 60, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "hp", "type": "Any"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "_get_padding", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 313, "col_offset": 46, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 313, "col_offset": 59, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 319, "col_offset": 28, "nodeName": "_get_padding", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 319, "col_offset": 63, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 584, "col_offset": 50, "nodeName": "shape", "type": "Any"}, {"lineNumber": 596, "col_offset": 48, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 598, "col_offset": 27, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 604, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 605, "col_offset": 30, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 606, "col_offset": 30, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 651, "col_offset": 44, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 715, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 308, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 308, "col_offset": 56, "nodeName": "j", "type": "int"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 319, "col_offset": 28, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 319, "col_offset": 46, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 584, "col_offset": 50, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 715, "col_offset": 32, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 715, "col_offset": 32, "nodeName": "EFFICIENT_VERSIONS", "type": "Dict[str, Any]"}]