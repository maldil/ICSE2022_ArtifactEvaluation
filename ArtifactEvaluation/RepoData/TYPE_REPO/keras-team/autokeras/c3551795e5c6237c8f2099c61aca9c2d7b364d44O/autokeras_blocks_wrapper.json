[{"lineNumber": 22, "col_offset": 0, "nodeName": "BLOCK_TYPE", "type": "str"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "RESNET", "type": "str"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "XCEPTION", "type": "str"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "VANILLA", "type": "str"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "NORMALIZE", "type": "str"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "AUGMENT", "type": "str"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "TRANSFORMER", "type": "str"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "MAX_TOKENS", "type": "str"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "NGRAM", "type": "str"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "block_module", "type": "module"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "block_module", "type": "module"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "block_module", "type": "module"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "block_module", "type": "module"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "block_module", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "augment", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "augment", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "categorical_encoding", "type": "Any"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "categorical_encoding", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "column_types", "type": "None"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "column_names", "type": "None"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "instance", "type": "StructuredDataBlock"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "instance", "type": "StructuredDataBlock"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "categorical_encoding", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "RESNET", "type": "str"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "augment", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "NGRAM", "type": "str"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "hp", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "TRANSFORMER", "type": "str"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 57, "nodeName": "hp", "type": "Any"}, {"lineNumber": 165, "col_offset": 61, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 47, "nodeName": "hp", "type": "Any"}, {"lineNumber": 166, "col_offset": 51, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "cls", "type": "Type[StructuredDataBlock]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "instance", "type": "StructuredDataBlock"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "instance", "type": "StructuredDataBlock"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "block", "type": "autokeras.blocks.preprocessing.CategoricalToNumerical"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "hp", "type": "Any"}, {"lineNumber": 215, "col_offset": 51, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 45, "nodeName": "hp", "type": "Any"}, {"lineNumber": 230, "col_offset": 49, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "BLOCK_TYPE", "type": "str"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "NORMALIZE", "type": "str"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "AUGMENT", "type": "str"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "augment", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "hp", "type": "Any"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "XCEPTION", "type": "str"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "NORMALIZE", "type": "str"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "augment", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "AUGMENT", "type": "str"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "BLOCK_TYPE", "type": "str"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "_build_block", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 44, "nodeName": "hp", "type": "Any"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "BLOCK_TYPE", "type": "str"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "MAX_TOKENS", "type": "str"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "BLOCK_TYPE", "type": "str"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "_build_block", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "hp", "type": "Any"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 141, "col_offset": 61, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "MAX_TOKENS", "type": "str"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "hp", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "hp", "type": "Any"}, {"lineNumber": 152, "col_offset": 48, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "hp", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "hp", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "hp", "type": "Any"}, {"lineNumber": 164, "col_offset": 54, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "categorical_encoding", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "seed", "type": "Any"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "CategoricalToNumerical", "type": "Type[autokeras.blocks.preprocessing.CategoricalToNumerical]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "block", "type": "autokeras.blocks.preprocessing.CategoricalToNumerical"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "block", "type": "autokeras.blocks.preprocessing.CategoricalToNumerical"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 38, "nodeName": "hp", "type": "Any"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "hp", "type": "Any"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "VANILLA", "type": "str"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "hp", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "conditional_scope", "type": "Any"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "NORMALIZE", "type": "str"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 66, "nodeName": "hp", "type": "Any"}, {"lineNumber": 79, "col_offset": 70, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "hp", "type": "Any"}, {"lineNumber": 81, "col_offset": 66, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "hp", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "conditional_scope", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "AUGMENT", "type": "str"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "hp", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 66, "nodeName": "hp", "type": "Any"}, {"lineNumber": 89, "col_offset": 70, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "hp", "type": "Any"}, {"lineNumber": 92, "col_offset": 48, "nodeName": "RESNET", "type": "str"}, {"lineNumber": 92, "col_offset": 56, "nodeName": "XCEPTION", "type": "str"}, {"lineNumber": 92, "col_offset": 66, "nodeName": "VANILLA", "type": "str"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "conditional_scope", "type": "Any"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "BLOCK_TYPE", "type": "str"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "_build_block", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "hp", "type": "Any"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 94, "col_offset": 65, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "hp", "type": "Any"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "VANILLA", "type": "str"}, {"lineNumber": 137, "col_offset": 57, "nodeName": "TRANSFORMER", "type": "str"}, {"lineNumber": 137, "col_offset": 70, "nodeName": "NGRAM", "type": "str"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "conditional_scope", "type": "Any"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "BLOCK_TYPE", "type": "str"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "_build_block", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "hp", "type": "Any"}, {"lineNumber": 139, "col_offset": 52, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 139, "col_offset": 65, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 141, "col_offset": 61, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "TextToIntSequence", "type": "Type[autokeras.blocks.preprocessing.TextToIntSequence]"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "SpatialReduction", "type": "Type[autokeras.blocks.reduction.SpatialReduction]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "self", "type": "StructuredDataBlock"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "preprocessing", "type": "module"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "block", "type": "autokeras.blocks.preprocessing.CategoricalToNumerical"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "hp", "type": "Any"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "hp", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "hp", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "hp", "type": "Any"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "self", "type": "ImageBlock"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "hp", "type": "Any"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "block_type", "type": "Any"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "TextToNgramVector", "type": "Type[autokeras.blocks.preprocessing.TextToNgramVector]"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "preprocessing", "type": "module"}, {"lineNumber": 153, "col_offset": 65, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "reduction", "type": "module"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "basic", "type": "module"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "basic", "type": "module"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "basic", "type": "module"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "basic", "type": "module"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "Normalization", "type": "Type[autokeras.blocks.preprocessing.Normalization]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "Normalization", "type": "Type[autokeras.blocks.preprocessing.Normalization]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "ImageAugmentation", "type": "Type[autokeras.blocks.preprocessing.ImageAugmentation]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "ImageAugmentation", "type": "Type[autokeras.blocks.preprocessing.ImageAugmentation]"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "preprocessing", "type": "module"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "basic", "type": "module"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "basic", "type": "module"}, {"lineNumber": 158, "col_offset": 57, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "basic", "type": "module"}, {"lineNumber": 162, "col_offset": 57, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "basic", "type": "module"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "basic", "type": "module"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "preprocessing", "type": "module"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "preprocessing", "type": "module"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "preprocessing", "type": "module"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "preprocessing", "type": "module"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 158, "col_offset": 57, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "max_tokens", "type": "Any"}, {"lineNumber": 162, "col_offset": 57, "nodeName": "self", "type": "TextBlock"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "basic", "type": "module"}]