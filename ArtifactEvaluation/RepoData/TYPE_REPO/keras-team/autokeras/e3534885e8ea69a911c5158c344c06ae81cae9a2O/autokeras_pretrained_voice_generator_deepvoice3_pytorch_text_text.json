[{"lineNumber": 14, "col_offset": 0, "nodeName": "text_to_sequence", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "_clean_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "_symbols_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "_arpabet_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "_should_keep_symbol", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "_symbol_to_id", "type": "Dict[str, int]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "_id_to_symbol", "type": "Dict[int, str]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "_curly_re", "type": "Pattern[str]"}, {"lineNumber": 7, "col_offset": 17, "nodeName": "s", "type": "str"}, {"lineNumber": 7, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 8, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 8, "col_offset": 20, "nodeName": "s", "type": "str"}, {"lineNumber": 11, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "sequence", "type": "List[int]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "sequence", "type": "Union[List[int], List[Any]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "cleaner_names", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "text", "type": "Any"}, {"lineNumber": 11, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "text", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "sequence", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "sequence", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "cleaner", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "_symbols_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 7, "col_offset": 29, "nodeName": "s", "type": "str"}, {"lineNumber": 7, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 7, "col_offset": 44, "nodeName": "symbols", "type": "List[str]"}, {"lineNumber": 8, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 8, "col_offset": 29, "nodeName": "s", "type": "str"}, {"lineNumber": 8, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 8, "col_offset": 44, "nodeName": "symbols", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "match", "type": "Callable"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "sequence", "type": "Union[List[int], List[Any]]"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "_symbols_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "_arpabet_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "group", "type": "Callable"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "sequence", "type": "Union[List[int], List[Any]]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "_symbol_to_id", "type": "Dict[str, int]"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "cleaners", "type": "module"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "cleaner", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "text", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "_symbol_to_id", "type": "Dict[str, int]"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "symbols", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "_symbol_to_id", "type": "Dict[str, int]"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "s", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "_curly_re", "type": "Pattern[str]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "_symbols_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "_clean_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 65, "nodeName": "cleaner_names", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "group", "type": "Callable"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "s", "type": "str"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "_should_keep_symbol", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 69, "nodeName": "s", "type": "str"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "s", "type": "Any"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "s", "type": "Any"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "_clean_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 57, "nodeName": "text", "type": "Union[Any, str]"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "cleaner_names", "type": "Any"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "group", "type": "Callable"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "split", "type": "Any"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "text", "type": "Any"}]