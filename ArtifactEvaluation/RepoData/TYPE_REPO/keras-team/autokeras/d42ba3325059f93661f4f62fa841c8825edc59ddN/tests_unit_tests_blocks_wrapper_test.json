[{"lineNumber": 24, "col_offset": 0, "nodeName": "test_image_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_image_block_xception_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "test_image_block_normalize_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_image_block_augment_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "test_image_deserialize_to_image", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "test_image_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_text_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_text_block_ngram_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "test_text_block_transformer_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "test_text_deserialize_to_text", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "test_text_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "test_structured_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "test_structured_block_normalize_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "test_structured_block_search_normalize_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "test_structured_deserialize_to_structured", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "test_structured_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "test_timeseries_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "test_timeseries_deserialize_to_timeseries", "type": "Callable[[], Any]"}, {"lineNumber": 204, "col_offset": 0, "nodeName": "test_timeseries_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "column_types", "type": "Dict[str, str]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "column_types", "type": "Dict[str, str]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "column_types", "type": "Dict[str, str]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "hp", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "column_types", "type": "Dict[str, str]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 157, "col_offset": 57, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 158, "col_offset": 9, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "hp", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "TimeseriesBlock", "type": "Type[autokeras.blocks.wrapper.TimeseriesBlock]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 187, "col_offset": 57, "nodeName": "NUMERICAL", "type": "str"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "TimeseriesBlock", "type": "Type[autokeras.blocks.wrapper.TimeseriesBlock]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "TimeseriesBlock", "type": "Type[autokeras.blocks.wrapper.TimeseriesBlock]"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.wrapper.ImageBlock"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.wrapper.TextBlock"}, {"lineNumber": 127, "col_offset": 67, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "analysers", "type": "module"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "analysers", "type": "module"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "analysers", "type": "module"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "analysers", "type": "module"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "analysers", "type": "module"}, {"lineNumber": 157, "col_offset": 57, "nodeName": "analysers", "type": "module"}, {"lineNumber": 158, "col_offset": 9, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "hp", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "Input", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.wrapper.StructuredDataBlock"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "analysers", "type": "module"}, {"lineNumber": 187, "col_offset": 57, "nodeName": "analysers", "type": "module"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "TimeseriesBlock", "type": "Type[autokeras.blocks.wrapper.TimeseriesBlock]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.wrapper.TimeseriesBlock"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 88, "col_offset": 71, "nodeName": "string", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 98, "col_offset": 71, "nodeName": "string", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 108, "col_offset": 71, "nodeName": "string", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 67, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 136, "col_offset": 71, "nodeName": "string", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 148, "col_offset": 71, "nodeName": "string", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "NORMALIZE", "type": "str"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "keras", "type": "Any"}, {"lineNumber": 161, "col_offset": 63, "nodeName": "string", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 190, "col_offset": 74, "nodeName": "float32", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "ImageBlock", "type": "Type[autokeras.blocks.wrapper.ImageBlock]"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "TextBlock", "type": "Type[autokeras.blocks.wrapper.TextBlock]"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 136, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "wrapper", "type": "module"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "StructuredDataBlock", "type": "Type[autokeras.blocks.wrapper.StructuredDataBlock]"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 190, "col_offset": 74, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "TimeseriesBlock", "type": "Type[autokeras.blocks.wrapper.TimeseriesBlock]"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "blocks", "type": "module"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "blocks", "type": "module"}]