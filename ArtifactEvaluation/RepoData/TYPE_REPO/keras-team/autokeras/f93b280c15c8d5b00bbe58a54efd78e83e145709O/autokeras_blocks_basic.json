[{"lineNumber": 14, "col_offset": 0, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "HyperResNet", "type": "Any"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "HyperXception", "type": "Any"}, {"lineNumber": 309, "col_offset": 44, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "full_name", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "block_module", "type": "module"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "block_module", "type": "module"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "block_module", "type": "module"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "resnet", "type": "Any"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "block_module", "type": "module"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "xception", "type": "Any"}, {"lineNumber": 309, "col_offset": 44, "nodeName": "block_module", "type": "module"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "block_module", "type": "module"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "_get_name", "type": "Any"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "name", "type": "str"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "use_batchnorm", "type": "Optional[bool]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "use_batchnorm", "type": "Optional[bool]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "dropout_rate", "type": "Optional[float]"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "dropout_rate", "type": "Optional[float]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "bidirectional", "type": "Optional[bool]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "bidirectional", "type": "Optional[bool]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "layer_type", "type": "Optional[int]"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "layer_type", "type": "Optional[int]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "kernel_size", "type": "Optional[int]"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "kernel_size", "type": "Optional[int]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "num_blocks", "type": "Optional[int]"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "num_blocks", "type": "Optional[int]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "max_pooling", "type": "Optional[bool]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "max_pooling", "type": "Optional[bool]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "separable", "type": "Optional[bool]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "separable", "type": "Optional[bool]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "dropout_rate", "type": "Optional[float]"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "dropout_rate", "type": "Optional[float]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "separable", "type": "Any"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "separable", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "separable", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "pooling", "type": "Optional[str]"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "pooling", "type": "Optional[str]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "input_shape", "type": "None"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "activation", "type": "Optional[str]"}, {"lineNumber": 346, "col_offset": 26, "nodeName": "activation", "type": "Optional[str]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "initial_strides", "type": "Optional[int]"}, {"lineNumber": 347, "col_offset": 31, "nodeName": "initial_strides", "type": "Optional[int]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "num_residual_blocks", "type": "Optional[int]"}, {"lineNumber": 348, "col_offset": 35, "nodeName": "num_residual_blocks", "type": "Optional[int]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "pooling", "type": "Optional[str]"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "pooling", "type": "Optional[str]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "input_shape", "type": "None"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "max_features", "type": "int"}, {"lineNumber": 403, "col_offset": 28, "nodeName": "max_features", "type": "int"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "pretraining", "type": "Optional[str]"}, {"lineNumber": 404, "col_offset": 27, "nodeName": "pretraining", "type": "Optional[str]"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "embedding_dim", "type": "Optional[int]"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "embedding_dim", "type": "Optional[int]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "dropout_rate", "type": "Optional[float]"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "dropout_rate", "type": "Optional[float]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 415, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "hp", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "hp", "type": "Any"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "full_name", "type": "Any"}, {"lineNumber": 16, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "hp", "type": "Any"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "GRU", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "rnn_layers", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 204, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "separable", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "separable", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "get_max_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 302, "col_offset": 36, "nodeName": "version", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 303, "col_offset": 36, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "build", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "hp", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "Int", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 370, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 370, "col_offset": 39, "nodeName": "activation", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 371, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 371, "col_offset": 44, "nodeName": "initial_strides", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 372, "col_offset": 48, "nodeName": "num_residual_blocks", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 373, "col_offset": 36, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "build", "type": "Any"}, {"lineNumber": 375, "col_offset": 30, "nodeName": "hp", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 421, "col_offset": 22, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 425, "col_offset": 24, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "layer", "type": "Any"}, {"lineNumber": 443, "col_offset": 28, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 444, "col_offset": 11, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 448, "col_offset": 11, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 16, "col_offset": 36, "nodeName": "hp", "type": "Any"}, {"lineNumber": 16, "col_offset": 46, "nodeName": "full_name", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "separable", "type": "Any"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 212, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 215, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "get_sep_conv", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "get_conv", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "layer_utils", "type": "module"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 278, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 283, "col_offset": 65, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "classes", "type": "Any"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "version", "type": "Any"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 296, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 302, "col_offset": 36, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 303, "col_offset": 36, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 337, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 343, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 345, "col_offset": 65, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 354, "col_offset": 23, "nodeName": "classes", "type": "Any"}, {"lineNumber": 355, "col_offset": 26, "nodeName": "activation", "type": "Any"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "initial_strides", "type": "Any"}, {"lineNumber": 357, "col_offset": 35, "nodeName": "num_residual_blocks", "type": "Any"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 362, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 370, "col_offset": 39, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 371, "col_offset": 44, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 372, "col_offset": 48, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 373, "col_offset": 36, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 400, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "max_features", "type": "int"}, {"lineNumber": 412, "col_offset": 27, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 413, "col_offset": 29, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 418, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 421, "col_offset": 22, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 421, "col_offset": 42, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 425, "col_offset": 24, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 425, "col_offset": 46, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 431, "col_offset": 20, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 438, "col_offset": 20, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 444, "col_offset": 11, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 447, "col_offset": 27, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 449, "col_offset": 55, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "Flatten", "type": "Type[autokeras.blocks.reduction.Flatten]"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "hp", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "hp", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "hp", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "units", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 75, "col_offset": 59, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "hp", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 149, "col_offset": 65, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 153, "col_offset": 55, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 212, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 215, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "hp", "type": "Any"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "layer_utils", "type": "module"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "layer_utils", "type": "module"}, {"lineNumber": 225, "col_offset": 40, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "hp", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "hp", "type": "Any"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 250, "col_offset": 60, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 252, "col_offset": 59, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "length", "type": "Any"}, {"lineNumber": 275, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "nest", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 354, "col_offset": 23, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 355, "col_offset": 26, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 357, "col_offset": 35, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "nest", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 400, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 412, "col_offset": 27, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 413, "col_offset": 29, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 421, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 425, "col_offset": 46, "nodeName": "hp", "type": "Any"}, {"lineNumber": 431, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 432, "col_offset": 26, "nodeName": "max_features", "type": "int"}, {"lineNumber": 433, "col_offset": 27, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 438, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 439, "col_offset": 26, "nodeName": "max_features", "type": "int"}, {"lineNumber": 440, "col_offset": 27, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 447, "col_offset": 27, "nodeName": "hp", "type": "Any"}, {"lineNumber": 449, "col_offset": 26, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 449, "col_offset": 41, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "reduction", "type": "module"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 123, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "Bidirectional", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 239, "col_offset": 30, "nodeName": "conv", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "pool", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 252, "col_offset": 45, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 432, "col_offset": 26, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 434, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 439, "col_offset": 26, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 449, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 123, "col_offset": 47, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 434, "col_offset": 29, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "hp", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "_get_padding", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 46, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 244, "col_offset": 59, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "_get_padding", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 250, "col_offset": 46, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 240, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 240, "col_offset": 62, "nodeName": "j", "type": "int"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 249, "col_offset": 46, "nodeName": "kernel_size", "type": "Any"}]