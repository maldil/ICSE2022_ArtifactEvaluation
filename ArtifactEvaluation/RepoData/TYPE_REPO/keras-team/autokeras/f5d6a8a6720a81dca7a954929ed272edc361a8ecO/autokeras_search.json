[{"lineNumber": 22, "col_offset": 0, "nodeName": "contain", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 0, "nodeName": "train", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 0, "nodeName": "same_graph", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "load_model_by_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "load_best_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "get_metric_value_by_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "get_best_model_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "replace_model", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "add_model", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "init_search", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "search", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "maximize_acq", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "acq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "export_json", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "add_child", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "get_leaves", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "get_dict", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "__eq__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "__lt__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "descriptor", "type": "Any"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "descriptors", "type": "Any"}, {"lineNumber": 321, "col_offset": 72, "nodeName": "args", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "MODEL_LEN", "type": "int"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "MODEL_WIDTH", "type": "int"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "BETA", "type": "float"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "KERNEL_LAMBDA", "type": "float"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "history", "type": "List[Dict[str, Any]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "metric", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "path", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "model_count", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "descriptors", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "trainer_args", "type": "Union[Any, Dict[str, int]]"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "trainer_args", "type": "Union[Any, Dict[str, int]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "default_model_len", "type": "Any"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "default_model_len", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "default_model_width", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "default_model_width", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "gpr", "type": "autokeras.bayesian.IncrementalGaussianProcess"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "search_tree", "type": "SearchTree"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "training_queue", "type": "List[Union[Tuple[Any, int, int], Tuple[Any, Any, int]]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "x_queue", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "y_queue", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "beta", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "t_min", "type": "Union[float, Any]"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "t_min", "type": "Union[float, Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "item", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "history", "type": "List[Dict[str, Any]]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "ret", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "descriptor", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "ret", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "model_id", "type": "int"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "model_count", "type": "int"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "model_count", "type": "int"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "child_graph", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "x_queue", "type": "List[nothing]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "y_queue", "type": "List[nothing]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "model_ids", "type": "List[nothing]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "target_graph", "type": "None"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "father_id", "type": "None"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "descriptors", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "pq", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "temp_list", "type": "List[Tuple[Optional[Any], nothing]]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "model_id", "type": "nothing"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "model_ids", "type": "List[nothing]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "temp_list", "type": "List[Tuple[Optional[Any], nothing]]"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "temp_list", "type": "List[Tuple[Optional[Any], nothing]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "t", "type": "float"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "t_min", "type": "Union[float, Any]"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "t_min", "type": "Union[float, Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "max_acq", "type": "int"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "nm_graph", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "operation_history", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "networks", "type": "List[Any]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "model_id", "type": "int"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 267, "col_offset": 27, "nodeName": "networks", "type": "List[Any]"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "tree", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "root", "type": "None"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "adj_list", "type": "Dict[int, List[nothing]]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "v", "type": "nothing"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "ret", "type": "Dict[str, Union[Any, List[Any]]]"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "ret", "type": "Dict[str, Union[Any, List[Any]]]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "father_id", "type": "nothing"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "father_id", "type": "nothing"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 310, "col_offset": 21, "nodeName": "graph", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "graph", "type": "Any"}, {"lineNumber": 321, "col_offset": 11, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 321, "col_offset": 23, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 321, "col_offset": 34, "nodeName": "trainer_args", "type": "Any"}, {"lineNumber": 321, "col_offset": 48, "nodeName": "path", "type": "Any"}, {"lineNumber": 321, "col_offset": 54, "nodeName": "metric", "type": "Any"}, {"lineNumber": 321, "col_offset": 62, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "produce_model", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "set_weight_to_graph", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "loss", "type": "Any"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "graph", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "Constant", "type": "Type[autokeras.constant.Constant]"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "Constant", "type": "Type[autokeras.constant.Constant]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "Constant", "type": "Type[autokeras.constant.Constant]"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "Constant", "type": "Type[autokeras.constant.Constant]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "trainer_args", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "trainer_args", "type": "Dict[str, int]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "trainer_args", "type": "Union[Any, Dict[str, int]]"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "SEARCH_MAX_ITER", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "IncrementalGaussianProcess", "type": "Type[autokeras.bayesian.IncrementalGaussianProcess]"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "kernel_lambda", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "SearchTree", "type": "Type[SearchTree]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "t_min", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "t_min", "type": "float"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "T_MIN", "type": "float"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "pickle_from_file", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "load_model_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "pickle_to_file", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "graph", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "pickle_to_file", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "graph", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "model_id", "type": "Any"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "loss", "type": "Any"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "ret", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "model_id", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "file", "type": "file"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "extract_descriptor", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "descriptor", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 154, "col_offset": 70, "nodeName": "default_model_len", "type": "Any"}, {"lineNumber": 155, "col_offset": 70, "nodeName": "default_model_width", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "default_transform", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 160, "col_offset": 45, "nodeName": "graph", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "child_id", "type": "int"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "model_count", "type": "int"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "model_count", "type": "int"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "empty_cache", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "history", "type": "List[Dict[str, Any]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "father_id", "type": "int"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "model_id", "type": "int"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "set_start_method", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "Pool", "type": "Callable[..., multiprocessing.pool.Pool]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "map_async", "type": "Callable[..., multiprocessing.pool.AsyncResult]"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "train", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "training_queue", "type": "List[Union[Tuple[Any, int, int], Tuple[Any, Any, int]]]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "new_model_id", "type": "int"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "model_count", "type": "int"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "model_count", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "loss", "type": "Any"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "graph", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "join", "type": "Callable[[], None]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "add_model", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "loss", "type": "Any"}, {"lineNumber": 194, "col_offset": 43, "nodeName": "graph", "type": "Any"}, {"lineNumber": 194, "col_offset": 50, "nodeName": "model_id", "type": "int"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "add_child", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "father_id", "type": "int"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "model_id", "type": "int"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "x_queue", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "y_queue", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "pickle_to_file", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "export_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "descriptors", "type": "List[Any]"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "PriorityQueue", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "metric_value", "type": "Optional[Any]"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "temp_list", "type": "List[Tuple[Optional[Any], nothing]]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "metric_value", "type": "Optional[Any]"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "model_id", "type": "nothing"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "elem", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "temp_exp", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "ap", "type": "float"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "t", "type": "float"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "alpha", "type": "float"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "load_model_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "father_id", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "target_graph", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "nm_graph", "type": "Any"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "father_id", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "mean", "type": "Any"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "std", "type": "Any"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "predict", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "get_dict", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "fp", "type": "file"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "u", "type": "int"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "root", "type": "int"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "v", "type": "int"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "v", "type": "int"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "v", "type": "int"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "adj_list", "type": "Dict[int, List[nothing]]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "value", "type": "List[nothing]"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "u", "type": "None"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "adj_list", "type": "Dict[Any, List[nothing]]"}, {"lineNumber": 302, "col_offset": 23, "nodeName": "u", "type": "Any"}, {"lineNumber": 302, "col_offset": 38, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "Elem"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "Elem"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "Elem"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 314, "col_offset": 36, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 329, "col_offset": 61, "nodeName": "trainer_args", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "edit_distance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 335, "col_offset": 25, "nodeName": "des1", "type": "Any"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "des2", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "edit_distance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "descriptor", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "target_descriptor", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "trainer_args", "type": "Union[Any, Dict[str, int]]"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "Constant", "type": "Type[autokeras.constant.Constant]"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "Constant", "type": "Type[autokeras.constant.Constant]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "path", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "get_best_model_id", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "model_id", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "max", "type": "Callable"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "history", "type": "List[Dict[str, Any]]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "path", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "path", "type": "Any"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "model_id", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "loss", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "history", "type": "List[Dict[str, Any]]"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "get_best_model_id", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "graph", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "x_queue", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "y_queue", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 70, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 155, "col_offset": 70, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "training_queue", "type": "List[Union[Tuple[Any, int, int], Tuple[Any, Any, int]]]"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "graph", "type": "Any"}, {"lineNumber": 158, "col_offset": 47, "nodeName": "model_id", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "descriptors", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "extract_descriptor", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "init_search", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "training_queue", "type": "List[Union[Tuple[Any, int, int], Tuple[Any, Any, int]]]"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "model_id", "type": "int"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "new_graph", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "new_father_id", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "maximize_acq", "type": "Callable[[], Any]"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "get", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "search_tree", "type": "SearchTree"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "gpr", "type": "autokeras.bayesian.IncrementalGaussianProcess"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "path", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "path", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "adj_list", "type": "Dict[int, List[nothing]]"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "get_metric_value_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 55, "nodeName": "model_id", "type": "nothing"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "load_model_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 42, "nodeName": "model_id", "type": "nothing"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "clear_operation_history", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "put", "type": "Any"}, {"lineNumber": 225, "col_offset": 33, "nodeName": "t", "type": "float"}, {"lineNumber": 225, "col_offset": 37, "nodeName": "t_min", "type": "Union[Any, float]"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "min", "type": "Callable"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "temp_exp", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "ap", "type": "float"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "graphs", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "temp_graph", "type": "Any"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "graphs", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "father_id", "type": "Any"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "operation_history", "type": "Any"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "gpr", "type": "autokeras.bayesian.IncrementalGaussianProcess"}, {"lineNumber": 254, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "beta", "type": "Any"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "std", "type": "Any"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "model_count", "type": "int"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "search_tree", "type": "SearchTree"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "path", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 22, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "fp", "type": "file"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "adj_list", "type": "Dict[int, List[nothing]]"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "adj_list", "type": "Dict[int, List[nothing]]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "v", "type": "int"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "adj_list", "type": "Dict[int, List[nothing]]"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "adj_list", "type": "Dict[Any, List[nothing]]"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "value", "type": "List[nothing]"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "get_dict", "type": "Callable[..., Any]"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "root", "type": "Any"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "u", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "self", "type": "Elem"}, {"lineNumber": 314, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "self", "type": "Elem"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "other", "type": "Any"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "ModelTrainer", "type": "Any"}, {"lineNumber": 325, "col_offset": 38, "nodeName": "model", "type": "Any"}, {"lineNumber": 326, "col_offset": 38, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 327, "col_offset": 38, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 328, "col_offset": 38, "nodeName": "metric", "type": "Any"}, {"lineNumber": 329, "col_offset": 38, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "item", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "item", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "path", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "file", "type": "file"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "file", "type": "file"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "DefaultClassifierGenerator", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "graph", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "training_queue", "type": "List[Union[Tuple[Any, int, int], Tuple[Any, Any, int]]]"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "child_graph", "type": "Any"}, {"lineNumber": 163, "col_offset": 53, "nodeName": "model_id", "type": "int"}, {"lineNumber": 163, "col_offset": 63, "nodeName": "child_id", "type": "int"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "descriptors", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "extract_descriptor", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 179, "col_offset": 48, "nodeName": "graph", "type": "Any"}, {"lineNumber": 179, "col_offset": 55, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 179, "col_offset": 67, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 179, "col_offset": 78, "nodeName": "trainer_args", "type": "Union[Any, Dict[str, int]]"}, {"lineNumber": 181, "col_offset": 48, "nodeName": "metric", "type": "Any"}, {"lineNumber": 181, "col_offset": 61, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "training_queue", "type": "List[Union[Tuple[Any, int, int], Tuple[Any, Any, int]]]"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "new_graph", "type": "Any"}, {"lineNumber": 188, "col_offset": 51, "nodeName": "new_father_id", "type": "Any"}, {"lineNumber": 188, "col_offset": 66, "nodeName": "new_model_id", "type": "int"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "descriptors", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "extract_descriptor", "type": "Any"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "train_results", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "path", "type": "module"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "search_tree", "type": "SearchTree"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "temp_list", "type": "List[Tuple[Optional[Any], nothing]]"}, {"lineNumber": 214, "col_offset": 30, "nodeName": "metric_value", "type": "Optional[Any]"}, {"lineNumber": 214, "col_offset": 44, "nodeName": "model_id", "type": "nothing"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "graph", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "pq", "type": "Any"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "Elem", "type": "Type[Elem]"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "metric_value", "type": "Optional[Any]"}, {"lineNumber": 219, "col_offset": 38, "nodeName": "model_id", "type": "nothing"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "graph", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "empty", "type": "Any"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "pq", "type": "Any"}, {"lineNumber": 227, "col_offset": 59, "nodeName": "t", "type": "float"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "math", "type": "module"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "uniform", "type": "Callable[[Union[float, int], Union[float, int]], float]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "transform", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 230, "col_offset": 35, "nodeName": "graph", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "temp_acq_value", "type": "Any"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "target_graph", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "nm_graph", "type": "Any"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 254, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 261, "col_offset": 53, "nodeName": "training_queue", "type": "List[Union[Tuple[Any, int, int], Tuple[Any, Any, int]]]"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "networks", "type": "List[Any]"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "to_json", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "json", "type": "module"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "v", "type": "int"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 284, "col_offset": 34, "nodeName": "u", "type": "int"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "v", "type": "int"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "get_dict", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 42, "nodeName": "v", "type": "nothing"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 107, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 60, "nodeName": "model_id", "type": "int"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "model_id", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 128, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 128, "col_offset": 58, "nodeName": "model_id", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "model_id", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "child_graph", "type": "Any"}, {"lineNumber": 179, "col_offset": 78, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 180, "col_offset": 48, "nodeName": "join", "type": "Callable"}, {"lineNumber": 180, "col_offset": 61, "nodeName": "path", "type": "Any"}, {"lineNumber": 181, "col_offset": 48, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 181, "col_offset": 61, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "new_graph", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "os", "type": "module"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "pq", "type": "Any"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "metric_value", "type": "Any"}, {"lineNumber": 227, "col_offset": 48, "nodeName": "max_acq", "type": "int"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "random", "type": "module"}, {"lineNumber": 230, "col_offset": 35, "nodeName": "elem", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "contain", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "descriptors", "type": "Any"}, {"lineNumber": 236, "col_offset": 37, "nodeName": "acq", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 46, "nodeName": "temp_graph", "type": "Any"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "put", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "temp_acq_value", "type": "Any"}, {"lineNumber": 239, "col_offset": 40, "nodeName": "max_acq", "type": "int"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "max_acq", "type": "Any"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "temp_acq_value", "type": "Any"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "father_id", "type": "Any"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "father_id", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "target_graph", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "temp_graph", "type": "Any"}, {"lineNumber": 250, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 250, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "extract_descriptor", "type": "Any"}, {"lineNumber": 261, "col_offset": 53, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "adj_list", "type": "Dict[int, List[nothing]]"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 180, "col_offset": 48, "nodeName": "path", "type": "module"}, {"lineNumber": 180, "col_offset": 61, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "elem", "type": "Any"}, {"lineNumber": 233, "col_offset": 44, "nodeName": "extract_descriptor", "type": "Any"}, {"lineNumber": 236, "col_offset": 37, "nodeName": "self", "type": "BayesianSearcher"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "pq", "type": "Any"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "Elem", "type": "Type[Elem]"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "temp_acq_value", "type": "Any"}, {"lineNumber": 237, "col_offset": 48, "nodeName": "father_id", "type": "Any"}, {"lineNumber": 237, "col_offset": 64, "nodeName": "temp_graph", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "descriptors", "type": "Any"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "extract_descriptor", "type": "Any"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "elem", "type": "Any"}, {"lineNumber": 250, "col_offset": 45, "nodeName": "args", "type": "Any"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "graph", "type": "Any"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "extract_descriptor", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "self", "type": "SearchTree"}, {"lineNumber": 285, "col_offset": 26, "nodeName": "u", "type": "int"}, {"lineNumber": 180, "col_offset": 48, "nodeName": "os", "type": "module"}, {"lineNumber": 180, "col_offset": 72, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 180, "col_offset": 76, "nodeName": "model_id", "type": "int"}, {"lineNumber": 233, "col_offset": 44, "nodeName": "temp_graph", "type": "Any"}, {"lineNumber": 237, "col_offset": 48, "nodeName": "elem", "type": "Any"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "temp_graph", "type": "Any"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "load_model_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 50, "nodeName": "model_id", "type": "int"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "self", "type": "BayesianSearcher"}]