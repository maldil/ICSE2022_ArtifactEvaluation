[{"lineNumber": 24, "col_offset": 0, "nodeName": "test_resnet_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_resnet_pretrained_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "test_resnet_pretrained_with_one_channel_input", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_resnet_pretrained_error_with_two_channels", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "test_resnet_deserialize_to_resnet", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "test_resnet_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_resnet_wrong_version_error", "type": "Callable[[], Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "test_xception_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "test_xception_pretrained_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "test_xception_pretrained_with_one_channel_input", "type": "Callable[[], Any]"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "test_xception_pretrained_error_with_two_channels", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "test_xception_deserialize_to_xception", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "test_xception_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 0, "nodeName": "test_conv_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "test_conv_deserialize_to_conv", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "test_conv_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "test_rnn_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "test_rnn_deserialize_to_rnn", "type": "Callable[[], Any]"}, {"lineNumber": 198, "col_offset": 0, "nodeName": "test_rnn_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 207, "col_offset": 0, "nodeName": "test_dense_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 218, "col_offset": 0, "nodeName": "test_dense_deserialize_to_dense", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "test_dense_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 235, "col_offset": 0, "nodeName": "test_embed_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 246, "col_offset": 0, "nodeName": "test_embed_deserialize_to_embed", "type": "Callable[[], Any]"}, {"lineNumber": 254, "col_offset": 0, "nodeName": "test_embed_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 263, "col_offset": 0, "nodeName": "test_transformer_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 274, "col_offset": 0, "nodeName": "test_transformer_deserialize_to_transformer", "type": "Callable[[], Any]"}, {"lineNumber": 282, "col_offset": 0, "nodeName": "test_transformer_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 210, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 238, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 257, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 271, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "value", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "keys", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "value", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "value", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 210, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 232, "col_offset": 45, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 238, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 247, "col_offset": 40, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 257, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 271, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 275, "col_offset": 40, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 288, "col_offset": 46, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "Input", "type": "Any"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "info", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "config", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "info", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "Input", "type": "Any"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "info", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 45, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 240, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 247, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 268, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 270, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 271, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 275, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 288, "col_offset": 46, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 62, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 129, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 240, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 268, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 271, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "blocks", "type": "module"}]