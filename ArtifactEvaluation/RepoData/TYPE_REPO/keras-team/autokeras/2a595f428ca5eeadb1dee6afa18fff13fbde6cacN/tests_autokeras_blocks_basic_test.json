[{"lineNumber": 11, "col_offset": 0, "nodeName": "test_resnet_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "test_resnet_pretrained_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "test_resnet_pretrained_with_one_channel_input", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "test_resnet_pretrained_error_with_two_channels", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "test_resnet_deserialize_to_resnet", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "test_resnet_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_resnet_init_error_with_include_top", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_resnet_init_error_with_input_shape", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "test_xception_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "test_xception_deserialize_to_xception", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "test_xception_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "test_xception_init_error_with_include_top", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_xception_init_error_with_input_shape", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "test_conv_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "test_conv_deserialize_to_conv", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "test_conv_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 155, "col_offset": 0, "nodeName": "test_rnn_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "test_rnn_deserialize_to_rnn", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "test_rnn_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 0, "nodeName": "test_dense_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "test_dense_deserialize_to_dense", "type": "Callable[[], Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "test_dense_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "test_embed_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 222, "col_offset": 0, "nodeName": "test_embed_deserialize_to_embed", "type": "Callable[[], Any]"}, {"lineNumber": 230, "col_offset": 0, "nodeName": "test_embed_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 0, "nodeName": "test_transformer_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 250, "col_offset": 0, "nodeName": "test_transformer_deserialize_to_transformer", "type": "Callable[[], Any]"}, {"lineNumber": 258, "col_offset": 0, "nodeName": "test_transformer_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 19, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 19, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "value", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "keys", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "value", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "value", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "keys", "type": "Any"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "value", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "value", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 195, "col_offset": 40, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 236, "col_offset": 44, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 264, "col_offset": 46, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 16, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 19, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "Input", "type": "Any"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "info", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "config", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "info", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "info", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "config", "type": "Any"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "basic", "type": "module"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "info", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "basic", "type": "module"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "info", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 160, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 44, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 46, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 16, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 49, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "blocks", "type": "module"}]