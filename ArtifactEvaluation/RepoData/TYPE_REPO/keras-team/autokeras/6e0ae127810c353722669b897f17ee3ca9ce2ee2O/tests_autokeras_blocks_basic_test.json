[{"lineNumber": 24, "col_offset": 0, "nodeName": "test_resnet_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test_resnet_v1_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "test_efficientnet_b0_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "test_resnet_pretrained_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "test_resnet_pretrained_with_one_channel_input", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_resnet_pretrained_error_with_two_channels", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "test_resnet_deserialize_to_resnet", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "test_resnet_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "test_resnet_wrong_version_error", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "test_efficientnet_wrong_version_error", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "test_xception_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "test_xception_pretrained_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "test_xception_pretrained_with_one_channel_input", "type": "Callable[[], Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "test_xception_pretrained_error_with_two_channels", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "test_xception_deserialize_to_xception", "type": "Callable[[], Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "test_xception_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "test_conv_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "test_conv_with_small_image_size_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 214, "col_offset": 0, "nodeName": "test_conv_build_with_dropout_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "test_conv_deserialize_to_conv", "type": "Callable[[], Any]"}, {"lineNumber": 234, "col_offset": 0, "nodeName": "test_conv_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 242, "col_offset": 0, "nodeName": "test_rnn_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 254, "col_offset": 0, "nodeName": "test_rnn_input_shape_one_dim_error", "type": "Callable[[], Any]"}, {"lineNumber": 266, "col_offset": 0, "nodeName": "test_rnn_deserialize_to_rnn", "type": "Callable[[], Any]"}, {"lineNumber": 274, "col_offset": 0, "nodeName": "test_rnn_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 282, "col_offset": 0, "nodeName": "test_dense_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 293, "col_offset": 0, "nodeName": "test_dense_build_with_dropout_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 304, "col_offset": 0, "nodeName": "test_dense_build_with_bn_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 315, "col_offset": 0, "nodeName": "test_dense_deserialize_to_dense", "type": "Callable[[], Any]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "test_dense_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 331, "col_offset": 0, "nodeName": "test_embed_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 342, "col_offset": 0, "nodeName": "test_embed_deserialize_to_embed", "type": "Callable[[], Any]"}, {"lineNumber": 350, "col_offset": 0, "nodeName": "test_embed_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 358, "col_offset": 0, "nodeName": "test_transformer_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 369, "col_offset": 0, "nodeName": "test_transformer_deserialize_to_transformer", "type": "Callable[[], Any]"}, {"lineNumber": 377, "col_offset": 0, "nodeName": "test_transformer_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 385, "col_offset": 0, "nodeName": "test_multi_head_restore_head_size", "type": "Callable[[], Any]"}, {"lineNumber": 393, "col_offset": 0, "nodeName": "test_bert_build_return_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 404, "col_offset": 0, "nodeName": "test_bert_deserialize_to_transformer", "type": "Callable[[], Any]"}, {"lineNumber": 412, "col_offset": 0, "nodeName": "test_bert_get_config_has_all_attributes", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.EfficientNetBlock"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.MultiHeadSelfAttention"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.BertBlock"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "block", "type": "autokeras.blocks.basic.BertBlock"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "EfficientNetBlock", "type": "Type[autokeras.blocks.basic.EfficientNetBlock]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 185, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 223, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 251, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 257, "col_offset": 38, "nodeName": "info", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 271, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 290, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 296, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 301, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 312, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 320, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 328, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 334, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 339, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 353, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 361, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 366, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 366, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 372, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 374, "col_offset": 29, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "MultiHeadSelfAttention", "type": "Type[autokeras.blocks.basic.MultiHeadSelfAttention]"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "BertBlock", "type": "Type[autokeras.blocks.basic.BertBlock]"}, {"lineNumber": 396, "col_offset": 14, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 401, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "serialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "deserialize", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 31, "nodeName": "serialized_block", "type": "Any"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 409, "col_offset": 22, "nodeName": "block", "type": "Any"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "BertBlock", "type": "Type[autokeras.blocks.basic.BertBlock]"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "BertBlock", "type": "Type[autokeras.blocks.basic.BertBlock]"}, {"lineNumber": 415, "col_offset": 13, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.EfficientNetBlock"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "value", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 109, "col_offset": 69, "nodeName": "keys", "type": "Any"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "value", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "EfficientNetBlock", "type": "Type[autokeras.blocks.basic.EfficientNetBlock]"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "value", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 51, "nodeName": "value", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 185, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 187, "col_offset": 71, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 223, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 227, "col_offset": 40, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.ConvBlock"}, {"lineNumber": 239, "col_offset": 67, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "Input", "type": "Any"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 251, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 257, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 263, "col_offset": 56, "nodeName": "value", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 267, "col_offset": 40, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 279, "col_offset": 66, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 290, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 296, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 301, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 308, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 312, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 316, "col_offset": 40, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.DenseBlock"}, {"lineNumber": 328, "col_offset": 68, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 334, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 335, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 339, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 353, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.Embedding"}, {"lineNumber": 355, "col_offset": 67, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 361, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 366, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 370, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 370, "col_offset": 40, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 374, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.Transformer"}, {"lineNumber": 382, "col_offset": 69, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "basic", "type": "module"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "MultiHeadSelfAttention", "type": "Type[autokeras.blocks.basic.MultiHeadSelfAttention]"}, {"lineNumber": 388, "col_offset": 60, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "block", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 396, "col_offset": 14, "nodeName": "block", "type": "autokeras.blocks.basic.BertBlock"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 397, "col_offset": 38, "nodeName": "Input", "type": "Any"}, {"lineNumber": 400, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 401, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "blocks", "type": "module"}, {"lineNumber": 405, "col_offset": 40, "nodeName": "BertBlock", "type": "Type[autokeras.blocks.basic.BertBlock]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "blocks", "type": "module"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 415, "col_offset": 13, "nodeName": "block", "type": "autokeras.blocks.basic.BertBlock"}, {"lineNumber": 417, "col_offset": 67, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "block", "type": "autokeras.blocks.basic.ResNetBlock"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "info", "type": "Any"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 69, "nodeName": "config", "type": "Any"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "info", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "blocks", "type": "module"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "info", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 155, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "block", "type": "autokeras.blocks.basic.XceptionBlock"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 171, "col_offset": 51, "nodeName": "info", "type": "Any"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 71, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 195, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 227, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 67, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 257, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "block", "type": "autokeras.blocks.basic.RNNBlock"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "HyperParameters", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 263, "col_offset": 56, "nodeName": "info", "type": "Any"}, {"lineNumber": 267, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 66, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 286, "col_offset": 72, "nodeName": "float32", "type": "Any"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 290, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 290, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 297, "col_offset": 72, "nodeName": "float32", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 300, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 301, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 308, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 308, "col_offset": 72, "nodeName": "float32", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 312, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 316, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 328, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 328, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 68, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 335, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 335, "col_offset": 72, "nodeName": "float32", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 339, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 355, "col_offset": 67, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 362, "col_offset": 72, "nodeName": "float32", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 365, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 366, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 370, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 382, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 382, "col_offset": 69, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "basic", "type": "module"}, {"lineNumber": 388, "col_offset": 60, "nodeName": "block", "type": "autokeras.blocks.basic.MultiHeadSelfAttention"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 397, "col_offset": 38, "nodeName": "keras", "type": "Any"}, {"lineNumber": 397, "col_offset": 71, "nodeName": "string", "type": "Any"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 400, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 405, "col_offset": 40, "nodeName": "blocks", "type": "module"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "get_func_args", "type": "Callable[[Any], Set[str]]"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 417, "col_offset": 67, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 90, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "ResNetBlock", "type": "Type[autokeras.blocks.basic.ResNetBlock]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "XceptionBlock", "type": "Type[autokeras.blocks.basic.XceptionBlock]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 195, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "ConvBlock", "type": "Type[autokeras.blocks.basic.ConvBlock]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "kerastuner", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 260, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "RNNBlock", "type": "Type[autokeras.blocks.basic.RNNBlock]"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 286, "col_offset": 72, "nodeName": "tf", "type": "Any"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 290, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 297, "col_offset": 72, "nodeName": "tf", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 301, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 308, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 308, "col_offset": 72, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 328, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 328, "col_offset": 31, "nodeName": "DenseBlock", "type": "Type[autokeras.blocks.basic.DenseBlock]"}, {"lineNumber": 335, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 335, "col_offset": 72, "nodeName": "tf", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "Embedding", "type": "Type[autokeras.blocks.basic.Embedding]"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 362, "col_offset": 72, "nodeName": "tf", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 382, "col_offset": 31, "nodeName": "Transformer", "type": "Type[autokeras.blocks.basic.Transformer]"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "blocks", "type": "module"}, {"lineNumber": 397, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 397, "col_offset": 71, "nodeName": "tf", "type": "Any"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "nest", "type": "Any"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "BertBlock", "type": "Type[autokeras.blocks.basic.BertBlock]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 260, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 328, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 382, "col_offset": 31, "nodeName": "blocks", "type": "module"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "blocks", "type": "module"}]