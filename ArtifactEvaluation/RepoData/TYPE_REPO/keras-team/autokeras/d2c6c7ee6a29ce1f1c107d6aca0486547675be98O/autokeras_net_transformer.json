[{"lineNumber": 6, "col_offset": 0, "nodeName": "copy_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "get_next_dense_conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "net_transfromer", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 4, "nodeName": "new_layer", "type": "None"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "new_next_wider_layer", "type": "None"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "j", "type": "int"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "new_next_wider_layer", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "layers", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "layers", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 8, "col_offset": 18, "nodeName": "layer", "type": "Any"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "new_next_wider_layer", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "new_deeper_model", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "new_wider_model", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "new_deeper_layer", "type": "None"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "new_wider_layer", "type": "None"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "new_deeper_layer", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "new_next_wider_layer", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "new_wider_layer", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "core", "type": "Any"}, {"lineNumber": 9, "col_offset": 20, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 10, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "start", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "layers", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "new_next_wider_layer", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "new_deeper_layer", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "new_wider_layer", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "to_deeper_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "new_deeper_layer", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "get_next_dense_conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "index", "type": "int"}, {"lineNumber": 52, "col_offset": 57, "nodeName": "layers", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "to_wider_layer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "new_wider_layer", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "new_next_wider_layer", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "new_deeper_model", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "new_wider_model", "type": "Any"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 9, "col_offset": 20, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 11, "col_offset": 20, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "layers", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 26, "col_offset": 51, "nodeName": "Conv3D", "type": "Any"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "copy_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "layers", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 45, "col_offset": 68, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "Conv3D", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "copy_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "copy_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "index", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "models", "type": "List[Any]"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "keras", "type": "Any"}, {"lineNumber": 9, "col_offset": 45, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "layers", "type": "Any"}, {"lineNumber": 11, "col_offset": 20, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "Conv3D", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "new_layer", "type": "Any"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "j", "type": "int"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "core", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 26, "col_offset": 51, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "layers", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "index", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 45, "col_offset": 68, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "layers", "type": "Any"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "layers", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "new_deeper_layer", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "new_wider_layer", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 9, "col_offset": 45, "nodeName": "layer", "type": "Any"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "keras", "type": "Any"}, {"lineNumber": 11, "col_offset": 46, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "layers", "type": "Any"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "layers", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 26, "col_offset": 51, "nodeName": "layers", "type": "Any"}, {"lineNumber": 27, "col_offset": 53, "nodeName": "j", "type": "int"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "index", "type": "int"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "index", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 45, "col_offset": 68, "nodeName": "layers", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "index", "type": "int"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "new_deeper_model", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "new_deeper_layer", "type": "Any"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "weights", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "new_wider_model", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "new_wider_layer", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "weights", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "new_deeper_model", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "layers", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "new_wider_model", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "layers", "type": "Any"}, {"lineNumber": 11, "col_offset": 46, "nodeName": "layer", "type": "Any"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "keras", "type": "Any"}, {"lineNumber": 13, "col_offset": 46, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "layers", "type": "Any"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "Conv3D", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "keras", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 26, "col_offset": 51, "nodeName": "keras", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "keras", "type": "Any"}, {"lineNumber": 45, "col_offset": 68, "nodeName": "keras", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 13, "col_offset": 46, "nodeName": "layer", "type": "Any"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "keras", "type": "Any"}, {"lineNumber": 15, "col_offset": 46, "nodeName": "get_config", "type": "Any"}, {"lineNumber": 15, "col_offset": 46, "nodeName": "layer", "type": "Any"}]