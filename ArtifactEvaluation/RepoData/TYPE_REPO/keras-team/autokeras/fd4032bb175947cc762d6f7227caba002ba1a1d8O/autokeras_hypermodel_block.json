[{"lineNumber": 10, "col_offset": 0, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 361, "col_offset": 0, "nodeName": "shape_compatible", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "Block", "type": "Type[autokeras.hypermodel.base.Block]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "Block", "type": "Type[autokeras.hypermodel.base.Block]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "Block", "type": "Type[autokeras.hypermodel.base.Block]"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "Block", "type": "Type[autokeras.hypermodel.base.Block]"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "HyperResNet", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "Block", "type": "Type[autokeras.hypermodel.base.Block]"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "HyperXception", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "Block", "type": "Type[autokeras.hypermodel.base.Block]"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "Block", "type": "Type[autokeras.hypermodel.base.Block]"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "Block", "type": "Type[autokeras.hypermodel.base.Block]"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "Block", "type": "Type[autokeras.hypermodel.base.Block]"}, {"lineNumber": 524, "col_offset": 21, "nodeName": "Block", "type": "Type[autokeras.hypermodel.base.Block]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "full_name", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "base", "type": "module"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "base", "type": "module"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "base", "type": "module"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "base", "type": "module"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "resnet", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "base", "type": "module"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "xception", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "base", "type": "module"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "base", "type": "module"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "base", "type": "module"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "base", "type": "module"}, {"lineNumber": 524, "col_offset": 21, "nodeName": "base", "type": "module"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "_get_name", "type": "Any"}, {"lineNumber": 11, "col_offset": 29, "nodeName": "name", "type": "str"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "separable", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "separable", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "separable", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "separable", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "separable", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "separable", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "version", "type": "Any"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "version", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "version", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "input_shape", "type": "None"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "activation", "type": "Any"}, {"lineNumber": 322, "col_offset": 26, "nodeName": "activation", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "initial_strides", "type": "Any"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "initial_strides", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "num_residual_blocks", "type": "Any"}, {"lineNumber": 324, "col_offset": 35, "nodeName": "num_residual_blocks", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "activation", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "initial_strides", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "num_residual_blocks", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "input_shape", "type": "None"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "merge_type", "type": "Any"}, {"lineNumber": 379, "col_offset": 26, "nodeName": "merge_type", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "merge_type", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 425, "col_offset": 15, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 438, "col_offset": 30, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 453, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 485, "col_offset": 30, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 490, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 500, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "max_features", "type": "None"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 547, "col_offset": 27, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 548, "col_offset": 29, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "hp", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "hp", "type": "Any"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "full_name", "type": "Any"}, {"lineNumber": 12, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "set_config", "type": "Callable[[Any], None]"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "build", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "hp", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "set_config", "type": "Callable[[Any], None]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "GRU", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "rnn_layers", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "set_config", "type": "Callable[[Any], None]"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "separable", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "separable", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "get_max_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "set_config", "type": "Callable[[Any], None]"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 284, "col_offset": 36, "nodeName": "version", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 30, "nodeName": "hp", "type": "Any"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "set_config", "type": "Callable[[Any], None]"}, {"lineNumber": 337, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 339, "col_offset": 31, "nodeName": "config", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 340, "col_offset": 35, "nodeName": "config", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 341, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "Int", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 352, "col_offset": 39, "nodeName": "activation", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 353, "col_offset": 44, "nodeName": "initial_strides", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 354, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 354, "col_offset": 48, "nodeName": "num_residual_blocks", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "set_hp_value", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 355, "col_offset": 36, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "hp", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 362, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 362, "col_offset": 11, "nodeName": "shape1", "type": "Any"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 362, "col_offset": 26, "nodeName": "shape2", "type": "Any"}, {"lineNumber": 366, "col_offset": 11, "nodeName": "shape1", "type": "Any"}, {"lineNumber": 366, "col_offset": 26, "nodeName": "shape2", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "Merge"}, {"lineNumber": 382, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "set_config", "type": "Callable[[Any], None]"}, {"lineNumber": 387, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "Merge"}, {"lineNumber": 388, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 391, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "merge_type", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "new_inputs", "type": "List[Any]"}, {"lineNumber": 402, "col_offset": 16, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 402, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 404, "col_offset": 21, "nodeName": "new_inputs", "type": "List[Any]"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 413, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 420, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 421, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 422, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "self", "type": "SpatialReduction"}, {"lineNumber": 441, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "set_config", "type": "Callable[[Any], None]"}, {"lineNumber": 446, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "SpatialReduction"}, {"lineNumber": 447, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 450, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 451, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 452, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 464, "col_offset": 11, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "TemporalReduction"}, {"lineNumber": 488, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "set_config", "type": "Callable[[Any], None]"}, {"lineNumber": 493, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "self", "type": "TemporalReduction"}, {"lineNumber": 494, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 497, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 497, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 498, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 499, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 506, "col_offset": 25, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 551, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "set_config", "type": "Callable[[Any], None]"}, {"lineNumber": 559, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 561, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 562, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 572, "col_offset": 24, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 590, "col_offset": 21, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 12, "col_offset": 36, "nodeName": "hp", "type": "Any"}, {"lineNumber": 12, "col_offset": 46, "nodeName": "full_name", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 75, "col_offset": 64, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "return_sequences", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "separable", "type": "Any"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "get_sep_conv", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "get_conv", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 219, "col_offset": 37, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 227, "col_offset": 69, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 233, "col_offset": 69, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 236, "col_offset": 73, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 261, "col_offset": 65, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "version", "type": "Any"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 278, "col_offset": 28, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 278, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 284, "col_offset": 36, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 321, "col_offset": 65, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "activation", "type": "Any"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "initial_strides", "type": "Any"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "num_residual_blocks", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 344, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "hp", "type": "Any"}, {"lineNumber": 352, "col_offset": 39, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 353, "col_offset": 44, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 354, "col_offset": 48, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 355, "col_offset": 36, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "merge_type", "type": "Any"}, {"lineNumber": 391, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "self", "type": "Merge"}, {"lineNumber": 395, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 399, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "merge_type", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 424, "col_offset": 45, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 437, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 442, "col_offset": 41, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "self", "type": "SpatialReduction"}, {"lineNumber": 459, "col_offset": 48, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 465, "col_offset": 26, "nodeName": "build", "type": "Any"}, {"lineNumber": 465, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 465, "col_offset": 46, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 466, "col_offset": 13, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 484, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 489, "col_offset": 41, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 497, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 503, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 506, "col_offset": 25, "nodeName": "self", "type": "TemporalReduction"}, {"lineNumber": 506, "col_offset": 48, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 513, "col_offset": 26, "nodeName": "build", "type": "Any"}, {"lineNumber": 513, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 513, "col_offset": 46, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 514, "col_offset": 13, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 545, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 553, "col_offset": 28, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 554, "col_offset": 27, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 555, "col_offset": 29, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 565, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 568, "col_offset": 42, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 572, "col_offset": 24, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 572, "col_offset": 46, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "Flatten", "type": "Type[Flatten]"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "hp", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "hp", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "hp", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "units", "type": "Any"}, {"lineNumber": 73, "col_offset": 67, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "hp", "type": "Any"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 156, "col_offset": 65, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "hp", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "utils", "type": "module"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "utils", "type": "module"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "conv", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "conv", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "pool", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 242, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 278, "col_offset": 28, "nodeName": "nest", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "self", "type": "XceptionBlock"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "nest", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 382, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "self", "type": "Merge"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 395, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 409, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 409, "col_offset": 56, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 409, "col_offset": 70, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "Add", "type": "Any"}, {"lineNumber": 411, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "layers", "type": "Any"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 424, "col_offset": 19, "nodeName": "Flatten", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 441, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 442, "col_offset": 41, "nodeName": "self", "type": "SpatialReduction"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 459, "col_offset": 48, "nodeName": "hp", "type": "Any"}, {"lineNumber": 468, "col_offset": 37, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 469, "col_offset": 13, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 488, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 489, "col_offset": 41, "nodeName": "self", "type": "TemporalReduction"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 506, "col_offset": 48, "nodeName": "hp", "type": "Any"}, {"lineNumber": 515, "col_offset": 26, "nodeName": "reduce_max", "type": "Any"}, {"lineNumber": 515, "col_offset": 45, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 516, "col_offset": 13, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 551, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 553, "col_offset": 28, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 554, "col_offset": 27, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 555, "col_offset": 29, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 568, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 572, "col_offset": 46, "nodeName": "hp", "type": "Any"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 579, "col_offset": 26, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 580, "col_offset": 27, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 586, "col_offset": 26, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 587, "col_offset": 27, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "Bidirectional", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 242, "col_offset": 35, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 400, "col_offset": 20, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 400, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "new_inputs", "type": "List[Any]"}, {"lineNumber": 403, "col_offset": 34, "nodeName": "build", "type": "Any"}, {"lineNumber": 403, "col_offset": 50, "nodeName": "hp", "type": "Any"}, {"lineNumber": 403, "col_offset": 54, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "keras", "type": "Any"}, {"lineNumber": 424, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 465, "col_offset": 26, "nodeName": "Flatten", "type": "Type[Flatten]"}, {"lineNumber": 471, "col_offset": 37, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 513, "col_offset": 26, "nodeName": "Flatten", "type": "Type[Flatten]"}, {"lineNumber": 515, "col_offset": 26, "nodeName": "math", "type": "Any"}, {"lineNumber": 517, "col_offset": 26, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 517, "col_offset": 46, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 518, "col_offset": 13, "nodeName": "reduction_type", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 579, "col_offset": 26, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 581, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "keras", "type": "Any"}, {"lineNumber": 586, "col_offset": 26, "nodeName": "self", "type": "EmbeddingBlock"}, {"lineNumber": 588, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "keras", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "keras", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "keras", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "return_sequences", "type": "Union[Any, bool]"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "hp", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "_get_padding", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 227, "col_offset": 55, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "hp", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "_get_padding", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 42, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 233, "col_offset": 55, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "_get_padding", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 59, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 409, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "keras", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 424, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 467, "col_offset": 26, "nodeName": "get_global_max_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 515, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 517, "col_offset": 26, "nodeName": "math", "type": "Any"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "reduce_min", "type": "Any"}, {"lineNumber": 519, "col_offset": 45, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 581, "col_offset": 29, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 588, "col_offset": 29, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "keras", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "keras", "type": "Any"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "return_sequences", "type": "Union[Any, bool]"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 229, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 236, "col_offset": 42, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 403, "col_offset": 34, "nodeName": "Flatten", "type": "Type[Flatten]"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 424, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 467, "col_offset": 26, "nodeName": "utils", "type": "module"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 470, "col_offset": 26, "nodeName": "get_global_average_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 517, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "math", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 470, "col_offset": 26, "nodeName": "utils", "type": "module"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "tf", "type": "Any"}]