[{"lineNumber": 10, "col_offset": 0, "nodeName": "position_encoding_init", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "sinusoidal_encode", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "embedding", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "m_modification", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "conv1d", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "Module", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "position_enc", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "position_enc", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "m", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "std", "type": "float"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "m", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "float", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "sin", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "cos", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "isscaler", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "in_features", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "out_features", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "weight_norm", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "num_embeddings", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "std", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "Conv1d", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "m_modification", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "m", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "std_mul", "type": "float"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "weight_norm", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "ConvTranspose1d", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 79, "col_offset": 54, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "m_modification", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "m", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "std_mul", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "weight_norm", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "residual", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "residual", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "causal", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "causal", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "residual", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "is_incremental", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "clone", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "clone", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 34, "col_offset": 49, "nodeName": "num_embeddings", "type": "Any"}, {"lineNumber": 34, "col_offset": 65, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "position_encoding_init", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "num_embeddings", "type": "Any"}, {"lineNumber": 37, "col_offset": 66, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "isscalar", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "w", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "isscaler", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "utils", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "math", "type": "module"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "std", "type": "float"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "utils", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 79, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "utils", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "padding", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "causal", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "conv1d", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "n_speakers", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "speaker_proj", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "speaker_proj", "type": "None"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "splitdim", "type": "int"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "splitdim", "type": "int"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 131, "col_offset": 50, "nodeName": "residual", "type": "Any"}, {"lineNumber": 131, "col_offset": 69, "nodeName": "x", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "clear_buffer", "type": "Any"}, {"lineNumber": 16, "col_offset": 49, "nodeName": "pos", "type": "int"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "position_enc", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 36, "col_offset": 58, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "SinusoidalEncoding"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "self", "type": "SinusoidalEncoding"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "sinusoidal_encode", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "weight", "type": "Any"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "w", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "norm_type", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "scale_grad_by_freq", "type": "Any"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "bias", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "std_mul", "type": "float"}, {"lineNumber": 65, "col_offset": 70, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "bias", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 39, "nodeName": "speaker_embed_dim", "type": "Any"}, {"lineNumber": 107, "col_offset": 58, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "F", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "training", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "incremental_forward", "type": "Any"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "conv", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 47, "nodeName": "causal", "type": "Any"}, {"lineNumber": 127, "col_offset": 64, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "splitdim", "type": "int"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 131, "col_offset": 50, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "conv", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "pos", "type": "int"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "d_pos_vec", "type": "Any"}, {"lineNumber": 16, "col_offset": 56, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 16, "col_offset": 62, "nodeName": "n_position", "type": "Any"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "SinusoidalEncoding", "type": "Type[SinusoidalEncoding]"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "self", "type": "SinusoidalEncoding"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "self", "type": "SinusoidalEncoding"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "F", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "self", "type": "SinusoidalEncoding"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "self", "type": "SinusoidalEncoding"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "self", "type": "SinusoidalEncoding"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "self", "type": "SinusoidalEncoding"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "self", "type": "SinusoidalEncoding"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "math", "type": "module"}, {"lineNumber": 54, "col_offset": 64, "nodeName": "in_features", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "Conv1dGLU", "type": "Type[Conv1dGLU]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "conv", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 127, "col_offset": 47, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "splitdim", "type": "int"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "residual", "type": "Any"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 15, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 54, "col_offset": 53, "nodeName": "dropout", "type": "int"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "m", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "self", "type": "Conv1dGLU"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "math", "type": "module"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "position_rate", "type": "Any"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "pos", "type": "int"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "power", "type": "Any"}, {"lineNumber": 15, "col_offset": 88, "nodeName": "d_pos_vec", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 62, "nodeName": "d_pos_vec", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "residual", "type": "Any"}, {"lineNumber": 15, "col_offset": 52, "nodeName": "i", "type": "int"}]