[{"lineNumber": 11, "col_offset": 20, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 11, "col_offset": 20, "nodeName": "block_module", "type": "module"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "block_module", "type": "module"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "block_module", "type": "module"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "block_module", "type": "module"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "block_module", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "axis", "type": "int"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "axis", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "output_sequence_length", "type": "Optional[int]"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "output_sequence_length", "type": "Optional[int]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "translation", "type": "Tuple[Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "horizontal_flip", "type": "Tuple[Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "vertical_flip", "type": "Tuple[Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "rotation_range", "type": "Tuple[Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "random_crop", "type": "Tuple[Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "zoom_range", "type": "Tuple[Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "contrast_range", "type": "Tuple[Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "shape", "type": "None"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "column_types", "type": "None"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "column_names", "type": "None"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Normalization"}, {"lineNumber": 27, "col_offset": 59, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, str]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, str]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 70, "col_offset": 59, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, str]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "translation", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "rotation_range", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "random_crop", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "zoom_range", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "contrast_range", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "column_type", "type": "Any"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "Normalization", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "axis", "type": "int"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "TextVectorization", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "TextVectorization", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "column_type", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "CATEGORICAL", "type": "str"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "CategoricalEncoding", "type": "Type[autokeras.keras_layers.CategoricalEncoding]"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "axis", "type": "int"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "self", "type": "Normalization"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "hp", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "adapters", "type": "module"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "INT", "type": "str"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "NONE", "type": "str"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "keras_layers", "type": "module"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "self", "type": "Normalization"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "keras_layers", "type": "module"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "keras_layers", "type": "module"}]