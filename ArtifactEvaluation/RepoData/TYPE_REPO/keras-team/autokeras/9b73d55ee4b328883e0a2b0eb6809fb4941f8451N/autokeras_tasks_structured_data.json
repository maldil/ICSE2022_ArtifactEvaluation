[{"lineNumber": 33, "col_offset": 33, "nodeName": "AutoModel", "type": "Type[autokeras.auto_model.AutoModel]"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "BaseStructuredDataPipeline", "type": "Type[BaseStructuredDataPipeline]"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "SupervisedStructuredDataPipeline", "type": "Type[SupervisedStructuredDataPipeline]"}, {"lineNumber": 321, "col_offset": 30, "nodeName": "SupervisedStructuredDataPipeline", "type": "Type[SupervisedStructuredDataPipeline]"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "auto_model", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "_target_col_name", "type": "None"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "validation_data", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "target", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "column_type", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "column_names", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "_target_col_name", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "validation_data", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "check_in_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "read_for_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "evaluate", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "StructuredDataInput", "type": "Type[autokeras.nodes.StructuredDataInput]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "tuner", "type": "Union[str, Type[autokeras.engine.tuner.AutoTuner]]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "tuner", "type": "Type[autokeras.tuners.task_specific.StructuredDataClassifierTuner]"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "StructuredDataClassifierTuner", "type": "Type[autokeras.tuners.task_specific.StructuredDataClassifierTuner]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "tuner", "type": "Union[Type[autokeras.engine.tuner.AutoTuner], str]"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "tuner", "type": "Type[autokeras.tuners.task_specific.StructuredDataRegressorTuner]"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "StructuredDataRegressorTuner", "type": "Type[autokeras.tuners.task_specific.StructuredDataRegressorTuner]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "values", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "columns", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "_target_col_name", "type": "Any"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "_read_from_csv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "y_val", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "validation_data", "type": "Tuple[Any, Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "validation_split", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "validation_data", "type": "Union[Any, Tuple[Any, Any]]"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 158, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "_read_from_csv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 181, "col_offset": 53, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 181, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "input_module", "type": "module"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 187, "col_offset": 52, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "inputs", "type": "autokeras.nodes.StructuredDataInput"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 189, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[int, bool, str, Type[autokeras.tuners.task_specific.StructuredDataClassifierTuner], Type[autokeras.engine.tuner.AutoTuner], pathlib.Path, Dict[Any, Any], List[str], autokeras.blocks.heads.ClassificationHead, Any]]]"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "task_specific", "type": "module"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "column_names", "type": "Optional[List[str]]"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "column_types", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "max_trials", "type": "int"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "directory", "type": "Optional[Union[pathlib.Path, str]]"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "project_name", "type": "str"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "objective", "type": "str"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "tuner", "type": "Union[str, Type[autokeras.tuners.task_specific.StructuredDataClassifierTuner], Type[autokeras.engine.tuner.AutoTuner]]"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "overwrite", "type": "bool"}, {"lineNumber": 265, "col_offset": 17, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 311, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 312, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "validation_split", "type": "Any"}, {"lineNumber": 316, "col_offset": 28, "nodeName": "validation_data", "type": "Any"}, {"lineNumber": 317, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 371, "col_offset": 14, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "task_specific", "type": "module"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "column_names", "type": "Optional[List[str]]"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "column_types", "type": "Optional[Dict[str, str]]"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "max_trials", "type": "int"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "directory", "type": "Optional[Union[str, pathlib.Path]]"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "project_name", "type": "str"}, {"lineNumber": 385, "col_offset": 22, "nodeName": "objective", "type": "str"}, {"lineNumber": 386, "col_offset": 18, "nodeName": "tuner", "type": "Union[Type[autokeras.engine.tuner.AutoTuner], str, Type[autokeras.tuners.task_specific.StructuredDataRegressorTuner]]"}, {"lineNumber": 387, "col_offset": 22, "nodeName": "overwrite", "type": "bool"}, {"lineNumber": 388, "col_offset": 17, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 389, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "pop", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "column_type", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "pd", "type": "Any"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "pd", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "pop", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "_target_col_name", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "_read_from_csv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 54, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "y_val", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "ClassificationHead", "type": "Type[autokeras.blocks.heads.ClassificationHead]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 371, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 377, "col_offset": 20, "nodeName": "RegressionHead", "type": "Type[autokeras.blocks.heads.RegressionHead]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "df", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "self", "type": "BaseStructuredDataPipeline"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "blocks", "type": "module"}, {"lineNumber": 252, "col_offset": 28, "nodeName": "num_classes", "type": "Optional[int]"}, {"lineNumber": 253, "col_offset": 28, "nodeName": "multi_label", "type": "bool"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "loss", "type": "Any"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "metrics", "type": "Optional[Union[Dict[str, Any], List[Any]]]"}, {"lineNumber": 377, "col_offset": 20, "nodeName": "blocks", "type": "module"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "output_dim", "type": "Optional[int]"}, {"lineNumber": 378, "col_offset": 44, "nodeName": "loss", "type": "Any"}, {"lineNumber": 378, "col_offset": 58, "nodeName": "metrics", "type": "Optional[Union[List[Any], Dict[str, Any]]]"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 69, "nodeName": "column_type", "type": "Any"}, {"lineNumber": 66, "col_offset": 58, "nodeName": "column_name", "type": "Any"}]