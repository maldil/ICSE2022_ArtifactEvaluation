[{"lineNumber": 13, "col_offset": 0, "nodeName": "load_audio", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 22, "nodeName": "hamming", "type": "Any"}, {"lineNumber": 9, "col_offset": 52, "nodeName": "hann", "type": "Any"}, {"lineNumber": 9, "col_offset": 83, "nodeName": "blackman", "type": "Any"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "bartlett", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "sound", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "sound", "type": "Any"}, {"lineNumber": 63, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "parser", "type": "SpectrogramParser"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "spect", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "voice_recognizer", "type": "autokeras.pretrained.voice_recognizer.VoiceRecognizer"}, {"lineNumber": 9, "col_offset": 22, "nodeName": "signal", "type": "Any"}, {"lineNumber": 9, "col_offset": 52, "nodeName": "signal", "type": "Any"}, {"lineNumber": 9, "col_offset": 83, "nodeName": "signal", "type": "Any"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "signal", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "sound", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "load", "type": "Any"}, {"lineNumber": 14, "col_offset": 31, "nodeName": "path", "type": "str"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "window_stride", "type": "Optional[Union[float, int, str, Tuple[float, float]]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "window_size", "type": "Optional[Union[float, int, str, Tuple[float, float]]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "sample_rate", "type": "Optional[Union[float, int, str, Tuple[float, float]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "window", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "normalize", "type": "bool"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "normalize", "type": "bool"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "augment", "type": "bool"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "augment", "type": "bool"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "noise_prob", "type": "Optional[Union[float, int, str, Tuple[float, float]]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "n_fft", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "win_length", "type": "int"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "n_fft", "type": "int"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "hop_length", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "spect", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "spect", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "normalize", "type": "bool"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "spect", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "SpectrogramParser", "type": "Type[SpectrogramParser]"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "VOICE_RECONGINIZER_AUDIO_CONF", "type": "Dict[str, Optional[Union[float, int, str, Tuple[float, float]]]]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "VoiceRecognizer", "type": "Type[autokeras.pretrained.voice_recognizer.VoiceRecognizer]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 9, "col_offset": 22, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 9, "col_offset": 52, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 9, "col_offset": 83, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "torchaudio", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "sound", "type": "Any"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "sound", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "sound", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "audio_conf", "type": "Dict[str, Optional[Union[float, int, str, Tuple[float, float]]]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "audio_conf", "type": "Dict[str, Optional[Union[float, int, str, Tuple[float, float]]]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "audio_conf", "type": "Dict[str, Optional[Union[float, int, str, Tuple[float, float]]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "load_audio", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "audio_path", "type": "str"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "stft", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "spect", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "magphase", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "D", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "log1p", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "spect", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "spect", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "std", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "Constant", "type": "Type[autokeras.constant.Constant]"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "sound", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "windows", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "audio_conf", "type": "Dict[str, Optional[Union[float, int, str, Tuple[float, float]]]]"}, {"lineNumber": 36, "col_offset": 56, "nodeName": "windows", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "audio_conf", "type": "Dict[str, Optional[Union[float, int, str, Tuple[float, float]]]]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "sample_rate", "type": "Optional[Union[float, int, str, Tuple[float, float]]]"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "window_size", "type": "Optional[Union[float, int, str, Tuple[float, float]]]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "sample_rate", "type": "Optional[Union[float, int, str, Tuple[float, float]]]"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "window_stride", "type": "Optional[Union[float, int, str, Tuple[float, float]]]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "librosa", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "n_fft", "type": "int"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "hop_length", "type": "int"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "win_length", "type": "int"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "window", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "librosa", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "mean", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "std", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "add_", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "div_", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "std", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "parse_audio", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "voice_recognizer", "type": "autokeras.pretrained.voice_recognizer.VoiceRecognizer"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "spect", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "sound", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "sound", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "sound", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "SpectrogramParser", "type": "Type[SpectrogramParser]"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "self", "type": "SpectrogramParser"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "spect", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "spect", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "spect", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "spect", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "parser", "type": "SpectrogramParser"}]