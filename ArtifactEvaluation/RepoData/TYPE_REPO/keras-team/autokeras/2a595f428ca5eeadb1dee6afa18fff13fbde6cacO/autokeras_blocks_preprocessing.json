[{"lineNumber": 13, "col_offset": 20, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "block_module", "type": "module"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "block_module", "type": "module"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "block_module", "type": "module"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "block_module", "type": "module"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "block_module", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "axis", "type": "int"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "axis", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "output_sequence_length", "type": "Optional[int]"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "output_sequence_length", "type": "Optional[int]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "ngrams", "type": "Optional[Union[Tuple[int], int]]"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "ngrams", "type": "Optional[Union[Tuple[int], int]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 150, "col_offset": 31, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "column_types", "type": "None"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "column_names", "type": "None"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "instance", "type": "CategoricalToNumerical"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 246, "col_offset": 32, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "instance", "type": "CategoricalToNumerical"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Normalization"}, {"lineNumber": 29, "col_offset": 59, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "column_type", "type": "Any"}, {"lineNumber": 238, "col_offset": 69, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "cls", "type": "Type[CategoricalToNumerical]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "instance", "type": "CategoricalToNumerical"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "instance", "type": "CategoricalToNumerical"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "Normalization", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "axis", "type": "int"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "TextVectorization", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "Union", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "Int", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "TextVectorization", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "_get_fraction_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 195, "col_offset": 42, "nodeName": "_get_fraction_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "translation_factor", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "zoom_factor", "type": "Any"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "column_type", "type": "Any"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "CATEGORICAL", "type": "str"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "MultiColumnCategoricalEncoding", "type": "Type[autokeras.keras_layers.MultiColumnCategoricalEncoding]"}, {"lineNumber": 238, "col_offset": 59, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "column_types", "type": "Any"}, {"lineNumber": 252, "col_offset": 39, "nodeName": "column_names", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "axis", "type": "int"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "self", "type": "Normalization"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "hp", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "output_sequence_length", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "hp", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "max_tokens", "type": "int"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "ngrams", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "RandomTranslation", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "height_factor", "type": "Any"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "width_factor", "type": "Any"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "hp", "type": "Any"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "hp", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "RandomFlip", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "RandomRotation", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "rotation_factor", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 195, "col_offset": 42, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "RandomContrast", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "contrast_factor", "type": "Any"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "adapters", "type": "module"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "INT", "type": "str"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "NONE", "type": "str"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "keras_layers", "type": "module"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 252, "col_offset": 39, "nodeName": "self", "type": "CategoricalToNumerical"}, {"lineNumber": 29, "col_offset": 48, "nodeName": "self", "type": "Normalization"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "self", "type": "TextToIntSequence"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "self", "type": "TextToNgramVector"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "vertical_flip", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "flip_mode", "type": "str"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "self", "type": "ImageAugmentation"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "keras_layers", "type": "module"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "encoding", "type": "List[str]"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "keras_layers", "type": "module"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "horizontal_flip", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}]