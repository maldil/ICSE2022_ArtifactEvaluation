[{"lineNumber": 26, "col_offset": 17, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 507, "col_offset": 28, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 576, "col_offset": 18, "nodeName": "KerasApplicationBlock", "type": "Type[KerasApplicationBlock]"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "KerasApplicationBlock", "type": "Type[KerasApplicationBlock]"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "Block", "type": "Type[autokeras.engine.block.Block]"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "ResNet50", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "ResNet101", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "ResNet152", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "ResNet50V2", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "ResNet101V2", "type": "Any"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "ResNet152V2", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "block_module", "type": "module"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "block_module", "type": "module"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "block_module", "type": "module"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "block_module", "type": "module"}, {"lineNumber": 367, "col_offset": 18, "nodeName": "block_module", "type": "module"}, {"lineNumber": 507, "col_offset": 28, "nodeName": "block_module", "type": "module"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "block_module", "type": "module"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "applications", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "applications", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "applications", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "applications", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "applications", "type": "Any"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "applications", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "use_batchnorm", "type": "Optional[bool]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "use_batchnorm", "type": "Optional[bool]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "bidirectional", "type": "Optional[bool]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "bidirectional", "type": "Optional[bool]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "layer_type", "type": "Optional[int]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "layer_type", "type": "Optional[int]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "kernel_size", "type": "Optional[int]"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "kernel_size", "type": "Optional[int]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "num_blocks", "type": "Optional[int]"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "num_blocks", "type": "Optional[int]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "num_layers", "type": "Optional[int]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "max_pooling", "type": "Optional[bool]"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "max_pooling", "type": "Optional[bool]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "separable", "type": "Optional[bool]"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "separable", "type": "Optional[bool]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 214, "col_offset": 22, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "separable", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "separable", "type": "Any"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "separable", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "head_size", "type": "Optional[int]"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "head_size", "type": "Optional[int]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "num_heads", "type": "Optional[int]"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "num_heads", "type": "Optional[int]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "projection_dim", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "query_dense", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "key_dense", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "value_dense", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "combine_heads", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "dim_key", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "scaled_score", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "max_features", "type": "int"}, {"lineNumber": 416, "col_offset": 28, "nodeName": "max_features", "type": "int"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "pretraining", "type": "Optional[str]"}, {"lineNumber": 417, "col_offset": 27, "nodeName": "pretraining", "type": "Optional[str]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "embedding_dim", "type": "Optional[int]"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "embedding_dim", "type": "Optional[int]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "num_heads", "type": "Optional[int]"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "num_heads", "type": "Optional[int]"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "dense_dim", "type": "Optional[int]"}, {"lineNumber": 420, "col_offset": 26, "nodeName": "dense_dim", "type": "Optional[int]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "dropout", "type": "Optional[int]"}, {"lineNumber": 421, "col_offset": 23, "nodeName": "dropout", "type": "Optional[int]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "layernorm1", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "layernorm2", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "dropout1", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "dropout2", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "attn_output", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "add_inputs_1", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "out1", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "ffn_output", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "ffn_output", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "add_inputs_2", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "pos_ones", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 504, "col_offset": 15, "nodeName": "positions", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 516, "col_offset": 26, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "models", "type": "Any"}, {"lineNumber": 517, "col_offset": 22, "nodeName": "models", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "min_size", "type": "Any"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "pretrained", "type": "Union[Any, bool]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 604, "col_offset": 23, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "max_features", "type": "int"}, {"lineNumber": 666, "col_offset": 28, "nodeName": "max_features", "type": "int"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "pretraining", "type": "Optional[str]"}, {"lineNumber": 667, "col_offset": 27, "nodeName": "pretraining", "type": "Optional[str]"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "embedding_dim", "type": "Optional[int]"}, {"lineNumber": 668, "col_offset": 29, "nodeName": "embedding_dim", "type": "Optional[int]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 669, "col_offset": 23, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 678, "col_offset": 15, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 713, "col_offset": 15, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "hp", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "GRU", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "rnn_layers", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 212, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "separable", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "separable", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "get_max_pooling", "type": "Callable[[Any], Any]"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 305, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 306, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 320, "col_offset": 11, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "num_heads", "type": "int"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 328, "col_offset": 38, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 329, "col_offset": 35, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 330, "col_offset": 33, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 331, "col_offset": 35, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 332, "col_offset": 37, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "query_dense", "type": "Any"}, {"lineNumber": 334, "col_offset": 28, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 335, "col_offset": 14, "nodeName": "key_dense", "type": "Any"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "value_dense", "type": "Any"}, {"lineNumber": 336, "col_offset": 28, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "attention", "type": "Any"}, {"lineNumber": 340, "col_offset": 19, "nodeName": "weights", "type": "Any"}, {"lineNumber": 340, "col_offset": 29, "nodeName": "attention", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 340, "col_offset": 44, "nodeName": "query", "type": "Any"}, {"lineNumber": 340, "col_offset": 51, "nodeName": "key", "type": "Any"}, {"lineNumber": 340, "col_offset": 56, "nodeName": "value", "type": "Any"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "attention", "type": "Any"}, {"lineNumber": 344, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "attention", "type": "Any"}, {"lineNumber": 347, "col_offset": 17, "nodeName": "combine_heads", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "concat_attention", "type": "Any"}, {"lineNumber": 354, "col_offset": 16, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 354, "col_offset": 26, "nodeName": "query", "type": "Any"}, {"lineNumber": 354, "col_offset": 33, "nodeName": "key", "type": "Any"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "cast", "type": "Any"}, {"lineNumber": 355, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 356, "col_offset": 23, "nodeName": "score", "type": "Any"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 357, "col_offset": 32, "nodeName": "scaled_score", "type": "Any"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 358, "col_offset": 27, "nodeName": "weights", "type": "Any"}, {"lineNumber": 358, "col_offset": 36, "nodeName": "value", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 359, "col_offset": 23, "nodeName": "weights", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 363, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 364, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 424, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 443, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 443, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "validate_num_inputs", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 444, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 445, "col_offset": 22, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 449, "col_offset": 24, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "dense_dim", "type": "Any"}, {"lineNumber": 458, "col_offset": 18, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 462, "col_offset": 14, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "LayerNormalization", "type": "Any"}, {"lineNumber": 468, "col_offset": 21, "nodeName": "LayerNormalization", "type": "Any"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 469, "col_offset": 34, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 470, "col_offset": 34, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 476, "col_offset": 59, "nodeName": "hp", "type": "Any"}, {"lineNumber": 476, "col_offset": 63, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "pos_array_funct", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 479, "col_offset": 41, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 479, "col_offset": 49, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 483, "col_offset": 62, "nodeName": "hp", "type": "Any"}, {"lineNumber": 484, "col_offset": 62, "nodeName": "positions", "type": "Any"}, {"lineNumber": 488, "col_offset": 44, "nodeName": "hp", "type": "Any"}, {"lineNumber": 488, "col_offset": 48, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 489, "col_offset": 22, "nodeName": "dropout1", "type": "Any"}, {"lineNumber": 489, "col_offset": 31, "nodeName": "attn_output", "type": "Any"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "layernorm1", "type": "Any"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "add_inputs_1", "type": "Any"}, {"lineNumber": 492, "col_offset": 21, "nodeName": "ffn", "type": "Any"}, {"lineNumber": 492, "col_offset": 25, "nodeName": "out1", "type": "Any"}, {"lineNumber": 493, "col_offset": 21, "nodeName": "dropout2", "type": "Any"}, {"lineNumber": 493, "col_offset": 30, "nodeName": "ffn_output", "type": "Any"}, {"lineNumber": 495, "col_offset": 17, "nodeName": "layernorm2", "type": "Any"}, {"lineNumber": 495, "col_offset": 28, "nodeName": "add_inputs_2", "type": "Any"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "range", "type": "Any"}, {"lineNumber": 502, "col_offset": 20, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 502, "col_offset": 35, "nodeName": "positions", "type": "Any"}, {"lineNumber": 503, "col_offset": 20, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 503, "col_offset": 30, "nodeName": "pos_ones", "type": "Any"}, {"lineNumber": 503, "col_offset": 40, "nodeName": "positions", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 521, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "pretrained", "type": "bool"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "pretrained", "type": "Union[Any, bool]"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "version", "type": "Any"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "version", "type": "Any"}, {"lineNumber": 546, "col_offset": 19, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 547, "col_offset": 11, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 548, "col_offset": 12, "nodeName": "min_size", "type": "int"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 566, "col_offset": 12, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 573, "col_offset": 21, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 590, "col_offset": 11, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 591, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 607, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Any]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 672, "col_offset": 17, "nodeName": "get_config", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 684, "col_offset": 22, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 688, "col_offset": 24, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 692, "col_offset": 11, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 706, "col_offset": 22, "nodeName": "layer", "type": "Any"}, {"lineNumber": 706, "col_offset": 28, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 707, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 708, "col_offset": 22, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 711, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 712, "col_offset": 12, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "use_batchnorm", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 203, "col_offset": 26, "nodeName": "num_blocks", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "separable", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 222, "col_offset": 40, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "get_sep_conv", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "get_conv", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "layer_utils", "type": "module"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 283, "col_offset": 28, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 305, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 310, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "layers", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "layers", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "layers", "type": "Any"}, {"lineNumber": 333, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 333, "col_offset": 30, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 339, "col_offset": 14, "nodeName": "var", "type": "Any"}, {"lineNumber": 340, "col_offset": 29, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 344, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 345, "col_offset": 60, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 354, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 355, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 356, "col_offset": 44, "nodeName": "dim_key", "type": "Any"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 363, "col_offset": 43, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 363, "col_offset": 54, "nodeName": "projection_dim", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 413, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 415, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 426, "col_offset": 28, "nodeName": "max_features", "type": "int"}, {"lineNumber": 427, "col_offset": 27, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 428, "col_offset": 29, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 429, "col_offset": 25, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 430, "col_offset": 25, "nodeName": "dense_dim", "type": "Any"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 443, "col_offset": 17, "nodeName": "nest", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 445, "col_offset": 22, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 445, "col_offset": 42, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 449, "col_offset": 24, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 449, "col_offset": 46, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 453, "col_offset": 38, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 455, "col_offset": 38, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 458, "col_offset": 18, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 458, "col_offset": 34, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 462, "col_offset": 14, "nodeName": "keras", "type": "Any"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "layers", "type": "Any"}, {"lineNumber": 468, "col_offset": 21, "nodeName": "layers", "type": "Any"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 472, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 478, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 478, "col_offset": 30, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 485, "col_offset": 22, "nodeName": "Add", "type": "Any"}, {"lineNumber": 485, "col_offset": 45, "nodeName": "token_embedding", "type": "Any"}, {"lineNumber": 486, "col_offset": 45, "nodeName": "position_embedding", "type": "Any"}, {"lineNumber": 490, "col_offset": 23, "nodeName": "Add", "type": "Any"}, {"lineNumber": 490, "col_offset": 46, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 490, "col_offset": 59, "nodeName": "attn_output", "type": "Any"}, {"lineNumber": 494, "col_offset": 23, "nodeName": "Add", "type": "Any"}, {"lineNumber": 494, "col_offset": 46, "nodeName": "out1", "type": "Any"}, {"lineNumber": 494, "col_offset": 52, "nodeName": "ffn_output", "type": "Any"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 500, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 501, "col_offset": 44, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 502, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 503, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 515, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 523, "col_offset": 26, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 528, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 531, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 539, "col_offset": 25, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "models", "type": "Any"}, {"lineNumber": 542, "col_offset": 22, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 547, "col_offset": 11, "nodeName": "hp", "type": "Any"}, {"lineNumber": 549, "col_offset": 34, "nodeName": "min_size", "type": "Union[Any, int]"}, {"lineNumber": 550, "col_offset": 38, "nodeName": "min_size", "type": "Union[Any, int]"}, {"lineNumber": 554, "col_offset": 14, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 557, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 560, "col_offset": 55, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 566, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 566, "col_offset": 30, "nodeName": "Boolean", "type": "Any"}, {"lineNumber": 588, "col_offset": 29, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 591, "col_offset": 24, "nodeName": "RESNET_V1", "type": "Dict[str, Any]"}, {"lineNumber": 591, "col_offset": 37, "nodeName": "RESNET_V2", "type": "Dict[str, Any]"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 593, "col_offset": 21, "nodeName": "RESNET_V1", "type": "Dict[str, Any]"}, {"lineNumber": 600, "col_offset": 36, "nodeName": "pretrained", "type": "Optional[bool]"}, {"lineNumber": 601, "col_offset": 32, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 603, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 609, "col_offset": 23, "nodeName": "version", "type": "Any"}, {"lineNumber": 634, "col_offset": 29, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 636, "col_offset": 36, "nodeName": "pretrained", "type": "Optional[bool]"}, {"lineNumber": 639, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 663, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 665, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 674, "col_offset": 28, "nodeName": "max_features", "type": "int"}, {"lineNumber": 675, "col_offset": 27, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 676, "col_offset": 29, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 677, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 681, "col_offset": 21, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 681, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 684, "col_offset": 22, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 684, "col_offset": 42, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 688, "col_offset": 24, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 688, "col_offset": 46, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 694, "col_offset": 20, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 707, "col_offset": 11, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 708, "col_offset": 22, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 710, "col_offset": 22, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 712, "col_offset": 50, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "self", "type": "DenseBlock"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "Flatten", "type": "Type[autokeras.blocks.reduction.Flatten]"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "hp", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "hp", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "hp", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "units", "type": "Any"}, {"lineNumber": 79, "col_offset": 58, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "hp", "type": "Any"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "self", "type": "RNNBlock"}, {"lineNumber": 156, "col_offset": 65, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 203, "col_offset": 26, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 222, "col_offset": 40, "nodeName": "hp", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "hp", "type": "Any"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "layer_utils", "type": "module"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "layer_utils", "type": "module"}, {"lineNumber": 232, "col_offset": 40, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "hp", "type": "Any"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "hp", "type": "Any"}, {"lineNumber": 252, "col_offset": 39, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 257, "col_offset": 60, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 259, "col_offset": 54, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "length", "type": "Any"}, {"lineNumber": 283, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "hp", "type": "Any"}, {"lineNumber": 333, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "query", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "key", "type": "Any"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 345, "col_offset": 60, "nodeName": "self", "type": "MultiHeadSelfAttention"}, {"lineNumber": 355, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 355, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "math", "type": "Any"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 413, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 424, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 426, "col_offset": 28, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 427, "col_offset": 27, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 428, "col_offset": 29, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 429, "col_offset": 25, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 430, "col_offset": 25, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 445, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 449, "col_offset": 46, "nodeName": "hp", "type": "Any"}, {"lineNumber": 453, "col_offset": 38, "nodeName": "hp", "type": "Any"}, {"lineNumber": 455, "col_offset": 38, "nodeName": "hp", "type": "Any"}, {"lineNumber": 458, "col_offset": 34, "nodeName": "hp", "type": "Any"}, {"lineNumber": 462, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 463, "col_offset": 13, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 463, "col_offset": 26, "nodeName": "dense_dim", "type": "Any"}, {"lineNumber": 464, "col_offset": 13, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 464, "col_offset": 26, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 473, "col_offset": 26, "nodeName": "Embedding", "type": "Type[Embedding]"}, {"lineNumber": 478, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 480, "col_offset": 29, "nodeName": "Embedding", "type": "Type[Embedding]"}, {"lineNumber": 485, "col_offset": 22, "nodeName": "layers", "type": "Any"}, {"lineNumber": 487, "col_offset": 22, "nodeName": "MultiHeadSelfAttention", "type": "Type[MultiHeadSelfAttention]"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 488, "col_offset": 27, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 490, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 494, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 500, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 521, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 523, "col_offset": 26, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 531, "col_offset": 11, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 533, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 539, "col_offset": 25, "nodeName": "hp", "type": "Any"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 542, "col_offset": 22, "nodeName": "hp", "type": "Any"}, {"lineNumber": 542, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 544, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "Resizing", "type": "Any"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 557, "col_offset": 11, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 558, "col_offset": 25, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 563, "col_offset": 20, "nodeName": "models", "type": "Any"}, {"lineNumber": 566, "col_offset": 30, "nodeName": "hp", "type": "Any"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "models", "type": "Any"}, {"lineNumber": 588, "col_offset": 38, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 594, "col_offset": 13, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 595, "col_offset": 21, "nodeName": "RESNET_V2", "type": "Dict[str, Any]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 607, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 609, "col_offset": 23, "nodeName": "self", "type": "ResNetBlock"}, {"lineNumber": 634, "col_offset": 38, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 637, "col_offset": 45, "nodeName": "Xception", "type": "Any"}, {"lineNumber": 663, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 672, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 674, "col_offset": 28, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 675, "col_offset": 27, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 676, "col_offset": 29, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 677, "col_offset": 23, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 681, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 684, "col_offset": 42, "nodeName": "hp", "type": "Any"}, {"lineNumber": 688, "col_offset": 46, "nodeName": "hp", "type": "Any"}, {"lineNumber": 694, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 695, "col_offset": 26, "nodeName": "max_features", "type": "int"}, {"lineNumber": 696, "col_offset": 27, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 702, "col_offset": 26, "nodeName": "max_features", "type": "int"}, {"lineNumber": 703, "col_offset": 27, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 710, "col_offset": 22, "nodeName": "hp", "type": "Any"}, {"lineNumber": 712, "col_offset": 26, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 712, "col_offset": 41, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "reduction", "type": "module"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "Bidirectional", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "conv", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "pool", "type": "Any"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 259, "col_offset": 45, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 313, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 325, "col_offset": 41, "nodeName": "head_size", "type": "Any"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "num_heads", "type": "Any"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 345, "col_offset": 45, "nodeName": "attention", "type": "Any"}, {"lineNumber": 355, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 463, "col_offset": 13, "nodeName": "layers", "type": "Any"}, {"lineNumber": 464, "col_offset": 13, "nodeName": "layers", "type": "Any"}, {"lineNumber": 473, "col_offset": 49, "nodeName": "max_features", "type": "int"}, {"lineNumber": 474, "col_offset": 48, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 475, "col_offset": 50, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 476, "col_offset": 44, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 480, "col_offset": 52, "nodeName": "maxlen", "type": "Any"}, {"lineNumber": 481, "col_offset": 51, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 482, "col_offset": 53, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 483, "col_offset": 47, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 485, "col_offset": 22, "nodeName": "keras", "type": "Any"}, {"lineNumber": 490, "col_offset": 23, "nodeName": "keras", "type": "Any"}, {"lineNumber": 494, "col_offset": 23, "nodeName": "keras", "type": "Any"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 542, "col_offset": 48, "nodeName": "keys", "type": "Any"}, {"lineNumber": 544, "col_offset": 27, "nodeName": "keys", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "min_size", "type": "Union[Any, int]"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 553, "col_offset": 20, "nodeName": "min_size", "type": "Union[Any, int]"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 556, "col_offset": 47, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 558, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 563, "col_offset": 20, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 563, "col_offset": 32, "nodeName": "version", "type": "Any"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 568, "col_offset": 32, "nodeName": "version", "type": "Any"}, {"lineNumber": 571, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 597, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 637, "col_offset": 45, "nodeName": "applications", "type": "Any"}, {"lineNumber": 695, "col_offset": 26, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 697, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 702, "col_offset": 26, "nodeName": "self", "type": "Embedding"}, {"lineNumber": 712, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "in_layer", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "Choice", "type": "Any"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 313, "col_offset": 47, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 473, "col_offset": 49, "nodeName": "self", "type": "Transformer"}, {"lineNumber": 485, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 490, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 494, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 542, "col_offset": 48, "nodeName": "models", "type": "Any"}, {"lineNumber": 544, "col_offset": 27, "nodeName": "models", "type": "Any"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "experimental", "type": "Any"}, {"lineNumber": 552, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 553, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 571, "col_offset": 28, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 598, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 697, "col_offset": 29, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "return_sequences", "type": "bool"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "hp", "type": "Any"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "_get_padding", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 46, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 251, "col_offset": 59, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "_get_padding", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 257, "col_offset": 46, "nodeName": "output_node", "type": "Any"}, {"lineNumber": 536, "col_offset": 50, "nodeName": "shape", "type": "Any"}, {"lineNumber": 542, "col_offset": 48, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 544, "col_offset": 27, "nodeName": "self", "type": "KerasApplicationBlock"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 552, "col_offset": 30, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 553, "col_offset": 30, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 599, "col_offset": 44, "nodeName": "version", "type": "Optional[str]"}, {"lineNumber": 247, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 247, "col_offset": 62, "nodeName": "j", "type": "int"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "self", "type": "ConvBlock"}, {"lineNumber": 256, "col_offset": 46, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 536, "col_offset": 50, "nodeName": "input_node", "type": "Any"}]