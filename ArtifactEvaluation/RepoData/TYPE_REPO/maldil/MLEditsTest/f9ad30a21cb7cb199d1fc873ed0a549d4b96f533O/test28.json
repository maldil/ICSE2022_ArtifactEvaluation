[{"lineNumber": 10, "col_offset": 0, "nodeName": "contract_path", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "_einsum", "type": "Callable[..., Any]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "valid_contract_kwargs", "type": "List[str]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "unknown_kwargs", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "path_type", "type": "Union[Any, str]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "memory_limit", "type": "Optional[Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "einsum_call_arg", "type": "Union[Any, bool]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "use_blas", "type": "Union[Any, bool]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "use_blas", "type": "Union[Any, bool]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "input_list", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "input_sets", "type": "List[Set[Any]]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "output_set", "type": "Set[Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "indices", "type": "Set[Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "fn", "type": "Any"}, {"lineNumber": 12, "col_offset": 22, "nodeName": "k", "type": "str"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "unknown_kwargs", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "input_subscripts", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "output_subscript", "type": "Any"}, {"lineNumber": 27, "col_offset": 40, "nodeName": "operands", "type": "Any"}, {"lineNumber": 27, "col_offset": 51, "nodeName": "parse_einsum_input", "type": "Any"}, {"lineNumber": 27, "col_offset": 77, "nodeName": "operands", "type": "Tuple[Any, ...]"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "split", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "output_subscript", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "get_func", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "einsum_str", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "operands", "type": "Tuple[Any, ...]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "einsum_str", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "fn", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "einsum_str", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "einsum_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "einsum_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "num_args", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "constants", "type": "None"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "convert_fn", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "einsum_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "einsum_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "num_args", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "constants", "type": "None"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "convert_fn", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 27, "col_offset": 51, "nodeName": "parser", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "input_subscripts", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "input_list", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "replace", "type": "Any"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "backends", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "fn", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "operands", "type": "Tuple[Any, ...]"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "operands", "type": "Tuple[Any, ...]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "has_valid_einsum_chars_only", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "einsum_str", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "einsum_str", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "einsum_str", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "convert_to_valid_einsum_chars", "type": "Any"}, {"lineNumber": 53, "col_offset": 58, "nodeName": "einsum_str", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "operands", "type": "Tuple[Any, ...]"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "tmp_const_ops", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "num_args", "type": "int"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "new_contraction_list", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "constants", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "new_ops", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "_core_contract", "type": "Any"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "backend", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "tmp_const_ops", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "num_args", "type": "int"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "new_contraction_list", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "constants", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "new_ops", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "_core_contract", "type": "Any"}, {"lineNumber": 154, "col_offset": 44, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "backend", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 12, "col_offset": 29, "nodeName": "k", "type": "str"}, {"lineNumber": 12, "col_offset": 32, "nodeName": "v", "type": "Any"}, {"lineNumber": 12, "col_offset": 38, "nodeName": "items", "type": "Callable"}, {"lineNumber": 12, "col_offset": 56, "nodeName": "k", "type": "str"}, {"lineNumber": 12, "col_offset": 65, "nodeName": "valid_contract_kwargs", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 85, "nodeName": "unknown_kwargs", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "input_subscripts", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "operands", "type": "Tuple[Any, ...]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "operands", "type": "Tuple[Any, ...]"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "parser", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "parser", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "new_ops", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "new_contraction_list", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "format_const_einsum_str", "type": "Any"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 81, "col_offset": 74, "nodeName": "out", "type": "Any"}, {"lineNumber": 81, "col_offset": 87, "nodeName": "backend", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "parse_constants", "type": "Any"}, {"lineNumber": 82, "col_offset": 65, "nodeName": "einsum_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "convert_fn", "type": "str"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "convert_fn", "type": "str"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "convert_fn", "type": "str"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "einsum_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "einsum_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "num_args", "type": "int"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "constants", "type": "None"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "new_ops", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "new_contraction_list", "type": "Any"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "format_const_einsum_str", "type": "Any"}, {"lineNumber": 146, "col_offset": 55, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 154, "col_offset": 44, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 154, "col_offset": 71, "nodeName": "out", "type": "Any"}, {"lineNumber": 154, "col_offset": 84, "nodeName": "backend", "type": "Any"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "parse_constants", "type": "Any"}, {"lineNumber": 155, "col_offset": 65, "nodeName": "einsum_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "convert_fn", "type": "str"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "convert_fn", "type": "str"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "convert_fn", "type": "str"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 12, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "find_output_str", "type": "Any"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "einsum_str", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 54, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "get", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "tmp_const_ops", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 68, "nodeName": "keys", "type": "Any"}, {"lineNumber": 82, "col_offset": 65, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "build_expression", "type": "Any"}, {"lineNumber": 93, "col_offset": 64, "nodeName": "backend", "type": "Any"}, {"lineNumber": 93, "col_offset": 73, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 93, "col_offset": 81, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "tmp_const_ops", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "num_args", "type": "int"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "new_contraction_list", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "constants", "type": "Any"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "new_ops", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 54, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "get", "type": "Any"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 50, "nodeName": "tmp_const_ops", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 68, "nodeName": "keys", "type": "Any"}, {"lineNumber": 155, "col_offset": 65, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "build_expression", "type": "Any"}, {"lineNumber": 166, "col_offset": 64, "nodeName": "backend", "type": "Any"}, {"lineNumber": 166, "col_offset": 73, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 166, "col_offset": 81, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "parser", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 71, "col_offset": 66, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 71, "col_offset": 72, "nodeName": "num_args", "type": "int"}, {"lineNumber": 73, "col_offset": 68, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "backends", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "new_ops", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "new_contraction_list", "type": "Any"}, {"lineNumber": 117, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "format_const_einsum_str", "type": "Any"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 144, "col_offset": 66, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 144, "col_offset": 72, "nodeName": "num_args", "type": "int"}, {"lineNumber": 146, "col_offset": 68, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "backends", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 66, "col_offset": 58, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 71, "col_offset": 72, "nodeName": "self", "type": "ContractExpression1"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "get", "type": "Any"}, {"lineNumber": 116, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 116, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 58, "nodeName": "tmp_const_ops", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 76, "nodeName": "keys", "type": "Any"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 139, "col_offset": 58, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 144, "col_offset": 72, "nodeName": "self", "type": "ContractExpression2"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 116, "col_offset": 74, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 116, "col_offset": 80, "nodeName": "num_args", "type": "int"}, {"lineNumber": 118, "col_offset": 76, "nodeName": "constants_dict", "type": "Any"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 111, "col_offset": 66, "nodeName": "contraction_list", "type": "Any"}, {"lineNumber": 116, "col_offset": 80, "nodeName": "self", "type": "Any"}]